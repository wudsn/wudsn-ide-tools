mads 2.1.6
  1142 					opt l+
   106 = 0000				?EXTDETECT = 0
   107 = 0000				?VBXDETECT = 0
   108
   109 2075				RCDATA 'keymap.bin' KEY_MAP 0 0 0 0 0 0 0 0
Macro: RESOURCE.RCDATA [Source: resource.asm]
     2 = 00FF			len = .filesize('keymap.bin')-0
    28 2075				org main.KEY_MAP
    30 8000-80FE> 6C 6A 3B 8A + 	ins 'keymap.bin',0
    32 					.print '$R RCDATA  ',main.KEY_MAP,'..',*-1," 'keymap.bin'"
    32 				$R RCDATA  $8000..$80FE 'keymap.bin'
Source: artur.a65
   110 80FF				RCASM 'dlist.asm' DISPLAY_LIST_ADDRESS 0 0 0 0 0 0 0 0
Macro: RESOURCE.RCASM [Source: resource.asm]
     2 80FF				org RESORIGIN
     4 = 0027			len = .sizeof(_DISPLAY_LIST_ADDRESS)
     6 				mcpy	ift main.DISPLAY_LIST_ADDRESS+len >= $bc20
    11 2075-20BC> 20 41 20		jsr sys.off
    13 2078 A9 96 85 88 A9 20 +  MWA #DATA EDX
    13 2080 A9 00 85 8C A9 70 +  MWA #MAIN.DISPLAY_LIST_ADDRESS ECX
    13 2088 A9 27 85 84 A9 00 +  MWA #LEN EAX
    13 2090 20 00 20		 JSR RESOURCE.MEMCPY
    15 2093 4C 65 20			jmp sys.on
    16 2096			data
Source: dlist.asm
     4 = 0000			DL_BLANK1 = 0; // 1 blank line
     5 = 0010			DL_BLANK2 = %00010000; // 2 blank lines
     6 = 0020			DL_BLANK3 = %00100000; // 3 blank lines
     7 = 0030			DL_BLANK4 = %00110000; // 4 blank lines
     8 = 0040			DL_BLANK5 = %01000000; // 5 blank lines
     9 = 0050			DL_BLANK6 = %01010000; // 6 blank lines
    10 = 0060			DL_BLANK7 = %01100000; // 7 blank lines
    11 = 0070			DL_BLANK8 = %01110000; // 8 blank lines
    13 = 0080			DL_DLI = %10000000; // Order to run DLI
    14 = 0040			DL_LMS = %01000000; // Order to set new memory address
    15 = 0020			DL_VSCROLL = %00100000; // Turn on vertical scroll on this line
    16 = 0010			DL_HSCROLL = %00010000; // Turn on horizontal scroll on this line
    18 = 0002			DL_MODE_40x24T2 = 2; // Antic Modes
    19 = 0004			DL_MODE_40x24T5 = 4;
    20 = 0005			DL_MODE_40x12T5 = 5;
    21 = 0006			DL_MODE_20x24T5 = 6;
    22 = 0007			DL_MODE_20x12T5 = 7;
    23 = 0008			DL_MODE_40x24G4 = 8;
    24 = 0009			DL_MODE_80x48G2 = 9;
    25 = 000A			DL_MODE_80x48G4 = $A;
    26 = 000B			DL_MODE_160x96G2 = $B;
    27 = 000C			DL_MODE_160x192G2 = $C;
    28 = 000D			DL_MODE_160x96G4 = $D;
    29 = 000E			DL_MODE_160x192G4 = $E;
    30 = 000F			DL_MODE_320x192G2 = $F;
    32 = 0001			DL_JMP = %00000001; // Order to jump
    33 = 0041			DL_JVB = %01000001; // Jump to begining
Source: const.inc
     1 = 0028			SCREEN_WIDTH = 40;
     2 = 0018			SCREEN_HEIGHT = 24;
     3 = 03C0			SCREEN_SIZE = SCREEN_HEIGHT * SCREEN_WIDTH;
     4 = 0008			FULLSCREEN_UNDO_COUNT = 8; // each one takes 960 bytes
     5 = 0040			UNDO_ACTIONS_COUNT = 64;
     6 = 0069			BIN_HEADER_SIZE = 105;
     8 = 7000			FREE_BOTTOM = $7000;  
    10 = 7000			PMG = FREE_BOTTOM; // $7000
    11 = 7000			DISPLAY_LIST_ADDRESS = PMG;
    12 = 7100			BIN_HEADER = PMG + $100;
    14 = 7400			CUSTOM_CHARSET = PMG + $400; // $7400
    16 = 7800			VIDEO_BUFFER = CUSTOM_CHARSET + $400; // $7800  
    17 = 7BC0			MENU_BAR = VIDEO_BUFFER + SCREEN_SIZE; 
    18 = 7C00			VIDEO_RAM_ADDRESS = VIDEO_BUFFER + $400; // $7c00 
    19 = 7FC0			STATUS_BAR = VIDEO_RAM_ADDRESS + SCREEN_SIZE;  
    20 = 8000			KEY_MAP = FREE_BOTTOM + $1000;        // $8000 -> $8100
    21 = 8100			UNDO_SCREENS = $8100;  // takes 960 * FULLSCREEN_UNDO_COUNT bytes  
    23 = E000			DEFAULT_CHARSET = $E000;
    25 = 00FF			NONE = $ff;
    28 = 00FF			UNDO_NONE = $ff;
    29 = 00FE			UNDO_FROM_BUFFER = $fe;
    31 = 0000			MODE_TYPE = 0;
    32 = 0001			MODE_DRAW = 1;
    33 = 0002			MODE_BLOCK = 2;
    34 = 0003			MODE_LAST = 3;
    35 = 00FF			MODE_EXIT = $ff;
    37 = 0000			TOOL_DRAW = 0;
    38 = 0001			TOOL_LINE = 1;
    39 = 0002			TOOL_FRAME = 2;
    40 = 0003			TOOL_BLOCK = 3;
    42 = 000A			KEY_DELAY = 10;
    43 = 0004			JOY_DELAY = 4;
    44 = 0014			FIRE_DELAY = 20;
    45 = 000A			OS_REPEAT_DELAY = 10;
    46 = 0005			OS_REPEAT_RATE = 5;
    48 = 0030			PMG_XOFFSET = 48;
    49 = 000F			PMG_YOFFSET = 15;
    51 = 0092			BG_DEFAULT = $92;
    52 = 009A			FG_DEFAULT = $9a;
    54 = 0011			MAX_BRUSH_HISTORY = 17;
    56 = 0000			CODE_DISPLAY_NONE = 0;
    57 = 0001			CODE_DISPLAY_ANTIC = 1;
    58 = 0002			CODE_DISPLAY_ATASCII = 2;
    40 7000			dl_start
    41 7000 F0			    dta DL_BLANK8 + DL_DLI  ; 8 blank lines and display list interrupt call
    42 7001 30			    dta DL_BLANK4 
    43 7002 42 C0 7B		    dta DL_MODE_40x24T2 + DL_LMS, a(MENU_BAR) ; TOP line
    44 7005 90			    dta DL_BLANK2 + DL_DLI
    45 7006 42 00 7C		    dta DL_MODE_40x24T2 + DL_LMS, a(VIDEO_RAM_ADDRESS) ; first editor line
    46 7009 02 02 02 02 02 02 +     :22 dta DL_MODE_40x24T2 ; remaining 23 lines
    47 701F 82			    dta DL_MODE_40x24T2 + DL_DLI ; remaining 23 lines
    48 7020 30			    dta DL_BLANK4 
    49 7021 42 C0 7F		    dta DL_MODE_40x24T2 + DL_LMS, a(STATUS_BAR) ; BOTTOM line
    50 7024 41 00 70		    dta DL_JVB, a(dl_start) ; jump to start
    23 					.print '$R RCASM   ',main.DISPLAY_LIST_ADDRESS,'..',main.DISPLAY_LIST_ADDRESS+len-1," 'dlist.asm'"
    23 				$R RCASM   $7000..$7026 'dlist.asm'
    25 02E2-02E3> 75 20			ini mcpy
Source: artur.a65
   111 20BD				RCDATA 'head.bin' BIN_HEADER 0 0 0 0 0 0 0 0
Macro: RESOURCE.RCDATA [Source: resource.asm]
     2 = 0069			len = .filesize('head.bin')-0
    28 20BD				org main.BIN_HEADER
    30 7100-7168> FF FF 00 20 + 	ins 'head.bin',0
    32 					.print '$R RCDATA  ',main.BIN_HEADER,'..',*-1," 'head.bin'"
    32 				$R RCDATA  $7100..$7168 'head.bin'
Source: artur.a65
   112 				.endl
   113
   114 				; ------------------------------------------------------------
   115
   116 7169				org CODEORIGIN
   117
   118 2000				STATICDATA
Macro: STATICDATA [Source: artur.a65]
     1 2000-58AE> 04 54 52 55 + .by  $04 $54 $52 $55 $45 $00 $05 $46  $41 $4C $53 $45 $00 $00 $00 $04  $90 $8E $98 $98 $00 $12 $AD $AF
     2 2018 A4 A5 00 00 00 00 + .by  $A4 $A5 $00 $00 $00 $00 $00 $00  $B8 $00 $00 $00 $B9 $00 $00 $00  $00 $05 $74 $79 $70 $65 $00 $00
     3 2030 05 64 72 61 77 00 + .by  $05 $64 $72 $61 $77 $00 $00 $05  $62 $6C $6F $63 $6B $00 $28 $A3  $A1 $B0 $B3 $9A $62 $72 $75 $73
     4 2048 68 00 00 B2 A5 B4 + .by  $68 $00 $00 $B2 $A5 $B4 $B5 $B2  $AE $9A $70 $61 $69 $6E $74 $00  $00 $29 $2E $33 $25 $32 $34 $00
     5 2060 29 2E 36 25 32 33 + .by  $29 $2E $36 $25 $32 $33 $25 $00  $06 $A9 $AE $B3 $A5 $B2 $B4 $00  $07 $A9 $AE $B6 $A5 $B2 $B3 $A5
     6 2078 00 28 A3 A1 B0 B3 + .by  $00 $28 $A3 $A1 $B0 $B3 $9A $62  $72 $75 $73 $68 $00 $00 $00 $A4  $72 $61 $77 $00 $00 $00 $AC $69
     7 2090 6E 65 00 00 00 A6 + .by  $6E $65 $00 $00 $00 $A6 $72 $61  $6D $65 $00 $00 $00 $A2 $6C $6F  $63 $6B $00 $04 $A4 $B2 $A1 $B7
     8 20A8 00 04 AC A9 AE A5 + .by  $00 $04 $AC $A9 $AE $A5 $00 $05  $A6 $B2 $A1 $AD $A5 $00 $05 $A2  $AC $AF $A3 $AB $00 $1F $33 $65
     9 20C0 6C 65 63 74 00 61 + .by  $6C $65 $63 $74 $00 $61 $72 $65  $61 $00 $77 $69 $74 $68 $00 $B2  $A5 $B4 $B5 $B2 $AE $00 $6F $72
    10 20D8 00 A6 A9 B2 A5 00 + .by  $00 $A6 $A9 $B2 $A5 $00 $20 $A3  $6F $70 $79 $00 $00 $AD $6F $76  $65 $00 $00 $A6 $69 $6C $6C $00
    11 20F0 00 A9 6E 76 65 72 + .by  $00 $A9 $6E $76 $65 $72 $74 $00  $00 $B3 $61 $76 $65 $00 $00 $00  $02 $00 $00 $00 $0F $25 $6E $74
    12 2108 65 72 00 26 69 6C + .by  $65 $72 $00 $26 $69 $6C $65 $6E  $61 $6D $65 $1A $00 $0C $20 $20  $20 $20 $20 $20 $20 $20 $20 $20
    13 2120 20 20 00 0C B3 E5 + .by  $20 $20 $00 $0C $B3 $E5 $EC $E5  $E3 $F4 $80 $A2 $F2 $F5 $F3 $E8  $00 $0D $24 $65 $76 $69 $63 $65
    14 2138 00 25 72 72 6F 72 + .by  $00 $25 $72 $72 $6F $72 $01 $00  $0D $22 $61 $64 $00 $26 $69 $6C  $65 $6E $61 $6D $65 $01 $00 $08
    15 2150 33 75 63 63 65 73 + .by  $33 $75 $63 $63 $65 $73 $73 $0E  $00 $0C $41 $52 $54 $55 $52 $43  $46 $47 $2E $53 $59 $53 $00 $11
    16 2168 B3 A1 B6 E9 AE A7 + .by  $B3 $A1 $B6 $E9 $AE $A7 $80 $A4  $A1 $B4 $A1 $80 $A2 $AC $AF $A3  $AB $00 $1C $8D $8D $8D $8D $8D
    17 2180 8D 8D 8D 8D 8D 8D + .by  $8D $8D $8D $8D $8D $8D $8D $8D  $8D $8D $8D $8D $8D $8D $8D $8D  $8D $8D $8D $8D $8D $8D $8D $00
    18 2198 1C A1 B2 B4 F5 F2 + .by  $1C $A1 $B2 $B4 $F5 $F2 $80 $8D  $80 $F6 $8E $80 $80 $80 $80 $80  $80 $E2 $EF $E3 $E9 $E1 $EE $F5
    19 21B0 87 92 90 92 90 00 + .by  $87 $92 $90 $92 $90 $00 $12 $A1  $B4 $A1 $B3 $A3 $A9 $A9 $80 $A1  $F2 $F4 $80 $A5 $E4 $E9 $F4 $EF
    20 21C8 F2 00 11 33 34 21 + .by  $F2 $00 $11 $33 $34 $21 $32 $34  $80 $80 $8D $80 $A9 $8F $AF $80  $ED $E5 $EE $F5 $00 $14 $33 $25
    21 21E0 2C 25 23 34 80 8D + .by  $2C $25 $23 $34 $80 $8D $80 $E3  $E8 $E1 $EE $E7 $E5 $80 $ED $EF  $E4 $E5 $00 $11 $2F $30 $34 $29
    22 21F8 2F 2E 80 8D 80 F3 + .by  $2F $2E $80 $8D $80 $F3 $E5 $F4  $F4 $E9 $EE $E7 $F3 $00 $14 $28  $25 $2C $30 $80 $80 $80 $8D $80
    23 2210 F4 E8 E9 F3 80 F3 + .by  $F4 $E8 $E9 $F3 $80 $F3 $E3 $F2  $E5 $E5 $EE $00 $0D $B0 $F2 $E5  $F3 $F3 $80 $61 $6E $79 $80 $EB
    24 2228 E5 F9 00 0C 80 80 + .by  $E5 $F9 $00 $0C $80 $80 $80 $80  $80 $80 $80 $80 $80 $80 $80 $80  $00 $05 $44 $3A $2A $2E $2A $00
    25 2240 03 33 39 33 00 1E + .by  $03 $33 $39 $33 $00 $1E $A9 $8F  $AF $80 $AD $A5 $AE $B5 $80 $80  $80 $80 $80 $80 $80 $80 $80 $80
    26 2258 80 80 80 80 80 80 + .by  $80 $80 $80 $80 $80 $80 $A6 $E9  $EC $E5 $F3 $9A $00 $24 $8D $8D  $8D $8D $8D $8D $8D $8D $8D $8D
    27 2270 8D 8D 8D 8D 8D 8D + .by  $8D $8D $8D $8D $8D $8D $8D $8D  $8D $8D $8D $8D $8D $80 $8D $8D  $8D $8D $8D $8D $8D $8D $8D $8D
    28 2288 8D 8D 00 11 2E E5 + .by  $8D $8D $00 $11 $2E $E5 $F7 $80  $E9 $ED $E1 $E7 $E5 $80 $88 $E3  $EC $E5 $E1 $F2 $89 $00 $12 $2C
    29 22A0 EF E1 E4 80 A1 B4 + .by  $EF $E1 $E4 $80 $A1 $B4 $A1 $B3  $A3 $A9 $A9 $80 $E9 $ED $E1 $E7  $E5 $00 $12 $33 $E1 $F6 $E5 $80
    30 22B8 A1 B4 A1 B3 A3 A9 + .by  $A1 $B4 $A1 $B3 $A3 $A9 $A9 $80  $E9 $ED $E1 $E7 $E5 $00 $16 $B3  $E1 $F6 $E5 $80 $E5 $38 $E5 $E3
    31 22D0 F5 F4 E1 E2 EC E5 + .by  $F5 $F4 $E1 $E2 $EC $E5 $80 $E2  $E9 $EE $E1 $F2 $F9 $00 $13 $AC  $EF $E1 $E4 $80 $E3 $F5 $F3 $F4
    32 22E8 EF ED 80 23 E8 E1 + .by  $EF $ED $80 $23 $E8 $E1 $F2 $F3  $E5 $F4 $00 $17 $B2 $E5 $F3 $F4  $EF $F2 $E5 $80 $24 $E5 $E6 $E1
    33 2300 F5 EC F4 80 E3 E8 + .by  $F5 $EC $F4 $80 $E3 $E8 $E1 $F2  $F3 $E5 $F4 $00 $0B $31 $F5 $E9  $F4 $80 $F4 $EF $80 $A4 $AF $B3
    34 2318 00 13 B0 F2 E5 F3 + .by  $00 $13 $B0 $F2 $E5 $F3 $F3 $80  $25 $33 $23 $80 $F4 $EF $80 $EC  $E5 $E1 $F6 $E5 $80 $00 $0F $A5
    35 2330 A4 E9 B4 AF B2 80 + .by  $A4 $E9 $B4 $AF $B2 $80 $B3 $A5  $B4 $B4 $E9 $AE $A7 $B3 $00 $13  $22 $E1 $E3 $EB $E7 $F2 $EF $F5
    36 2348 EE E4 80 E3 EF EC + .by  $EE $E4 $80 $E3 $EF $EC $EF $F2  $9A $80 $84 $00 $13 $26 $EF $F2  $E5 $E7 $F2 $EF $F5 $EE $E4 $80
    37 2360 E3 EF EC EF F2 9A + .by  $E3 $EF $EC $EF $F2 $9A $80 $84  $00 $15 $21 $F2 $F2 $EF $F7 $F3  $80 $F7 $E9 $F4 $E8 $EF $F5 $F4
    38 2378 80 A3 F4 F2 EC 9A + .by  $80 $A3 $F4 $F2 $EC $9A $80 $00  $03 $6F $6E $80 $00 $03 $6F $66  $66 $00 $12 $23 $E8 $E1 $F2 $E3
    39 2390 EF E4 E5 80 E4 E9 + .by  $EF $E4 $E5 $80 $E4 $E9 $F3 $F0  $EC $E1 $F9 $9A $80 $00 $07 $6F  $66 $66 $80 $80 $80 $80 $00 $07
    40 23A8 21 34 21 33 23 29 + .by  $21 $34 $21 $33 $23 $29 $29 $00  $07 $21 $6E $74 $69 $63 $80 $80  $00 $0B $33 $E1 $F6 $E5 $80 $E3
    41 23C0 EF EE E6 E9 E7 00 + .by  $EF $EE $E6 $E9 $E7 $00 $12 $B0  $F2 $E5 $F3 $F3 $80 $25 $33 $23  $80 $F4 $EF $80 $EC $E5 $E1 $F6
    42 23D8 E5 00 6C 6A 3B FF + .by  $E5 $00 $6C $6A $3B $FF $FF $6B  $2B $2A $6F $FF $70 $75 $9B $69  $2D $3D $76 $FF $63 $FF $FF $62
    43 23F0 78 7A 34 FF 33 36 + .by  $78 $7A $34 $FF $33 $36 $1B $35  $32 $31 $2C $20 $2E $6E $FF $6D  $2F $81 $72 $FF $65 $79 $7F $74
    44 2408 77 71 39 FF 30 37 + .by  $77 $71 $39 $FF $30 $37 $7E $38  $3E $FF $66 $68 $64 $FF $82 $67  $73 $61 $4C $4A $3A $FF $FF $4B
    45 2420 5C 5E 4F FF 50 55 + .by  $5C $5E $4F $FF $50 $55 $FF $49  $5F $7C $56 $FF $43 $FF $FF $42  $58 $5A $24 $FF $23 $26 $FF $25
    46 2438 22 21 5B 3B 5D 4E + .by  $22 $21 $5B $3B $5D $4E $FF $4D  $3F $FF $52 $FF $45 $59 $FF $54  $57 $51 $28 $FF $29 $27 $FF $40
    47 2450 FF FF 46 48 44 FF + .by  $FF $FF $46 $48 $44 $FF $FF $47  $53 $41 $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF
    48 2468 FF FF FF FF FF FF + .by  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF
    49 2480 FF FF FF FF FF FF + .by  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF
    50 2498 FF FF FF FF FF FF + .by  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF
    51 24B0 FF FF FF FF FF FF + .by  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF
    52 24C8 FF FF FF FF FF FF + .by  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF
Source: artur.a65
   119
   120 				; ------------------------------------------------------------
   121
   122 24DA			RTLIB
   123 24DA				icl 'rtl6502_a8.asm'
Source: rtl6502_a8.asm
    78 					opt l+
   124
   125 				.print 'ZPAGE: ',zpage,'..',zpend-1
   125 				ZPAGE: $0080..$00D3
   126
   127 				.print 'RTLIB: ',RTLIB,'..',*-1
   127 				RTLIB: $24DA..$29CD
   128
   129 				; ------------------------------------------------------------
   130
   131 29CE			START
   132 29CE BA				tsx
   133 29CF 8E 88 58			stx MAIN.@halt+1
   134
   135 = 00A9			VLEN	= VARDATASIZE-VARINITSIZE
   136 = 62FB			VADR	= DATAORIGIN+VARINITSIZE
   137
   138 					ift VADR > $BFFF
   139 					ert 'Invalid memory address range ',VADR
   140 					eli (VLEN>0) && (VLEN<=256)
   141 29D2 A2 57			ldx #256-VLEN
   142 29D4 A9 00			lda #$00
   143 29D6 9D A4 62 E8 D0 FA		sta:rne VADR+VLEN-256,x+
   144 					eli VLEN>256
   145 					@fill #VADR #VLEN #$00
   146 					eif
   147
   148 				.ifdef :psptr
   149 					mwa #PROGRAMSTACK :psptr
   150 				.fi
   151
   152 					.ifdef MAIN.@DEFINES.ROMOFF
   153 					icl 'atari\romoff.asm'
   154 					.fi
   155
   156 29DC A2 0F			ldx #$0F					; DOS II+/D ParamStr
   157 29DE BD 40 03 9D 8D 58 + 	mva:rpl $340,x MAIN.IOCB@COPY,x-
   158
   159 29E7 E8				inx						; X = 0
   160 29E8 86 80			stx bp						; BP = 0
   161
   162 29EA 8E 0F D2			stx skctl					; reset POKEY
   163 29ED A9 03			lda #3
   164 29EF 8D 0F D2			sta skctl
   165
   166 29F2 CA				dex						; X = 255
   167
   168 29F3				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: artur.a65]
   169
   170 29F3			.local	MAIN						; PROCEDURE
   171
   172 29F3 4C B9 53			jmp l_03E1
   173
   174 				; ------------------------------------------------------------
   175
   176 29F6			.local	SYSTEM						; UNIT
   177
   178 29F6			.local	HEXSTR						; FUNCTION | ASSEMBLER | REGISTER
   179
   180 				; -------------------  ASM Block 00000001  -------------------
   181
   182 29F6 20 94 28			jsr @hexStr
   183
   184 				;	@move #@buf Result #33
   185 29F9 A0 DF			ldy #256-33
   186 29FB B9 21 03 99 DC 57 + 	mva:rne @buf+33-256,y adr.Result+33-256,y+
   187
   188 2A04			@exit
   189
   190 				; ------------------------------------------------------------
   191
   192 = 0088			VALUE	= :EDX
   193 = 008C			DIGITS	= :ECX
   194 = 58BB			adr.RESULT	= [DATAORIGIN+$000B] .array [33]
   195 2A04			.var RESULT	= adr.RESULT .word
   196
   197 = 2A05			@VarData	= RESULT
   198 = 0021			@VarDataSize	= 33
   199
   200 2A04 60				rts						; ret
   201 = 2A05 BB 58		RESULT
   201 				.endl
   202
   203 2A07			.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER
   204
   205 				; ------------------------------------------------------------
   206
   207 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   208 				; as Pointer
   209 2A07 B5 94			lda :STACKORIGIN,x
   210 2A09 85 88			sta A
   211 2A0B B5 A4			lda :STACKORIGIN+STACKWIDTH,x
   212 2A0D 85 89			sta A+1
   213 2A0F CA				dex
   214 2A10			@main
   215
   216 				; -------------------  ASM Block 00000002  -------------------
   217
   218 2A10 A0 00			ldy #0
   219 2A12 B1 88 85 90			mva (:edx),y Result
   220
   221 2A16			@exit
   222
   223 				; ------------------------------------------------------------
   224
   225 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   226 				; as Pointer
   227
   228 2A16 E8				inx
   229 2A17 A5 90 95 94			mva RESULT :STACKORIGIN,x
   230
   231 					.ifdef @new
   232 					lda <@VarData
   233 					sta :ztmp
   234 					lda >@VarData
   235 					ldy #@VarDataSize-1
   236 					jmp @FreeMem
   237 					eif
   238
   239 				; ------------------------------------------------------------
   240
   241 = 0088			A	= :EDX
   242 = 0090			RESULT	= :STACKORIGIN-4
   243 2A1B 60				rts						; ret
   244 				.endl
   245
   246 2A1C			.local	UPCASE						; FUNCTION
   247 2A1C 8D DC 58			sta A
   248
   249 				; optimize OK (SYSTEM), line = 1255
   250
   251 2A1F 8D DE 58			sta @CASETMP_0002
   252 2A22 18				clc						; clear carry for add
   253 2A23 69 85			adc #$FF-$7A					; make m = $FF
   254 2A25 69 1A			adc #$7A-$61+1					; carry set if in range n to m
   255 2A27 90 0C			jcc l_041D
   256 				@
   257
   258 				; optimize OK (SYSTEM), line = 1256
   259
   260 2A29 AD DC 58			lda A
   261 2A2C 38 E9 20			sub #$20
   262 2A2F 8D DD 58			sta RESULT
   263
   264 2A32 4C 3B 2A			jmp a_0002
   265 2A35			l_041D
   266
   267 				; optimize OK (SYSTEM), line = 1258
   268
   269 2A35 AD DC 58			lda A
   270 2A38 8D DD 58			sta RESULT
   271 2A3B			a_0002
   272 2A3B			@exit
   273
   274 				; ------------------------------------------------------------
   275
   276 = 58DC			A	= DATAORIGIN+$002C
   277 = 58DD			RESULT	= DATAORIGIN+$002D
   278 = 58DE			@CASETMP_0002	= DATAORIGIN+$002E
   279
   280 = 58DC			@VarData	= A
   281 = 0002			@VarDataSize	= 2
   282
   283 2A3B 60				rts						; ret
   284 				.endl
   285
   286 2A3C			.local	STR_0449					; PROCEDURE | ASSEMBLER | OVERLOAD
   287
   288 				; ------------------------------------------------------------
   289
   290 				; Generate Assignment for CARDINAL / INTEGER / REAL / SINGLE
   291 				; as Pointer
   292 2A3C B5 94			lda :STACKORIGIN,x
   293 2A3E 8D DF 58			sta A
   294 2A41 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
   295 2A43 8D E0 58			sta A+1
   296 2A46 B5 B4			lda :STACKORIGIN+STACKWIDTH*2,x
   297 2A48 8D E1 58			sta A+2
   298 2A4B B5 C4			lda :STACKORIGIN+STACKWIDTH*3,x
   299 2A4D 8D E2 58			sta A+3
   300 2A50 CA				dex
   301 2A51 30 0B			jmi @main
   302
   303 				; ------------------------------------------------------------
   304
   305 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   306 				; as Pointer
   307 2A53 B5 94			lda :STACKORIGIN,x
   308 2A55 8D E3 58			sta S
   309 2A58 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
   310 2A5A 8D E4 58			sta S+1
   311 2A5D CA				dex
   312 2A5E			@main
   313
   314 				; -------------------  ASM Block 00000017  -------------------
   315
   316 2A5E 8A 48			txa:pha
   317
   318 2A60 E8				inx		; parameter A
   319 2A61 E8				inx		; parameter S
   320
   321 					@ValueToStr #@printCARD
   321 				 LDY> @PRINTCARD\ LDA< @PRINTCARD\ JSR @VALUETOSTR
   321 2A62 A0 29		 LDY> @PRINTCARD
   321 2A64 A9 3D		 LDA< @PRINTCARD
   321 2A66 20 EA 28		 JSR @VALUETOSTR
   322
   323 					@move #@buf s #16	; !!! koniecznie przez wskaznik
   323 				 MWA #@BUF @MOVE.PTR1\ MWA S @MOVE.PTR2\ MWA #16 @MOVE.PTR3\ JSR @MOVE
   323 2A69 A9 00 85 88 A9 04 +  MWA #@BUF @MOVE.PTR1
   323 2A71 AD E3 58 85 8C AD +  MWA S @MOVE.PTR2
   323 2A7B A9 10 85 84 A9 00 +  MWA #16 @MOVE.PTR3
   323 2A83 20 74 27		 JSR @MOVE
   324
   325 2A86 68 AA			pla:tax
   326
   327 				; ------------------------------------------------------------
   328
   329 = 58DF			A	= DATAORIGIN+$002F
   330 = 58E3			S	= DATAORIGIN+$0033
   331
   332 = 58DF			@VarData	= A
   333 = 0006			@VarDataSize	= 6
   334
   335 2A88			@exit
   336 					.ifdef @new
   337 					lda <@VarData
   338 					sta :ztmp
   339 					lda >@VarData
   340 					ldy #@VarDataSize-1
   341 					jmp @FreeMem
   342 					els
   343 2A88 60				rts						; ret
   344 					eif
   345 				.endl
   346
   347 2A89			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   348
   349 				; ------------------------------------------------------------
   350
   351 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   352 				; as Pointer
   353 2A89 B5 94			lda :STACKORIGIN,x
   354 2A8B 85 88			sta A
   355 2A8D B5 A4			lda :STACKORIGIN+STACKWIDTH,x
   356 2A8F 85 89			sta A+1
   357 2A91 CA				dex
   358 2A92 30 05			jmi @main
   359
   360 				; ------------------------------------------------------------
   361
   362 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   363 				; as Pointer
   364 2A94 B5 94			lda :STACKORIGIN,x
   365 2A96 85 8C			sta VALUE
   366 2A98 CA				dex
   367 2A99			@main
   368
   369 				; -------------------  ASM Block 00000018  -------------------
   370
   371 2A99 A0 00			ldy #0
   372 2A9B A5 8C 91 88			mva value (:edx),y
   373
   374 				; ------------------------------------------------------------
   375
   376 = 0088			A	= :EDX
   377 = 008C			VALUE	= :ECX
   378 2A9F			@exit
   379 					.ifdef @new
   380 					lda <@VarData
   381 					sta :ztmp
   382 					lda >@VarData
   383 					ldy #@VarDataSize-1
   384 					jmp @FreeMem
   385 					els
   386 2A9F 60				rts						; ret
   387 					eif
   388 				.endl
   389
   390 2AA0			.local	FILLBYTE					; PROCEDURE | ASSEMBLER | REGISTER | INLINE
   391
   392 					.MACRO m@INLINE
   393 				
   394 				; -------------------  ASM Block 00000024  -------------------
   395 				
   396 					jsr @fill
   397 				
   398 					.ENDM
   399
   400 				; ------------------------------------------------------------
   401
   402 = 0088			A	= :EDX
   403 = 008C			COUNT	= :ECX
   404 = 0084			VALUE	= :EAX
   405 2AA0			@exit
   406 				.endl
   407
   408 2AA0			.local	MOVE_0458					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER | INLINE
   409
   410 					.MACRO m@INLINE
   411 				
   412 				; -------------------  ASM Block 00000025  -------------------
   413 				
   414 					jsr @move
   415 				
   416 					.ENDM
   417
   418 				; ------------------------------------------------------------
   419
   420 = 0088			SOURCE	= :EDX
   421 = 008C			DEST	= :ECX
   422 = 0084			COUNT	= :EAX
   423 2AA0			@exit
   424 				.endl
   425
   426 2AA0			.local	MOVE_0459					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER | INLINE
   427
   428 					.MACRO m@INLINE
   429 				
   430 				; -------------------  ASM Block 00000026  -------------------
   431 				
   432 					jsr @move
   433 				
   434 					.ENDM
   435
   436 				; ------------------------------------------------------------
   437
   438 = 0088			SOURCE	= :EDX
   439 = 008C			DEST	= :ECX
   440 = 0084			COUNT	= :EAX
   441 2AA0			@exit
   442 				.endl
   443
   444 2AA0			.local	MOVE_045A					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER | INLINE
   445
   446 					.MACRO m@INLINE
   447 				
   448 				; -------------------  ASM Block 00000027  -------------------
   449 				
   450 					jsr @move
   451 				
   452 					.ENDM
   453
   454 				; ------------------------------------------------------------
   455
   456 = 0088			SOURCE	= :EDX
   457 = 008C			DEST	= :ECX
   458 = 0084			COUNT	= :EAX
   459 2AA0			@exit
   460 				.endl
   461
   462 2AA0			.local	PAUSE_0479					; PROCEDURE | ASSEMBLER | OVERLOAD
   463
   464 				; -------------------  ASM Block 00000034  -------------------
   465
   466 2AA0 A5 14 C5 14 F0 FC		lda:cmp:req :rtclok+2
   467
   468 2AA6			@exit
   469 					.ifdef @new
   470 					lda <@VarData
   471 					sta :ztmp
   472 					lda >@VarData
   473 					ldy #@VarDataSize-1
   474 					jmp @FreeMem
   475 					els
   476 2AA6 60				rts						; ret
   477 					eif
   478 				.endl
   479
   480 				; ------------------------------------------------------------
   481
   482 = 0101			__PORTB_BANKS	= $0101
   483 = 0648			M_PI_2	= $0648
   484 = 0192			D_PI_2	= $0192
   485 = 0004			D_PI_180	= $04
   486 = 0000			MGTIA	= $00
   487 = 0080			MVBXE	= $80
   488 = 0000			VBXE_XDLADR	= $00
   489 = 00E0			VBXE_BCBTMP	= $E0
   490 = 0100			VBXE_BCBADR	= $0100
   491 = 1000			VBXE_MAPADR	= $1000
   492 = 1000			VBXE_CHBASE	= $1000
   493 = 5000			VBXE_OVRADR	= $5000
   494 = B000			VBXE_WINDOW	= $B000
   495 = 0000			IDLI	= $00
   496 = 0001			IVBL	= $01
   497 = 0002			ITIM1	= $02
   498 = 0003			ITIM2	= $03
   499 = 0004			ITIM4	= $04
   500 = 00FE			CH_DELCHR	= $FE
   501 = 009B			CH_ENTER	= $9B
   502 = 001B			CH_ESC	= $1B
   503 = 001C			CH_CURS_UP	= $1C
   504 = 001D			CH_CURS_DOWN	= $1D
   505 = 001E			CH_CURS_LEFT	= $1E
   506 = 001F			CH_CURS_RIGHT	= $1F
   507 = 007F			CH_TAB	= $7F
   508 = 009B			CH_EOL	= $9B
   509 = 007D			CH_CLR	= $7D
   510 = 00FD			CH_BELL	= $FD
   511 = 007E			CH_DEL	= $7E
   512 = 009C			CH_DELLINE	= $9C
   513 = 009D			CH_INSLINE	= $9D
   514 = 0000			PAL_PMCOLOR0	= $00
   515 = 0001			PAL_PMCOLOR1	= $01
   516 = 0002			PAL_PMCOLOR2	= $02
   517 = 0003			PAL_PMCOLOR3	= $03
   518 = 0004			PAL_COLOR0	= $04
   519 = 0005			PAL_COLOR1	= $05
   520 = 0006			PAL_COLOR2	= $06
   521 = 0007			PAL_COLOR3	= $07
   522 = 0008			PAL_COLBAK	= $08
   523 = 0000			COLOR_BLACK	= $00
   524 = 000E			COLOR_WHITE	= $0E
   525 = 0032			COLOR_RED	= $32
   526 = 0096			COLOR_CYAN	= $96
   527 = 0068			COLOR_VIOLET	= $68
   528 = 00C4			COLOR_GREEN	= $C4
   529 = 0074			COLOR_BLUE	= $74
   530 = 00EE			COLOR_YELLOW	= $EE
   531 = 0028			COLOR_ORANGE	= $28
   532 = 00E4			COLOR_BROWN	= $E4
   533 = 003C			COLOR_LIGHTRED	= $3C
   534 = 0004			COLOR_GRAY1	= $04
   535 = 0006			COLOR_GRAY2	= $06
   536 = 000A			COLOR_GRAY3	= $0A
   537 = 00CC			COLOR_LIGHTGREEN	= $CC
   538 = 007C			COLOR_LIGHTBLUE	= $7C
   539 = 0004			FMOPENREAD	= $04
   540 = 0008			FMOPENWRITE	= $08
   541 = 0009			FMOPENAPPEND	= $09
   542 = 000C			FMOPENREADWRITE	= $0C
   543 = 58B0			SCREENWIDTH	= DATAORIGIN+$0000
   544 = 58B2			SCREENHEIGHT	= DATAORIGIN+$0002
   545 = 58B4			DATESEPARATOR	= DATAORIGIN+$0004
   546 = D20A			RND	= $D20A
   547 = 02C0			adr.PALETTE	= $02C0
   548 2AA7			.var PALETTE	= adr.PALETTE .word
   549 = D012			adr.HPALETTE	= $D012
   550 2AA7			.var HPALETTE	= adr.HPALETTE .word
   551 = 58B5			FILEMODE	= DATAORIGIN+$0005
   552 = 58B6			GRAPHMODE	= DATAORIGIN+$0006
   553 = 58B7			IORESULT	= DATAORIGIN+$0007
   554 = 58B8			EOLN	= DATAORIGIN+$0008
   555 = 58B9			RNDSEED	= DATAORIGIN+$0009
   556
   557 = 2AA7 C0 02		PALETTE
   557 = 2AA9 12 D0		HPALETTE
   557 				.endl							; UNIT SYSTEM
   558
   559 				; ------------------------------------------------------------
   560
   561 2AAB			.local	ATARI						; UNIT
   562
   563 				; ------------------------------------------------------------
   564
   565 = 0010			IRQENS	= $10
   566 = 0012			RTCLOK	= $12
   567 = 0012			RTCLOK1	= $12
   568 = 0013			RTCLOK2	= $13
   569 = 0014			RTCLOK3	= $14
   570 = 004D			ATRACT	= $4D
   571 = 0052			LMARGIN	= $52
   572 = 0053			RMARGIN	= $53
   573 = 0054			ROWCRS	= $54
   574 = 0055			COLCRS	= $55
   575 = 0057			DINDEX	= $57
   576 = 0058			SAVMSC	= $58
   577 = 0062			PALNTS	= $62
   578 = 006A			RAMTOP	= $6A
   579 = 0200			VDSLST	= $0200
   580 = 0230			SDLSTL	= $0230
   581 = 0290			TXTROW	= $0290
   582 = 0291			TXTCOL	= $0291
   583 = 0293			TINDEX	= $0293
   584 = 0294			TXTMSC	= $0294
   585 = 022F			SDMCTL	= $022F
   586 = 026F			GPRIOR	= $026F
   587 = 02F0			CRSINH	= $02F0
   588 = 02F3			CHACT	= $02F3
   589 = 02F4			CHBAS	= $02F4
   590 = 02FC			CH	= $02FC
   591 = 02C0			PCOLR0	= $02C0
   592 = 02C1			PCOLR1	= $02C1
   593 = 02C2			PCOLR2	= $02C2
   594 = 02C3			PCOLR3	= $02C3
   595 = 02C4			COLOR0	= $02C4
   596 = 02C5			COLOR1	= $02C5
   597 = 02C6			COLOR2	= $02C6
   598 = 02C7			COLOR3	= $02C7
   599 = 02C8			COLOR4	= $02C8
   600 = 02C8			COLBAKS	= $02C8
   601 = D000			HPOSP0	= $D000
   602 = D001			HPOSP1	= $D001
   603 = D002			HPOSP2	= $D002
   604 = D003			HPOSP3	= $D003
   605 = D004			HPOSM0	= $D004
   606 = D005			HPOSM1	= $D005
   607 = D006			HPOSM2	= $D006
   608 = D007			HPOSM3	= $D007
   609 = D008			SIZEP0	= $D008
   610 = D009			SIZEP1	= $D009
   611 = D00A			SIZEP2	= $D00A
   612 = D00B			SIZEP3	= $D00B
   613 = D00C			SIZEM	= $D00C
   614 = D00D			GRAFP0	= $D00D
   615 = D00E			GRAFP1	= $D00E
   616 = D00F			GRAFP2	= $D00F
   617 = D010			GRAFP3	= $D010
   618 = D011			GRAFM	= $D011
   619 = D004			P0PF	= $D004
   620 = D014			PAL	= $D014
   621 = D012			COLPM0	= $D012
   622 = D013			COLPM1	= $D013
   623 = D014			COLPM2	= $D014
   624 = D015			COLPM3	= $D015
   625 = D016			COLPF0	= $D016
   626 = D017			COLPF1	= $D017
   627 = D018			COLPF2	= $D018
   628 = D019			COLPF3	= $D019
   629 = D01A			COLBK	= $D01A
   630 = D01B			PRIOR	= $D01B
   631 = D01D			GRACTL	= $D01D
   632 = D01E			HITCLR	= $D01E
   633 = D01F			CONSOL	= $D01F
   634 = D200			AUDF1	= $D200
   635 = D201			AUDC1	= $D201
   636 = D202			AUDF2	= $D202
   637 = D203			AUDC2	= $D203
   638 = D204			AUDF3	= $D204
   639 = D205			AUDC3	= $D205
   640 = D206			AUDF4	= $D206
   641 = D207			AUDC4	= $D207
   642 = D208			AUDCTL	= $D208
   643 = D209			KBCODE	= $D209
   644 = D20E			IRQEN	= $D20E
   645 = D20F			SKSTAT	= $D20F
   646 = D300			PORTA	= $D300
   647 = D301			PORTB	= $D301
   648 = D400			DMACTL	= $D400
   649 = D401			CHACTL	= $D401
   650 = D402			DLISTL	= $D402
   651 = D404			HSCROL	= $D404
   652 = D405			VSCROL	= $D405
   653 = D407			PMBASE	= $D407
   654 = D409			CHBASE	= $D409
   655 = D40A			WSYNC	= $D40A
   656 = D40B			VCOUNT	= $D40B
   657 = D40C			PENH	= $D40C
   658 = D40D			PENV	= $D40D
   659 = D40E			NMIEN	= $D40E
   660 = FFFA			NMIVEC	= $FFFA
   661 = FFFC			RESETVEC	= $FFFC
   662 = FFFE			IRQVEC	= $FFFE
   663
   664 				.endl							; UNIT ATARI
   665
   666 				; ------------------------------------------------------------
   667
   668 2AAB			.local	CRT						; UNIT
   669
   670 2AAB			.local	READKEY						; FUNCTION | ASSEMBLER
   671
   672 				; -------------------  ASM Block 00000050  -------------------
   673
   674 2AAB				m@call @GetKey
Macro: M@CALL [Source: macros.asm]
    12 2AAB 20 0D 27				jsr @GETKEY
Source: artur.a65
   675 2AAE 8D E6 58			sta Result
   676
   677 2AB1			@exit
   678
   679 				; ------------------------------------------------------------
   680
   681 = 58E6			RESULT	= DATAORIGIN+$0036
   682 2AB1 60				rts						; ret
   683 				.endl
   684
   685 2AB2			.local	KEYPRESSED					; FUNCTION | ASSEMBLER
   686
   687 				; -------------------  ASM Block 00000054  -------------------
   688
   689 2AB2 A0 00			ldy #$00	; false
   690 2AB4 AD FC 02			lda kbcodes
   691 2AB7 C9 FF			cmp #$ff
   692 2AB9 F0 01			seq
   693 2ABB C8				iny		; true
   694 2ABC 8C E7 58			sty Result
   695
   696 2ABF			@exit
   697
   698 				; ------------------------------------------------------------
   699
   700 = 58E7			RESULT	= DATAORIGIN+$0037
   701 2ABF 60				rts						; ret
   702 				.endl
   703
   704 2AC0			.local	TEXTMODE					; PROCEDURE | ASSEMBLER
   705 2AC0 8D E8 58			sta MODE
   706
   707 				; -------------------  ASM Block 00000058  -------------------
   708
   709 2AC3 8A 48			txa:pha
   710
   711 2AC5 20 E1 26			@clrscr
   712
   713 2AC8 68 AA			pla:tax
   714
   715 				; ------------------------------------------------------------
   716
   717 = 58E8			MODE	= DATAORIGIN+$0038
   718
   719 = 58E8			@VarData	= MODE
   720 = 0001			@VarDataSize	= 1
   721
   722 2ACA			@exit
   723 					.ifdef @new
   724 					lda <@VarData
   725 					sta :ztmp
   726 					lda >@VarData
   727 					ldy #@VarDataSize-1
   728 					jmp @FreeMem
   729 					els
   730 2ACA 60				rts						; ret
   731 					eif
   732 				.endl
   733
   734 				; ------------------------------------------------------------
   735
   736 = 58E5			TEXTATTR	= DATAORIGIN+$0035
   737 = D01F			CONSOL	= $D01F
   738 = 0000			CN_START_SELECT_OPTION	= $00
   739 = 0001			CN_SELECT_OPTION	= $01
   740 = 0002			CN_START_OPTION	= $02
   741 = 0003			CN_OPTION	= $03
   742 = 0004			CN_START_SELECT	= $04
   743 = 0005			CN_SELECT	= $05
   744 = 0006			CN_START	= $06
   745 = 0007			CN_NONE	= $07
   746 = 0000			BW40	= $00
   747 = 0001			CO40	= $01
   748 = 0002			BW80	= $02
   749 = 0003			CO80	= $03
   750 = 0007			MONO	= $07
   751 = 0001			C40	= $01
   752 = 0003			C80	= $03
   753 = 0000			BLACK	= $00
   754 = 000F			WHITE	= $0F
   755 = 0026			RED	= $26
   756 = 00AC			CYAN	= $AC
   757 = 0048			PURPLE	= $48
   758 = 00B6			GREEN	= $B6
   759 = 0086			BLUE	= $86
   760 = 00DC			YELLOW	= $DC
   761 = 0018			ORANGE	= $18
   762 = 00F4			BROWN	= $F4
   763 = 002A			LIGHT_RED	= $2A
   764 = 0004			DARK_GREY	= $04
   765 = 0008			GREY	= $08
   766 = 00BC			LIGHT_GREEN	= $BC
   767 = 009A			LIGHT_BLUE	= $9A
   768 = 000C			LIGHT_GREY	= $0C
   769 = 0080			BLINK	= $80
   770
   771 				.endl							; UNIT CRT
   772
   773 				; ------------------------------------------------------------
   774
   775 2ACB			.local	DOS						; UNIT
   776
   777 				; ------------------------------------------------------------
   778
   779 = D014			PALNTSC	= $D014
   780
   781 				.endl							; UNIT DOS
   782
   783 				; ------------------------------------------------------------
   784
   785 2ACB			.local	STRUTILS					; UNIT
   786
   787 				; ------------------------------------------------------------
   788
   789 				.endl							; UNIT STRUTILS
   790
   791 				; ------------------------------------------------------------
   792
   793 2ACB			.local	SYSUTILS					; UNIT
   794
   795 2ACB			.local	FINDFIRST					; FUNCTION
   796
   797 				; ------------------------------------------------------------
   798
   799 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   800 				; as Pointer
   801 2ACB B5 94			lda :STACKORIGIN,x
   802 2ACD 85 82			sta :bp2
   803 2ACF B5 A4			lda :STACKORIGIN+STACKWIDTH,x
   804 2AD1 85 83			sta :bp2+1
   805 2AD3 A0 20			ldy #$20
   806 2AD5 B1 82 99 E9 58 88 + 	mva:rpl (:bp2),y adr.FILEMASK,y-
   807 2ADD A9 E9 8D A9 2B A9 + 	mwa #adr.FILEMASK FILEMASK
   808 2AE7 CA				dex
   809 2AE8 30 13			jmi @main
   810
   811 				; ------------------------------------------------------------
   812
   813 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   814 				; as Pointer
   815 2AEA B5 94			lda :STACKORIGIN,x
   816 2AEC 8D 0A 59			sta ATTRIBUTES
   817 2AEF CA				dex
   818 2AF0 30 0B			jmi @main
   819
   820 				; ------------------------------------------------------------
   821
   822 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   823 				; as Pointer
   824 2AF2 B5 94			lda :STACKORIGIN,x
   825 2AF4 8D 0B 59			sta SEARCHRESULT
   826 2AF7 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
   827 2AF9 8D 0C 59			sta SEARCHRESULT+1
   828 2AFC CA				dex
   829 2AFD			@main
   830
   831 				; AssignFile
   832
   833 				; optimize OK (SYSUTILS), line = 180
   834
   835 2AFD AC AB 2B 84 82 AC + 	mwy F :bp2
   836 2B07 A0 00			ldy #s@file.pfname
   837 2B09 AD A9 2B			lda FILEMASK
   838 2B0C 91 82			sta (:bp2),y
   839 2B0E C8				iny
   840 2B0F AD AA 2B			lda FILEMASK+1
   841 2B12 91 82			sta (:bp2),y
   842 2B14 A0 05			ldy #s@file.status
   843 2B16 A9 00			lda #$00
   844 2B18 91 82			sta (:bp2),y
   845
   846 				; -------------------  ASM Block 00000066  -------------------
   847
   848 2B1A 8A 48			txa:pha
   849
   850 2B1C 18				clc			; iocheck off
   851 					@openfile f #6
   851 				 LDY F+1\ LDA F\ LDX# 6\ JSR @OPENFILE
   851 2B1D AC AC 2B		 LDY F+1
   851 2B20 AD AB 2B		 LDA F
   851 2B23 A2 06		 LDX# 6
   851 2B25 20 DA 24		 JSR @OPENFILE
   852 2B28			loop
   853 2B28 AD 0B 59 85 82 AD + 	mwa SearchResult :bp2
   854
   855 2B32 A0 01			ldy #SearchResult.ExcludeAttr-DATAORIGIN
   856 2B34 AD 0A 59			lda Attributes
   857 2B37 91 82			sta (:bp2),y
   858
   859 2B39 A0 23			ldy #SearchResult.FindHandle-DATAORIGIN
   860
   861 2B3B AD AB 2B			lda f
   862 2B3E 91 82			sta (:bp2),y
   863 2B40 C8				iny
   864 2B41 AD AC 2B			lda f+1
   865 2B44 91 82			sta (:bp2),y
   866
   867 2B46 AD AB 2B 85 82 AD + 	mwa f :bp2
   868
   869 2B50 A0 02			ldy #s@file.record
   870 2B52 A9 01 91 82			mva <1 (:bp2),y
   871 2B56 C8				iny
   872 2B57 A9 00 91 82			mva >1 (:bp2),y
   873
   874 2B5B A0 08			ldy #s@file.nrecord
   875 2B5D A9 40 91 82			mva <64 (:bp2),y
   876 2B61 C8				iny
   877 2B62 A9 00 91 82			mva >64 (:bp2),y
   878
   879 2B66 A0 06			ldy #s@file.buffer
   880 2B68 A9 00 91 82			mva <@buf (:bp2),y
   881 2B6C C8				iny
   882 2B6D A9 04 91 82			mva >@buf (:bp2),y
   883
   884 					@ReadDirFileName f
   884 				 LDY F+1\ LDA F\ JSR @READDIRFILENAME
   884 2B71 AC AC 2B		 LDY F+1
   884 2B74 AD AB 2B		 LDA F
   884 2B77 20 5F 26		 JSR @READDIRFILENAME
   885 2B7A 8D 0D 59			sta Result
   886
   887 2B7D 18 AD 0B 59 69 02 + 	adw SearchResult #SearchResult.Name-DATAORIGIN :bp2
   888
   889 2B8C 20 6F 26			jsr @DirFileName
   890
   891 2B8F AD 0B 59 85 82 AD + 	mwa SearchResult :bp2
   892
   893 2B99 A0 00			ldy #SearchResult.Attr-DATAORIGIN
   894 2B9B 8A				txa
   895 2B9C 91 82			sta (:bp2),y
   896
   897 2B9E 2D 0A 59			and Attributes
   898 2BA1 0D 0D 59			ora Result
   899 2BA4 F0 82			beq loop
   900
   901 2BA6 68 AA			pla:tax
   902
   903 2BA8			@exit
   904
   905 				; ------------------------------------------------------------
   906
   907 = 58E9			adr.FILEMASK	= [DATAORIGIN+$0039] .array [33]
   908 2BA8			.var FILEMASK	= adr.FILEMASK .word
   909 = 590A			ATTRIBUTES	= DATAORIGIN+$005A
   910 = 590B			SEARCHRESULT	= DATAORIGIN+$005B
   911 = 58B0			SEARCHRESULT.ATTR	= DATAORIGIN+$0000
   912 = 58B1			SEARCHRESULT.EXCLUDEATTR	= DATAORIGIN+$0001
   913 = 58B2			SEARCHRESULT.NAME	= DATAORIGIN+$0002
   914 = 58D3			SEARCHRESULT.FINDHANDLE	= DATAORIGIN+$0023
   915 = 590D			RESULT	= DATAORIGIN+$005D
   916 2BA8			.var F	= DATAORIGIN+$005E .word
   917
   918 = 2BA9			@VarData	= FILEMASK
   919 = 0024			@VarDataSize	= 36
   920
   921 2BA8 60				rts						; ret
   922 = 2BA9 E9 58		FILEMASK
   922 = 2BAB 0E 59		F
   922 				.endl
   923
   924 2BAD			.local	FINDNEXT					; FUNCTION | ASSEMBLER
   925
   926 				; -------------------  ASM Block 00000067  -------------------
   927
   928 2BAD 8A 48			txa:pha
   929
   930 2BAF AD 1A 59 85 82 AD + loop	mwa f :bp2
   931 2BB9 A0 23			ldy #f.FindHandle-DATAORIGIN
   932 2BBB B1 82 85 88			mva (:bp2),y edx
   933 2BBF C8				iny
   934 2BC0 B1 82 85 89			mva (:bp2),y edx+1
   935
   936 					@ReadDirFileName edx
   936 				 LDY EDX+1\ LDA EDX\ JSR @READDIRFILENAME
   936 2BC4 A4 89		 LDY EDX+1
   936 2BC6 A5 88		 LDA EDX
   936 2BC8 20 5F 26		 JSR @READDIRFILENAME
   937 2BCB 8D 1C 59			sta Result
   938
   939 2BCE 18 AD 1A 59 69 02 + 	adw f #f.Name-DATAORIGIN :bp2
   940
   941 2BDD 20 6F 26			jsr @DirFileName
   942
   943 2BE0 AD 1A 59 85 82 AD + 	mwa f :bp2
   944
   945 2BEA A0 00			ldy #f.Attr-DATAORIGIN
   946 2BEC 8A				txa
   947 2BED 91 82			sta (:bp2),y
   948
   949 2BEF A0 01			ldy #f.ExcludeAttr-DATAORIGIN
   950 2BF1 31 82			and (:bp2),y
   951 2BF3 0D 1C 59			ora Result
   952 2BF6 F0 B7			beq loop
   953
   954 2BF8 68 AA			pla:tax
   955
   956 2BFA			@exit
   957
   958 				; ------------------------------------------------------------
   959
   960 = 591A			F	= DATAORIGIN+$006A
   961 = 58B0			F.ATTR	= DATAORIGIN+$0000
   962 = 58B1			F.EXCLUDEATTR	= DATAORIGIN+$0001
   963 = 58B2			F.NAME	= DATAORIGIN+$0002
   964 = 58D3			F.FINDHANDLE	= DATAORIGIN+$0023
   965 = 591C			RESULT	= DATAORIGIN+$006C
   966
   967 = 591A			@VarData	= F
   968 = 0002			@VarDataSize	= 2
   969
   970 2BFA 60				rts						; ret
   971 				.endl
   972
   973 2BFB			.local	FINDCLOSE					; PROCEDURE | ASSEMBLER
   974
   975 				; -------------------  ASM Block 00000068  -------------------
   976
   977 2BFB 8A 48			txa:pha
   978
   979 2BFD AD 1D 59 85 82 AD + 	mwa f :bp2
   980 2C07 A0 23			ldy #f.FindHandle-DATAORIGIN
   981 2C09 B1 82 85 88			mva (:bp2),y edx
   982 2C0D C8				iny
   983 2C0E B1 82 85 89			mva (:bp2),y edx+1
   984
   985 2C12 18				clc			; iocheck off
   986 					@closefile edx
   986 				 LDY EDX+1\ LDA EDX\ JSR @CLOSEFILE
   986 2C13 A4 89		 LDY EDX+1
   986 2C15 A5 88		 LDA EDX
   986 2C17 20 70 25		 JSR @CLOSEFILE
   987
   988 2C1A 68 AA			pla:tax
   989
   990 				; ------------------------------------------------------------
   991
   992 = 591D			F	= DATAORIGIN+$006D
   993 = 58B0			F.ATTR	= DATAORIGIN+$0000
   994 = 58B1			F.EXCLUDEATTR	= DATAORIGIN+$0001
   995 = 58B2			F.NAME	= DATAORIGIN+$0002
   996 = 58D3			F.FINDHANDLE	= DATAORIGIN+$0023
   997
   998 = 591D			@VarData	= F
   999 = 0002			@VarDataSize	= 2
  1000
  1001 2C1C			@exit
  1002 					.ifdef @new
  1003 					lda <@VarData
  1004 					sta :ztmp
  1005 					lda >@VarData
  1006 					ldy #@VarDataSize-1
  1007 					jmp @FreeMem
  1008 					els
  1009 2C1C 60				rts						; ret
  1010 					eif
  1011 				.endl
  1012
  1013 2C1D			.local	FILEEXISTS					; FUNCTION
  1014
  1015 				; optimize OK (SYSUTILS), line = 435
  1016
  1017 2C1D AD B5 58			lda SYSTEM.FILEMODE
  1018 2C20 8D 2E 59			sta FM
  1019 				; AssignFile
  1020
  1021 				; optimize OK (SYSUTILS), line = 438
  1022
  1023 2C23 AC 93 2C 84 82 AC + 	mwy F :bp2
  1024 2C2D A0 00			ldy #s@file.pfname
  1025 2C2F AD 1F 59			lda NAME
  1026 2C32 91 82			sta (:bp2),y
  1027 2C34 C8				iny
  1028 2C35 AD 20 59			lda NAME+1
  1029 2C38 91 82			sta (:bp2),y
  1030 2C3A A0 05			ldy #s@file.status
  1031 2C3C A9 00			lda #$00
  1032 2C3E 91 82			sta (:bp2),y
  1033
  1034 				; optimize OK (SYSUTILS), line = 439
  1035
  1036 2C40 A9 04			lda #$04
  1037 2C42 8D B5 58			sta SYSTEM.FILEMODE
  1038 				; Reset
  1039
  1040 				; optimize OK (SYSUTILS), line = 440
  1041
  1042 2C45 A0 02			ldy #s@file.record
  1043 2C47 A9 80			lda #$80
  1044 2C49 91 82			sta (:bp2),y
  1045 2C4B C8				iny
  1046 2C4C A9 00			lda #$00
  1047 2C4E 91 82			sta (:bp2),y
  1048
  1049 2C50 8A 48			txa:pha
  1050 2C52 18				clc
  1051 					@openfile F, MAIN.SYSTEM.FileMode
  1051 				 LDY F+1\ LDA F\ LDX MAIN.SYSTEM.FILEMODE\ JSR @OPENFILE
  1051 2C53 AC 94 2C		 LDY F+1
  1051 2C56 AD 93 2C		 LDA F
  1051 2C59 AE B5 58		 LDX MAIN.SYSTEM.FILEMODE
  1051 2C5C 20 DA 24		 JSR @OPENFILE
  1052 2C5F 68 AA			pla:tax
  1053
  1054 				; optimize OK (SYSUTILS), line = 441
  1055
  1056 2C61 AD B7 58			lda SYSTEM.IORESULT
  1057 2C64 30 13			jmi l_04E9s
  1058 2C66 AC 20 59			ldy NAME+1
  1059 2C69 84 81			sty :bp+1
  1060 2C6B AC 1F 59			ldy NAME
  1061 2C6E B1 80			lda (:bp),y
  1062 2C70 F0 07			jeq l_04E9s
  1063 2C72 A9 01 8D 21 59 D0 + 	mva:sne #true RESULT
  1064 2C79			l_04E9s
  1065 2C79 A9 00 8D 21 59		mva #false RESULT
  1066 				; CloseFile
  1067
  1068 2C7E 8A 48			txa:pha
  1069 2C80 18				clc
  1070 					@closefile F
  1070 				 LDY F+1\ LDA F\ JSR @CLOSEFILE
  1070 2C81 AC 94 2C		 LDY F+1
  1070 2C84 AD 93 2C		 LDA F
  1070 2C87 20 70 25		 JSR @CLOSEFILE
  1071 2C8A 68 AA			pla:tax
  1072
  1073 				; optimize OK (SYSUTILS), line = 445
  1074
  1075 2C8C AD 2E 59			lda FM
  1076 2C8F 8D B5 58			sta SYSTEM.FILEMODE
  1077 2C92			@exit
  1078
  1079 				; ------------------------------------------------------------
  1080
  1081 = 591F			NAME	= DATAORIGIN+$006F
  1082 = 5921			RESULT	= DATAORIGIN+$0071
  1083 2C92			.var F	= DATAORIGIN+$0072 .word
  1084 = 592E			FM	= DATAORIGIN+$007E
  1085
  1086 = 591F			@VarData	= NAME
  1087 = 0003			@VarDataSize	= 3
  1088
  1089 2C92 60				rts						; ret
  1090 = 2C93 22 59		F
  1090 				.endl
  1091
  1092 2C95			.local	ANSIUPPERCASE					; FUNCTION | REGISTER
  1093
  1094 				; optimize OK (SYSUTILS), line = 806
  1095
  1096 2C95 A5 88			lda A
  1097 2C97 85 88			sta @move.src
  1098 2C99 A5 89			lda A+1
  1099 2C9B 85 89			sta @move.src+1
  1100 2C9D AC E0 2C 84 82 AC + 	mwy RESULT :bp2
  1101 2CA7 A0 00			ldy #$00
  1102 2CA9 B1 88 91 82 C8 D0 + 	mva:rne (@move.src),y (:bp2),y+
  1103
  1104 				; optimize OK (SYSUTILS), line = 808
  1105
  1106 2CB0 A4 89			ldy A+1
  1107 2CB2 84 81			sty :bp+1
  1108 2CB4 A4 88			ldy A
  1109 2CB6 B1 80			lda (:bp),y
  1110 2CB8 8D 2F 5A			sta J
  1111
  1112 2CBB			l_0512
  1113 				; --- ForToDoCondition
  1114 2CBB AD 2F 5A			lda J
  1115 2CBE C9 01			cmp #$01
  1116 2CC0 90 1D			jcc l_0520
  1117 2CC2 E8				inx
  1118 2CC3 AD 2F 5A 95 94		mva J :STACKORIGIN,x
  1119 2CC8 AC 2F 5A			ldy J
  1120 2CCB B9 2F 59			lda adr.RESULT,y
  1121 2CCE 20 1C 2A			jsr SYSTEM.UPCASE
  1122 2CD1 B4 94			ldy :STACKORIGIN,x
  1123 2CD3 AD DD 58			lda SYSTEM.UPCASE.RESULT
  1124 2CD6 99 2F 59			sta adr.RESULT,y
  1125 2CD9 CA				dex
  1126
  1127 				; --- ForToDoEpilog
  1128 2CDA CE 2F 5A			dec J
  1129 2CDD D0 DC			jne l_0512
  1130 2CDF			l_0520
  1131 2CDF			@exit
  1132
  1133 				; ------------------------------------------------------------
  1134
  1135 = 0088			A	= :EDX
  1136 = 592F			adr.RESULT	= [DATAORIGIN+$007F] .array [256]
  1137 2CDF			.var RESULT	= adr.RESULT .word
  1138 = 5A2F			J	= DATAORIGIN+$017F
  1139
  1140 = 2CE0			@VarData	= RESULT
  1141 = 0101			@VarDataSize	= 257
  1142
  1143 2CDF 60				rts						; ret
  1144 = 2CE0 2F 59		RESULT
  1144 				.endl
  1145
  1146 				; ------------------------------------------------------------
  1147
  1148 = 0001			FAREADONLY	= $01
  1149 = 0002			FAHIDDEN	= $02
  1150 = 0004			FASYSFILE	= $04
  1151 = 0008			FAVOLUMEID	= $08
  1152 = 0010			FADIRECTORY	= $10
  1153 = 0020			FAARCHIVE	= $20
  1154 = 003F			FAANYFILE	= $3F
  1155
  1156 				.endl							; UNIT SYSUTILS
  1157
  1158 				; ------------------------------------------------------------
  1159
  1160 2CE2			.local	B_CRT						; UNIT
  1161
  1162 2CE2			.local	ATASCII2ANTIC_0541				; FUNCTION | OVERLOAD
  1163 2CE2 8D 39 5A			sta C
  1164
  1165 				; -------------------  ASM Block 00000081  -------------------
  1166
  1167
  1168 2CE5 AD 39 5A		        lda c
  1169 2CE8 0A			        asl
  1170 2CE9 08			        php
  1171 2CEA C9 C0		        cmp #2*$60
  1172 2CEC B0 06		        bcs @+
  1173 2CEE E9 3F		        sbc #2*$20-1
  1174 2CF0 B0 02		        bcs @+
  1175 2CF2 69 C0		        adc #2*$60
  1176 2CF4 28			@       plp
  1177 2CF5 6A			        ror
  1178 2CF6 8D 3A 5A		        sta result;
  1179 				    
  1180 2CF9			@exit
  1181
  1182 				; ------------------------------------------------------------
  1183
  1184 = 5A39			C	= DATAORIGIN+$0189
  1185 = 5A3A			RESULT	= DATAORIGIN+$018A
  1186
  1187 = 5A39			@VarData	= C
  1188 = 0001			@VarDataSize	= 1
  1189
  1190 2CF9 60				rts						; ret
  1191 				.endl
  1192
  1193 2CFA			.local	ANTIC2ATASCII_0545				; FUNCTION | OVERLOAD
  1194 2CFA 8D 3B 5A			sta C
  1195
  1196 				; -------------------  ASM Block 00000082  -------------------
  1197
  1198
  1199 2CFD AD 3B 5A		        lda c
  1200 2D00 0A			        asl
  1201 2D01 08			        php
  1202 2D02 C9 C0		        cmp #2*$60
  1203 2D04 B0 06		        bcs @+
  1204 2D06 E9 7F		        sbc #2*$40-1
  1205 2D08 B0 02		        bcs @+
  1206 2D0A 69 C0		        adc #2*$60
  1207 2D0C 28			@       plp
  1208 2D0D 6A			        ror
  1209 2D0E 8D 3C 5A		        sta result;
  1210 				    
  1211 2D11			@exit
  1212
  1213 				; ------------------------------------------------------------
  1214
  1215 = 5A3B			C	= DATAORIGIN+$018B
  1216 = 5A3C			RESULT	= DATAORIGIN+$018C
  1217
  1218 = 5A3B			@VarData	= C
  1219 = 0001			@VarDataSize	= 1
  1220
  1221 2D11 60				rts						; ret
  1222 				.endl
  1223
  1224 2D12			.local	ATASCII2ANTIC_0549				; FUNCTION | OVERLOAD
  1225
  1226 				; ------------------------------------------------------------
  1227
  1228 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  1229 				; as Pointer
  1230 2D12 B5 94			lda :STACKORIGIN,x
  1231 2D14 85 82			sta :bp2
  1232 2D16 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
  1233 2D18 85 83			sta :bp2+1
  1234 2D1A A0 00			ldy #$00
  1235 2D1C B1 82 99 3D 5A C8 + 	mva:rne (:bp2),y adr.S,y+
  1236 2D24 A9 3D 8D 65 2D A9 + 	mwa #adr.S S
  1237 2D2E CA				dex
  1238 2D2F			@main
  1239
  1240 				; optimize OK (B_CRT), line = 468
  1241
  1242 2D2F AD 3D 5A			lda adr.S+$00
  1243 2D32 8D 3D 5B			sta adr.RESULT+$00
  1244
  1245 				; optimize OK (B_CRT), line = 469
  1246
  1247 2D35 A9 01			lda #$01
  1248 2D37 8D 3D 5C			sta I
  1249 2D3A AD 3D 5A 8D 41 2D		mva adr.S+$00 @FORTMP_0560_0
  1250
  1251 2D40			l_0563
  1252 				; --- ForToDoCondition
  1253 2D40 A9 00			lda @FORTMP_0560_0:#$00
  1254 2D42 CD 3D 5C			cmp I
  1255 2D45 90 1D			jcc l_0571
  1256
  1257 				; optimize FAIL (1, B_CRT), line = 470
  1258
  1259 2D47 E8				inx
  1260 2D48 AD 3D 5C 95 94		mva I :STACKORIGIN,x
  1261 2D4D AC 3D 5C			ldy I
  1262 2D50 B9 3D 5A			lda adr.S,y
  1263 2D53 20 E2 2C			jsr ATASCII2ANTIC_0541
  1264 2D56 B4 94			ldy :STACKORIGIN,x
  1265 2D58 AD 3A 5A			lda ATASCII2ANTIC_0541.RESULT
  1266 2D5B 99 3D 5B			sta adr.RESULT,y
  1267 2D5E CA				dex
  1268
  1269 				; --- ForToDoEpilog
  1270 2D5F EE 3D 5C			inc I
  1271 2D62 D0 DC			jne l_0563
  1272 2D64			l_0571
  1273 2D64			@exit
  1274
  1275 				; ------------------------------------------------------------
  1276
  1277 = 5A3D			adr.S	= [DATAORIGIN+$018D] .array [256]
  1278 2D64			.var S	= adr.S .word
  1279 = 5B3D			adr.RESULT	= [DATAORIGIN+$028D] .array [256]
  1280 2D64			.var RESULT	= adr.RESULT .word
  1281 = 5C3D			I	= DATAORIGIN+$038D
  1282
  1283 = 2D65			@VarData	= S
  1284 = 0201			@VarDataSize	= 513
  1285
  1286 2D64 60				rts						; ret
  1287 = 2D65 3D 5A		S
  1287 = 2D67 3D 5B		RESULT
  1287 				.endl
  1288
  1289 2D69			.local	ANTIC2ATASCII_0584				; FUNCTION | OVERLOAD
  1290
  1291 				; ------------------------------------------------------------
  1292
  1293 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  1294 				; as Pointer
  1295 2D69 B5 94			lda :STACKORIGIN,x
  1296 2D6B 85 82			sta :bp2
  1297 2D6D B5 A4			lda :STACKORIGIN+STACKWIDTH,x
  1298 2D6F 85 83			sta :bp2+1
  1299 2D71 A0 00			ldy #$00
  1300 2D73 B1 82 99 3F 5C C8 + 	mva:rne (:bp2),y adr.S,y+
  1301 2D7B A9 3F 8D BC 2D A9 + 	mwa #adr.S S
  1302 2D85 CA				dex
  1303 2D86			@main
  1304
  1305 				; optimize OK (B_CRT), line = 476
  1306
  1307 2D86 AD 3F 5C			lda adr.S+$00
  1308 2D89 8D 3F 5D			sta adr.RESULT+$00
  1309
  1310 				; optimize OK (B_CRT), line = 477
  1311
  1312 2D8C A9 01			lda #$01
  1313 2D8E 8D 3F 5E			sta I
  1314 2D91 AD 3F 5C 8D 98 2D		mva adr.S+$00 @FORTMP_059B_0
  1315
  1316 2D97			l_059E
  1317 				; --- ForToDoCondition
  1318 2D97 A9 00			lda @FORTMP_059B_0:#$00
  1319 2D99 CD 3F 5E			cmp I
  1320 2D9C 90 1D			jcc l_05AC
  1321
  1322 				; optimize FAIL (1, B_CRT), line = 478
  1323
  1324 2D9E E8				inx
  1325 2D9F AD 3F 5E 95 94		mva I :STACKORIGIN,x
  1326 2DA4 AC 3F 5E			ldy I
  1327 2DA7 B9 3F 5C			lda adr.S,y
  1328 2DAA 20 FA 2C			jsr ANTIC2ATASCII_0545
  1329 2DAD B4 94			ldy :STACKORIGIN,x
  1330 2DAF AD 3C 5A			lda ANTIC2ATASCII_0545.RESULT
  1331 2DB2 99 3F 5D			sta adr.RESULT,y
  1332 2DB5 CA				dex
  1333
  1334 				; --- ForToDoEpilog
  1335 2DB6 EE 3F 5E			inc I
  1336 2DB9 D0 DC			jne l_059E
  1337 2DBB			l_05AC
  1338 2DBB			@exit
  1339
  1340 				; ------------------------------------------------------------
  1341
  1342 = 5C3F			adr.S	= [DATAORIGIN+$038F] .array [256]
  1343 2DBB			.var S	= adr.S .word
  1344 = 5D3F			adr.RESULT	= [DATAORIGIN+$048F] .array [256]
  1345 2DBB			.var RESULT	= adr.RESULT .word
  1346 = 5E3F			I	= DATAORIGIN+$058F
  1347
  1348 = 2DBC			@VarData	= S
  1349 = 0201			@VarDataSize	= 513
  1350
  1351 2DBB 60				rts						; ret
  1352 = 2DBC 3F 5C		S
  1352 = 2DBE 3F 5D		RESULT
  1352 				.endl
  1353
  1354 2DC0			.local	CRT_INIT_05BF					; PROCEDURE | OVERLOAD
  1355
  1356 				; optimize OK (B_CRT), line = 483
  1357
  1358 2DC0 AD 41 5E			lda VRAM_ADDRESS
  1359 2DC3 8D 30 5A			sta CRT_VRAM
  1360 2DC6 AD 42 5E			lda VRAM_ADDRESS+1
  1361 2DC9 8D 31 5A			sta CRT_VRAM+1
  1362
  1363 				; optimize OK (B_CRT), line = 484
  1364
  1365 2DCC AD 43 5E			lda WIDTH
  1366 2DCF 8D 34 5A			sta CRT_SCREENWIDTH
  1367
  1368 				; optimize OK (B_CRT), line = 485
  1369
  1370 2DD2 AD 44 5E			lda HEIGHT
  1371 2DD5 8D 35 5A			sta CRT_SCREENHEIGHT
  1372
  1373 				; optimize OK (B_CRT), line = 486
  1374
  1375 2DD8 85 8C			sta :ecx
  1376 2DDA AD 43 5E			lda WIDTH
  1377 2DDD 85 84			sta :eax
  1378 					.ifdef fmulinit
  1379 					fmulu_8
  1380 					els
  1381 2DDF 20 21 28			imulCL
  1382 					eif
  1383 2DE2 8D 33 5A			sta CRT_SIZE+1
  1384 2DE5 A5 84			lda :eax
  1385 2DE7 8D 32 5A			sta CRT_SIZE
  1386
  1387 				; optimize OK (B_CRT), line = 487
  1388
  1389 2DEA AD 30 5A			lda CRT_VRAM
  1390 2DED 8D 36 5A			sta CRT_CURSOR
  1391 2DF0 AD 31 5A			lda CRT_VRAM+1
  1392 2DF3 8D 37 5A			sta CRT_CURSOR+1
  1393
  1394 				; optimize OK (B_CRT), line = 488
  1395
  1396 2DF6 A9 00			lda #$00
  1397 2DF8 8D 38 5A			sta CRT_LEFTMARGIN
  1398
  1399 				; ------------------------------------------------------------
  1400
  1401 = 5E41			VRAM_ADDRESS	= DATAORIGIN+$0591
  1402 = 5E43			WIDTH	= DATAORIGIN+$0593
  1403 = 5E44			HEIGHT	= DATAORIGIN+$0594
  1404
  1405 = 5E41			@VarData	= VRAM_ADDRESS
  1406 = 0004			@VarDataSize	= 4
  1407
  1408 2DFB			@exit
  1409 					.ifdef @new
  1410 					lda <@VarData
  1411 					sta :ztmp
  1412 					lda >@VarData
  1413 					ldy #@VarDataSize-1
  1414 					jmp @FreeMem
  1415 					els
  1416 2DFB 60				rts						; ret
  1417 					eif
  1418 				.endl
  1419
  1420 2DFC			.local	CRT_GOTOXY					; PROCEDURE
  1421
  1422 				; optimize OK (B_CRT), line = 516
  1423
  1424 2DFC AD 34 5A			lda CRT_SCREENWIDTH
  1425 2DFF 85 8C			sta :ecx
  1426 2E01 AD 46 5E			lda Y
  1427 2E04 85 84			sta :eax
  1428 					.ifdef fmulinit
  1429 					fmulu_8
  1430 					els
  1431 2E06 20 21 28			imulCL
  1432 					eif
  1433 2E09 A5 84			lda :eax
  1434 2E0B 18 6D 45 5E			add X
  1435 2E0F 85 9D			sta :STACKORIGIN+9
  1436 2E11 A5 85			lda :eax+1
  1437 2E13 69 00			adc #$00
  1438 2E15 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  1439 2E17 A5 9D			lda :STACKORIGIN+9
  1440 2E19 18 6D 30 5A			add CRT_VRAM
  1441 2E1D 8D 36 5A			sta CRT_CURSOR
  1442 2E20 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  1443 2E22 6D 31 5A			adc CRT_VRAM+1
  1444 2E25 8D 37 5A			sta CRT_CURSOR+1
  1445
  1446 				; ------------------------------------------------------------
  1447
  1448 = 5E45			X	= DATAORIGIN+$0595
  1449 = 5E46			Y	= DATAORIGIN+$0596
  1450
  1451 = 5E45			@VarData	= X
  1452 = 0002			@VarDataSize	= 2
  1453
  1454 2E28			@exit
  1455 					.ifdef @new
  1456 					lda <@VarData
  1457 					sta :ztmp
  1458 					lda >@VarData
  1459 					ldy #@VarDataSize-1
  1460 					jmp @FreeMem
  1461 					els
  1462 2E28 60				rts						; ret
  1463 					eif
  1464 				.endl
  1465
  1466 2E29			.local	CRT_WRITE_0604					; PROCEDURE | OVERLOAD
  1467
  1468 				; ------------------------------------------------------------
  1469
  1470 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  1471 				; as Pointer
  1472 2E29 B5 94			lda :STACKORIGIN,x
  1473 2E2B 85 82			sta :bp2
  1474 2E2D B5 A4			lda :STACKORIGIN+STACKWIDTH,x
  1475 2E2F 85 83			sta :bp2+1
  1476 2E31 A0 00			ldy #$00
  1477 2E33 B1 82 99 47 5E C8 + 	mva:rne (:bp2),y adr.S,y+
  1478 2E3B A9 47 8D 74 2E A9 + 	mwa #adr.S S
  1479 2E45 CA				dex
  1480 2E46			@main
  1481
  1482 				; optimize OK (B_CRT), line = 531
  1483
  1484 2E46 AD 47 5E			lda adr.S+$00
  1485 2E49 85 84			sta SYSTEM.MOVE_045A.COUNT
  1486 2E4B A9 48			lda <adr.S+$01
  1487 2E4D 85 88			sta SYSTEM.MOVE_045A.SOURCE
  1488 2E4F A9 5E			lda >adr.S+$01
  1489 2E51 85 89			sta SYSTEM.MOVE_045A.SOURCE+1
  1490 2E53 AD 36 5A			lda CRT_CURSOR
  1491 2E56 85 8C			sta SYSTEM.MOVE_045A.DEST
  1492 2E58 AD 37 5A			lda CRT_CURSOR+1
  1493 2E5B 85 8D			sta SYSTEM.MOVE_045A.DEST+1
  1494 2E5D A9 00			lda #$00
  1495 2E5F 85 85			sta SYSTEM.MOVE_045A.COUNT+1
  1496 2E61				.local +MAIN.SYSTEM.MOVE_045A
  1497 2E61				m@INLINE
Macro: MAIN.SYSTEM.MOVE_045A.M@INLINE [Source: artur.a65]
     4 2E61 20 74 27			jsr @move
Source: artur.a65
  1498 					.endl
  1499
  1500 				; optimize OK (B_CRT), line = 532
  1501
  1502 2E64 AD 36 5A			lda CRT_CURSOR
  1503 2E67 18 6D 47 5E			add adr.S+$00
  1504 2E6B 8D 36 5A			sta CRT_CURSOR
  1505 2E6E 90 03			scc
  1506 2E70 EE 37 5A			inc CRT_CURSOR+1
  1507
  1508 				; ------------------------------------------------------------
  1509
  1510 = 5E47			adr.S	= [DATAORIGIN+$0597] .array [256]
  1511 2E73			.var S	= adr.S .word
  1512
  1513 = 2E74			@VarData	= S
  1514 = 0100			@VarDataSize	= 256
  1515
  1516 2E73			@exit
  1517 					.ifdef @new
  1518 					lda <@VarData
  1519 					sta :ztmp
  1520 					lda >@VarData
  1521 					ldy #@VarDataSize-1
  1522 					jmp @FreeMem
  1523 					els
  1524 2E73 60				rts						; ret
  1525 					eif
  1526 = 2E74 47 5E		S
  1526 				.endl
  1527
  1528 2E76			.local	CRT_PUT_0617					; PROCEDURE | OVERLOAD
  1529 2E76 8D 47 5F			sta B
  1530
  1531 				; optimize OK (B_CRT), line = 574
  1532
  1533 2E79 AC 37 5A			ldy CRT_CURSOR+1
  1534 2E7C 84 81			sty :bp+1
  1535 2E7E AC 36 5A			ldy CRT_CURSOR
  1536 2E81 AD 47 5F			lda B
  1537 2E84 91 80			sta (:bp),y
  1538
  1539 				; optimize FAIL (0, B_CRT), line = 575
  1540
  1541 2E86 EE 36 5A			inc CRT_CURSOR
  1542 2E89 D0 03			sne
  1543 2E8B EE 37 5A			inc CRT_CURSOR+1
  1544
  1545 				; ------------------------------------------------------------
  1546
  1547 = 5F47			B	= DATAORIGIN+$0697
  1548
  1549 = 5F47			@VarData	= B
  1550 = 0001			@VarDataSize	= 1
  1551
  1552 2E8E			@exit
  1553 					.ifdef @new
  1554 					lda <@VarData
  1555 					sta :ztmp
  1556 					lda >@VarData
  1557 					ldy #@VarDataSize-1
  1558 					jmp @FreeMem
  1559 					els
  1560 2E8E 60				rts						; ret
  1561 					eif
  1562 				.endl
  1563
  1564 2E8F			.local	CRT_KEYPRESSED					; FUNCTION
  1565
  1566 				; optimize OK (B_CRT), line = 592
  1567
  1568 2E8F A9 00			lda #$00
  1569 2E91 8D 48 5F			sta RESULT
  1570
  1571 				; optimize OK (B_CRT), line = 593
  1572
  1573 2E94 AD 0F D2			lda ATARI.SKSTAT
  1574 2E97 29 04			and #$04
  1575 2E99 D0 05			jne l_0642
  1576 2E9B A9 01			lda #$01
  1577 2E9D 8D 48 5F			sta RESULT
  1578 2EA0			l_0642
  1579 2EA0			@exit
  1580
  1581 				; ------------------------------------------------------------
  1582
  1583 = 5F48			RESULT	= DATAORIGIN+$0698
  1584 2EA0 60				rts						; ret
  1585 				.endl
  1586
  1587 2EA1			.local	CRT_READKEY					; FUNCTION
  1588
  1589 				; optimize OK (B_CRT), line = 598
  1590
  1591 2EA1 AD 09 D2			lda KBCODE
  1592 2EA4 8D 49 5F			sta RESULT
  1593
  1594 				; --- RepeatUntilProlog
  1595 2EA7			l_0654
  1596
  1597 				; optimize FAIL ('CRT_KEYPRESSED', B_CRT), line = 599
  1598
  1599 2EA7 20 8F 2E			jsr CRT_KEYPRESSED
  1600 2EAA E8				inx
  1601 2EAB AD 48 5F 95 94		mva CRT_KEYPRESSED.RESULT :STACKORIGIN,x
  1602 2EB0 20 42 27			jsr notBOOLEAN
  1603 2EB3 CA				dex
  1604 2EB4 A0 01			ldy #1
  1605 2EB6 AD 49 5F			lda RESULT
  1606 2EB9 CD 09 D2			cmp KBCODE
  1607 2EBC D0 01			bne @+
  1608 2EBE 88				dey
  1609 				@
  1610 2EBF 98				tya
  1611 2EC0 15 95			ora :STACKORIGIN+1,x
  1612 2EC2 F0 E3			jeq l_0654
  1613
  1614 				; --- RepeatUntilProlog
  1615 2EC4			l_066B
  1616
  1617 				; optimize FAIL ('CRT_KEYPRESSED', B_CRT), line = 600
  1618
  1619 2EC4 20 8F 2E			jsr CRT_KEYPRESSED
  1620 2EC7 AD 48 5F			lda CRT_KEYPRESSED.RESULT
  1621 2ECA F0 F8			jeq l_066B
  1622
  1623 				; optimize OK (B_CRT), line = 601
  1624
  1625 2ECC AD 09 D2			lda KBCODE
  1626 2ECF 8D 49 5F			sta RESULT
  1627 2ED2			@exit
  1628
  1629 				; ------------------------------------------------------------
  1630
  1631 = 5F49			RESULT	= DATAORIGIN+$0699
  1632 2ED2 60				rts						; ret
  1633 				.endl
  1634
  1635 2ED3			.local	CRT_READCHAR					; FUNCTION
  1636
  1637 				; --- RepeatUntilProlog
  1638 2ED3			l_067B
  1639
  1640 				; optimize FAIL (0, B_CRT), line = 607
  1641
  1642 2ED3 20 A1 2E			jsr CRT_READKEY
  1643 2ED6 AC 49 5F			ldy CRT_READKEY.RESULT
  1644 2ED9 B9 DA 23			lda adr.CRT_KEYCODE,y
  1645 2EDC 8D 4A 5F			sta RESULT
  1646
  1647 				; optimize OK (B_CRT), line = 608
  1648
  1649 2EDF C9 FF			cmp #$FF
  1650 2EE1 F0 F0			jeq l_067B
  1651 2EE3			@exit
  1652
  1653 				; ------------------------------------------------------------
  1654
  1655 = 5F4A			RESULT	= DATAORIGIN+$069A
  1656 2EE3 60				rts						; ret
  1657 				.endl
  1658
  1659 2EE4			.local	CRT_READCHARI					; FUNCTION
  1660
  1661 				; optimize FAIL ('CRT_READCHAR', B_CRT), line = 613
  1662
  1663 2EE4 20 D3 2E			jsr CRT_READCHAR
  1664 2EE7 AD 4A 5F			lda CRT_READCHAR.RESULT
  1665 2EEA 20 E2 2C			jsr ATASCII2ANTIC_0541
  1666 2EED AD 3A 5A			lda ATASCII2ANTIC_0541.RESULT
  1667 2EF0 8D 4B 5F			sta RESULT
  1668 2EF3			@exit
  1669
  1670 				; ------------------------------------------------------------
  1671
  1672 = 5F4B			RESULT	= DATAORIGIN+$069B
  1673 2EF3 60				rts						; ret
  1674 				.endl
  1675
  1676 2EF4			.local	CRT_READSTRINGI_0699				; FUNCTION | OVERLOAD
  1677 2EF4 8D 4C 5F			sta LIMIT
  1678
  1679 2EF7 A9 00 8D 4D 5F		mva #$00 adr.RESULT
  1680
  1681 				; --- RepeatUntilProlog
  1682 2EFC			l_069D
  1683
  1684 				; optimize FAIL ('CRT_READCHARI', B_CRT), line = 621
  1685
  1686 2EFC 20 E4 2E			jsr CRT_READCHARI
  1687 2EFF AD 4B 5F			lda CRT_READCHARI.RESULT
  1688 2F02 8D 4D 60			sta A
  1689
  1690 				; optimize OK (B_CRT), line = 622
  1691
  1692 2F05 C9 DB			cmp #$DB
  1693 2F07 D0 03			jne l_06B3
  1694 2F09 4C 69 2F			jmp @exit					; exit
  1695 2F0C			l_06B3
  1696
  1697 				; optimize OK (B_CRT), line = 623
  1698
  1699 2F0C AD 4D 60			lda A
  1700 2F0F C9 7E			cmp #$7E
  1701 2F11 D0 22			jne l_06DA
  1702 2F13 AD 4D 5F			lda adr.RESULT+$00
  1703 2F16 F0 1D			jeq l_06DA
  1704
  1705 				; optimize FAIL (0, B_CRT), line = 624
  1706
  1707 2F18 AD 36 5A			lda CRT_CURSOR
  1708 2F1B D0 03			bne @+
  1709 2F1D CE 37 5A			dec CRT_CURSOR+1
  1710 				@
  1711 2F20 CE 36 5A			dec CRT_CURSOR
  1712
  1713 				; optimize OK (B_CRT), line = 625
  1714
  1715 2F23 AC 37 5A			ldy CRT_CURSOR+1
  1716 2F26 84 81			sty :bp+1
  1717 2F28 AC 36 5A			ldy CRT_CURSOR
  1718 2F2B A9 00			lda #$00
  1719 2F2D 91 80			sta (:bp),y
  1720
  1721 				; optimize OK (B_CRT), line = 626
  1722
  1723 2F2F CE 4D 5F			dec adr.RESULT+$00
  1724 2F32 4C 66 2F			jmp l_06EE
  1725 2F35			l_06DA
  1726
  1727 				; optimize OK (B_CRT), line = 628
  1728
  1729 2F35 AD 4D 60			lda A
  1730 2F38 C9 C2			cmp #$C2
  1731 2F3A F0 2A			jeq l_073F
  1732 2F3C C9 C1			cmp #$C1
  1733 2F3E F0 26			jeq l_073F
  1734 2F40 C9 7F			cmp #$7F
  1735 2F42 F0 22			jeq l_073F
  1736 2F44 C9 5B			cmp #$5B
  1737 2F46 F0 1E			jeq l_073F
  1738 2F48 C9 7E			cmp #$7E
  1739 2F4A F0 1A			jeq l_073F
  1740 2F4C AD 4D 5F			lda adr.RESULT+$00
  1741 2F4F CD 4C 5F			cmp LIMIT
  1742 2F52 B0 12			jcs l_073F
  1743
  1744 				; optimize OK (B_CRT), line = 634
  1745
  1746 2F54 AD 4D 60			lda A
  1747 2F57 20 76 2E			jsr CRT_PUT_0617
  1748
  1749 				; optimize OK (B_CRT), line = 635
  1750
  1751 2F5A EE 4D 5F			inc adr.RESULT+$00
  1752
  1753 				; optimize OK (B_CRT), line = 636
  1754
  1755 2F5D AC 4D 5F			ldy adr.RESULT+$00
  1756 2F60 AD 4D 60			lda A
  1757 2F63 99 4D 5F			sta adr.RESULT,y
  1758 2F66			l_073F
  1759 2F66			l_06EE
  1760
  1761 				; optimize OK (B_CRT), line = 638
  1762
  1763 2F66 4C FC 2E			jmp l_069D
  1764 2F69			@exit
  1765
  1766 				; ------------------------------------------------------------
  1767
  1768 = 5F4C			LIMIT	= DATAORIGIN+$069C
  1769 = 5F4D			adr.RESULT	= [DATAORIGIN+$069D] .array [256]
  1770 2F69			.var RESULT	= adr.RESULT .word
  1771 = 604D			A	= DATAORIGIN+$079D
  1772
  1773 = 5F4C			@VarData	= LIMIT
  1774 = 0102			@VarDataSize	= 258
  1775
  1776 2F69 60				rts						; ret
  1777 = 2F6A 4D 5F		RESULT
  1777 				.endl
  1778
  1779 2F6C			.local	CRT_READSTRING_0758				; FUNCTION | OVERLOAD
  1780 2F6C 8D 4E 60			sta LIMIT
  1781
  1782 				; optimize OK (B_CRT), line = 648
  1783
  1784 2F6F 20 F4 2E			jsr CRT_READSTRINGI_0699
  1785 2F72 E8				inx
  1786 2F73 AD 6A 2F 95 94		mva CRT_READSTRINGI_0699.RESULT :STACKORIGIN,x
  1787 2F78 AD 6B 2F 95 A4		mva CRT_READSTRINGI_0699.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  1788 2F7D 20 69 2D			jsr ANTIC2ATASCII_0584
  1789 2F80 E8				inx
  1790 2F81 AD BE 2D			lda ANTIC2ATASCII_0584.RESULT
  1791 2F84 85 88			sta @move.src
  1792 2F86 AD BF 2D			lda ANTIC2ATASCII_0584.RESULT+1
  1793 2F89 85 89			sta @move.src+1
  1794 2F8B AC A0 2F 84 82 AC + 	mwy RESULT :bp2
  1795 2F95 A0 00			ldy #$00
  1796 2F97 B1 88 91 82 C8 D0 + 	mva:rne (@move.src),y (:bp2),y+
  1797 2F9E CA				dex
  1798 2F9F			@exit
  1799
  1800 				; ------------------------------------------------------------
  1801
  1802 = 604E			LIMIT	= DATAORIGIN+$079E
  1803 = 604F			adr.RESULT	= [DATAORIGIN+$079F] .array [256]
  1804 2F9F			.var RESULT	= adr.RESULT .word
  1805
  1806 = 604E			@VarData	= LIMIT
  1807 = 0101			@VarDataSize	= 257
  1808
  1809 2F9F 60				rts						; ret
  1810 = 2FA0 4F 60		RESULT
  1810 				.endl
  1811
  1812 2FA2			.local	CRT_STARTPRESSED				; FUNCTION
  1813
  1814 				; optimize OK (B_CRT), line = 749
  1815
  1816 2FA2 AD 1F D0			lda CONSOL
  1817 2FA5 A0 01			ldy #1
  1818 2FA7 29 01			and #$01
  1819 2FA9 F0 01			beq @+
  1820 2FAB 88				dey
  1821 				@
  1822 2FAC 98				tya
  1823 2FAD 8D 4F 61			sta RESULT
  1824 2FB0			@exit
  1825
  1826 				; ------------------------------------------------------------
  1827
  1828 = 614F			RESULT	= DATAORIGIN+$089F
  1829 2FB0 60				rts						; ret
  1830 				.endl
  1831
  1832 2FB1			.local	CRT_SELECTPRESSED				; FUNCTION
  1833
  1834 				; optimize OK (B_CRT), line = 754
  1835
  1836 2FB1 AD 1F D0			lda CONSOL
  1837 2FB4 A0 01			ldy #1
  1838 2FB6 29 02			and #$02
  1839 2FB8 F0 01			beq @+
  1840 2FBA 88				dey
  1841 				@
  1842 2FBB 98				tya
  1843 2FBC 8D 50 61			sta RESULT
  1844 2FBF			@exit
  1845
  1846 				; ------------------------------------------------------------
  1847
  1848 = 6150			RESULT	= DATAORIGIN+$08A0
  1849 2FBF 60				rts						; ret
  1850 				.endl
  1851
  1852 2FC0			.local	CRT_OPTIONPRESSED				; FUNCTION
  1853
  1854 				; optimize OK (B_CRT), line = 759
  1855
  1856 2FC0 AD 1F D0			lda CONSOL
  1857 2FC3 A0 01			ldy #1
  1858 2FC5 29 04			and #$04
  1859 2FC7 F0 01			beq @+
  1860 2FC9 88				dey
  1861 				@
  1862 2FCA 98				tya
  1863 2FCB 8D 51 61			sta RESULT
  1864 2FCE			@exit
  1865
  1866 				; ------------------------------------------------------------
  1867
  1868 = 6151			RESULT	= DATAORIGIN+$08A1
  1869 2FCE 60				rts						; ret
  1870 				.endl
  1871
  1872 2FCF			.local	CRT_HELPPRESSED					; FUNCTION
  1873
  1874 				; optimize OK (B_CRT), line = 764
  1875
  1876 2FCF AD 0F D2			lda ATARI.SKSTAT
  1877 2FD2 29 04			and #$04
  1878 2FD4 D0 10			jne l_07C6s
  1879 2FD6 AD 09 D2			lda KBCODE
  1880 2FD9 29 3F			and #$3F
  1881 2FDB C9 11			cmp #$11
  1882 2FDD D0 07			jne l_07C6s
  1883 2FDF A9 01 8D 52 61 D0 + 	mva:sne #true RESULT
  1884 2FE6			l_07C6s
  1885 2FE6 A9 00 8D 52 61		mva #false RESULT
  1886 2FEB			@exit
  1887
  1888 				; ------------------------------------------------------------
  1889
  1890 = 6152			RESULT	= DATAORIGIN+$08A2
  1891 2FEB 60				rts						; ret
  1892 				.endl
  1893
  1894 				; ------------------------------------------------------------
  1895
  1896 = 0028			DEFAULT_SCREENWIDTH	= $28
  1897 = 0018			DEFAULT_SCREENHEIGHT	= $18
  1898 = 009B			CHAR_RETURN	= $9B
  1899 = 001B			CHAR_ESCAPE	= $1B
  1900 = 007E			CHAR_BACKSPACE	= $7E
  1901 = 007F			CHAR_TAB	= $7F
  1902 = 0081			CHAR_INVERSE	= $81
  1903 = 0082			CHAR_CAPS	= $82
  1904 = 00DB			ICHAR_RETURN	= $DB
  1905 = 005B			ICHAR_ESCAPE	= $5B
  1906 = 007E			ICHAR_BACKSPACE	= $7E
  1907 = 007F			ICHAR_TAB	= $7F
  1908 = 00C1			ICHAR_INVERSE	= $C1
  1909 = 00C2			ICHAR_CAPS	= $C2
  1910 = 23DA			adr.CRT_KEYCODE	= CODEORIGIN+$03DA
  1911 2FEC			.var CRT_KEYCODE	= adr.CRT_KEYCODE .word
  1912 = 5A30			CRT_VRAM	= DATAORIGIN+$0180
  1913 = 5A32			CRT_SIZE	= DATAORIGIN+$0182
  1914 = 5A34			CRT_SCREENWIDTH	= DATAORIGIN+$0184
  1915 = 5A35			CRT_SCREENHEIGHT	= DATAORIGIN+$0185
  1916 = 5A36			CRT_CURSOR	= DATAORIGIN+$0186
  1917 = 5A38			CRT_LEFTMARGIN	= DATAORIGIN+$0188
  1918 = D209			KBCODE	= $D209
  1919 = D01F			CONSOL	= $D01F
  1920
  1921 = 2FEC DA 23		CRT_KEYCODE
  1921 				.endl							; UNIT B_CRT
  1922
  1923 				; ------------------------------------------------------------
  1924
  1925 2FEE			.local	B_SYSTEM					; UNIT
  1926
  1927 				; ------------------------------------------------------------
  1928
  1929 = 6153			__NMIEN	= DATAORIGIN+$08A3
  1930 = 0080			PORTB_SELFTEST_OFF	= $80
  1931 = 0002			PORTB_BASIC_OFF	= $02
  1932 = 0001			PORTB_SYSTEM_ON	= $01
  1933
  1934 				.endl							; UNIT B_SYSTEM
  1935
  1936 				; ------------------------------------------------------------
  1937
  1938 2FEE			.local	B_PMG						; UNIT
  1939
  1940 2FEE			.local	PMG_INIT_07CA					; PROCEDURE | OVERLOAD
  1941
  1942 				; optimize OK (B_PMG), line = 171
  1943
  1944 2FEE AD 59 61			lda BASE
  1945 2FF1 8D 07 D4			sta PMG_PMBASE
  1946
  1947 				; optimize OK (B_PMG), line = 172
  1948
  1949 2FF4 A9 00			lda #$00
  1950 2FF6 8D 55 61			sta PMG_BASE
  1951 2FF9 AD 59 61			lda BASE
  1952 2FFC 8D 56 61			sta PMG_BASE+1
  1953
  1954 				; optimize OK (B_PMG), line = 173
  1955
  1956 2FFF AD 5B 61			lda GRACTL
  1957 3002 8D 1D D0			sta PMG_GRACTL
  1958
  1959 				; optimize OK (B_PMG), line = 174
  1960
  1961 3005 AD 2F 02			lda PMG_SDMCTL_S
  1962 3008 29 E0			and #$E0
  1963 300A 0D 5A 61			ora SDMCTL
  1964 300D 8D 5C 61			sta SDMCTL_FLAGS
  1965
  1966 				; optimize OK (B_PMG), line = 175
  1967
  1968 3010 8D 00 D4			sta PMG_SDMCTL
  1969
  1970 				; optimize OK (B_PMG), line = 176
  1971
  1972 3013 8D 2F 02			sta PMG_SDMCTL_S
  1973
  1974 				; optimize OK (B_PMG), line = 177
  1975
  1976 3016 AD 5A 61			lda SDMCTL
  1977 3019 29 10			and #$10
  1978 301B F0 12			jeq l_0815
  1979
  1980 				; optimize OK (B_PMG), line = 178
  1981
  1982 301D A9 01			lda #$01
  1983 301F 8D 54 61			sta PMG_ONELINE
  1984
  1985 				; optimize OK (B_PMG), line = 179
  1986
  1987 3022 A9 00			lda #$00
  1988 3024 8D 57 61			sta PMG_SIZE
  1989 3027 A9 08			lda #$08
  1990 3029 8D 58 61			sta PMG_SIZE+1
  1991 302C 4C 3C 30			jmp l_0827
  1992 302F			l_0815
  1993
  1994 				; optimize OK (B_PMG), line = 181
  1995
  1996 302F A9 00			lda #$00
  1997 3031 8D 54 61			sta PMG_ONELINE
  1998
  1999 				; optimize OK (B_PMG), line = 182
  2000
  2001 3034 8D 57 61			sta PMG_SIZE
  2002 3037 A9 04			lda #$04
  2003 3039 8D 58 61			sta PMG_SIZE+1
  2004 303C			l_0827
  2005
  2006 				; ------------------------------------------------------------
  2007
  2008 = 6159			BASE	= DATAORIGIN+$08A9
  2009 = 615A			SDMCTL	= DATAORIGIN+$08AA
  2010 = 615B			GRACTL	= DATAORIGIN+$08AB
  2011 = 615C			SDMCTL_FLAGS	= DATAORIGIN+$08AC
  2012
  2013 = 6159			@VarData	= BASE
  2014 = 0004			@VarDataSize	= 4
  2015
  2016 303C			@exit
  2017 					.ifdef @new
  2018 					lda <@VarData
  2019 					sta :ztmp
  2020 					lda >@VarData
  2021 					ldy #@VarDataSize-1
  2022 					jmp @FreeMem
  2023 					els
  2024 303C 60				rts						; ret
  2025 					eif
  2026 				.endl
  2027
  2028 303D			.local	PMG_INIT_0830					; PROCEDURE | OVERLOAD
  2029
  2030 				; optimize OK (B_PMG), line = 189
  2031
  2032 303D AD 5D 61			lda BASE
  2033 3040 8D 59 61			sta PMG_INIT_07CA.BASE
  2034 3043 AD 5E 61			lda SDMCTL
  2035 3046 8D 5A 61			sta PMG_INIT_07CA.SDMCTL
  2036 3049 AD 5F 61			lda GRACTL
  2037 304C 8D 5B 61			sta PMG_INIT_07CA.GRACTL
  2038 304F 20 EE 2F			jsr PMG_INIT_07CA
  2039
  2040 				; ------------------------------------------------------------
  2041
  2042 = 615D			BASE	= DATAORIGIN+$08AD
  2043 = 615E			SDMCTL	= DATAORIGIN+$08AE
  2044 = 615F			GRACTL	= DATAORIGIN+$08AF
  2045
  2046 = 615D			@VarData	= BASE
  2047 = 0003			@VarDataSize	= 3
  2048
  2049 3052			@exit
  2050 					.ifdef @new
  2051 					lda <@VarData
  2052 					sta :ztmp
  2053 					lda >@VarData
  2054 					ldy #@VarDataSize-1
  2055 					jmp @FreeMem
  2056 					els
  2057 3052 60				rts						; ret
  2058 					eif
  2059 				.endl
  2060
  2061 3053			.local	PMG_INIT_083E					; PROCEDURE | OVERLOAD
  2062 3053 8D 60 61			sta BASE
  2063
  2064 				; optimize OK (B_PMG), line = 195
  2065
  2066 3056 8D 5D 61			sta PMG_INIT_0830.BASE
  2067 3059 AD 61 61			lda SDMCTL
  2068 305C 8D 5E 61			sta PMG_INIT_0830.SDMCTL
  2069 305F 20 3D 30			jsr PMG_INIT_0830
  2070
  2071 				; ------------------------------------------------------------
  2072
  2073 = 6160			BASE	= DATAORIGIN+$08B0
  2074 = 6161			SDMCTL	= DATAORIGIN+$08B1
  2075
  2076 = 6160			@VarData	= BASE
  2077 = 0002			@VarDataSize	= 2
  2078
  2079 3062			@exit
  2080 					.ifdef @new
  2081 					lda <@VarData
  2082 					sta :ztmp
  2083 					lda >@VarData
  2084 					ldy #@VarDataSize-1
  2085 					jmp @FreeMem
  2086 					els
  2087 3062 60				rts						; ret
  2088 					eif
  2089 				.endl
  2090
  2091 3063			.local	PMG_DISABLE					; PROCEDURE
  2092
  2093 				; optimize OK (B_PMG), line = 206
  2094
  2095 3063 A9 00			lda #$00
  2096 3065 8D 1D D0			sta PMG_GRACTL
  2097
  2098 				; optimize OK (B_PMG), line = 207
  2099
  2100 3068 AD 2F 02			lda PMG_SDMCTL_S
  2101 306B 29 C3			and #$C3
  2102 306D 8D 62 61			sta SDMCTL_FLAGS
  2103
  2104 				; optimize OK (B_PMG), line = 208
  2105
  2106 3070 8D 00 D4			sta PMG_SDMCTL
  2107
  2108 				; optimize OK (B_PMG), line = 209
  2109
  2110 3073 8D 2F 02			sta PMG_SDMCTL_S
  2111
  2112 				; ------------------------------------------------------------
  2113
  2114 = 6162			SDMCTL_FLAGS	= DATAORIGIN+$08B2
  2115
  2116 = 6162			@VarData	= SDMCTL_FLAGS
  2117 = 0001			@VarDataSize	= 1
  2118
  2119 3076			@exit
  2120 					.ifdef @new
  2121 					lda <@VarData
  2122 					sta :ztmp
  2123 					lda >@VarData
  2124 					ldy #@VarDataSize-1
  2125 					jmp @FreeMem
  2126 					els
  2127 3076 60				rts						; ret
  2128 					eif
  2129 				.endl
  2130
  2131 				; ------------------------------------------------------------
  2132
  2133 = 0001			PMG_VDELAY_M0	= $01
  2134 = 0002			PMG_VDELAY_M1	= $02
  2135 = 0004			PMG_VDELAY_M2	= $04
  2136 = 0008			PMG_VDELAY_M3	= $08
  2137 = 0010			PMG_VDELAY_P0	= $10
  2138 = 0020			PMG_VDELAY_P1	= $20
  2139 = 0040			PMG_VDELAY_P2	= $40
  2140 = 0080			PMG_VDELAY_P3	= $80
  2141 = 0000			PMG_SIZE_NORMAL	= $00
  2142 = 0001			PMG_SIZE_X2	= $01
  2143 = 0003			PMG_SIZE_X4	= $03
  2144 = 0001			PMG_MSIZE0_X2	= $01
  2145 = 0003			PMG_MSIZE0_X4	= $03
  2146 = 0004			PMG_MSIZE1_X2	= $04
  2147 = 000C			PMG_MSIZE1_X4	= $0C
  2148 = 0010			PMG_MSIZE2_X2	= $10
  2149 = 0030			PMG_MSIZE2_X4	= $30
  2150 = 0040			PMG_MSIZE3_X2	= $40
  2151 = 00C0			PMG_MSIZE4_X4	= $C0
  2152 = 0001			PMG_GRACTL_MISSILES	= $01
  2153 = 0002			PMG_GRACTL_PLAYERS	= $02
  2154 = 0004			PMG_GRACTL_LATCH	= $04
  2155 = 0003			PMG_GRACTL_DEFAULT	= $03
  2156 = 0004			PMG_SDMCTL_DMA_MISSILE	= $04
  2157 = 0008			PMG_SDMCTL_DMA_PLAYER	= $08
  2158 = 000C			PMG_SDMCTL_DMA_BOTH	= $0C
  2159 = 0010			PMG_SDMCTL_ONELINE	= $10
  2160 = 0000			PMG_SDMCTL_SCREEN_DISABLED	= $00
  2161 = 0001			PMG_SDMCTL_SCREEN_NARROW	= $01
  2162 = 0002			PMG_SDMCTL_SCREEN_NORMAL	= $02
  2163 = 0003			PMG_SDMCTL_SCREEN_WIDE	= $03
  2164 = 000E			PMG_SDMCTL_DEFAULT	= $0E
  2165 = 0001			PMG_COLLISION_PLAYER_TO_P0	= $01
  2166 = 0002			PMG_COLLISION_PLAYER_TO_P1	= $02
  2167 = 0004			PMG_COLLISION_PLAYER_TO_P2	= $04
  2168 = 0008			PMG_COLLISION_PLAYER_TO_P3	= $08
  2169 = 0010			PMG_5PLAYER	= $10
  2170 = 0020			PMG_OVERLAP	= $20
  2171 = D400			PMG_SDMCTL	= $D400
  2172 = 022F			PMG_SDMCTL_S	= $022F
  2173 = D01B			PMG_GPRIOR	= $D01B
  2174 = 026F			PMG_GPRIOR_S	= $026F
  2175 = D012			PMG_PCOLR0	= $D012
  2176 = D013			PMG_PCOLR1	= $D013
  2177 = D014			PMG_PCOLR2	= $D014
  2178 = D015			PMG_PCOLR3	= $D015
  2179 = D012			adr.PMG_PCOLR	= $D012
  2180 3077			.var PMG_PCOLR	= adr.PMG_PCOLR .word
  2181 = 02C0			PMG_PCOLR0_S	= $02C0
  2182 = 02C1			PMG_PCOLR1_S	= $02C1
  2183 = 02C2			PMG_PCOLR2_S	= $02C2
  2184 = 02C3			PMG_PCOLR3_S	= $02C3
  2185 = 02C0			adr.PMG_PCOLR_S	= $02C0
  2186 3077			.var PMG_PCOLR_S	= adr.PMG_PCOLR_S .word
  2187 = D000			PMG_HPOS0	= $D000
  2188 = D001			PMG_HPOS1	= $D001
  2189 = D002			PMG_HPOS2	= $D002
  2190 = D003			PMG_HPOS3	= $D003
  2191 = D000			adr.PMG_HPOS	= $D000
  2192 3077			.var PMG_HPOS	= adr.PMG_HPOS .word
  2193 = D004			PMG_HPOSM0	= $D004
  2194 = D005			PMG_HPOSM1	= $D005
  2195 = D006			PMG_HPOSM2	= $D006
  2196 = D007			PMG_HPOSM3	= $D007
  2197 = D004			adr.PMG_HPOSM	= $D004
  2198 3077			.var PMG_HPOSM	= adr.PMG_HPOSM .word
  2199 = D008			PMG_SIZEP0	= $D008
  2200 = D009			PMG_SIZEP1	= $D009
  2201 = D00A			PMG_SIZEP2	= $D00A
  2202 = D00B			PMG_SIZEP3	= $D00B
  2203 = D008			adr.PMG_SIZEP	= $D008
  2204 3077			.var PMG_SIZEP	= adr.PMG_SIZEP .word
  2205 = D00C			PMG_SIZEM	= $D00C
  2206 = D00D			PMG_GRAFP0	= $D00D
  2207 = D00E			PMG_GRAFP1	= $D00E
  2208 = D00F			PMG_GRAFP2	= $D00F
  2209 = D010			PMG_GRAFP3	= $D010
  2210 = D00D			adr.PMG_GRAFP	= $D00D
  2211 3077			.var PMG_GRAFP	= adr.PMG_GRAFP .word
  2212 = D011			PMG_GRAFM	= $D011
  2213 = D00C			PMG_P0PL	= $D00C
  2214 = D00D			PMG_P1PL	= $D00D
  2215 = D00E			PMG_P2PL	= $D00E
  2216 = D00F			PMG_P3PL	= $D00F
  2217 = D00C			adr.PMG_PPL	= $D00C
  2218 3077			.var PMG_PPL	= adr.PMG_PPL .word
  2219 = D01C			PMG_VDELAY	= $D01C
  2220 = D01D			PMG_GRACTL	= $D01D
  2221 = D01E			PMG_HITCLR	= $D01E
  2222 = D407			PMG_PMBASE	= $D407
  2223 = 6154			PMG_ONELINE	= DATAORIGIN+$08A4
  2224 = 6155			PMG_BASE	= DATAORIGIN+$08A5
  2225 = 6157			PMG_SIZE	= DATAORIGIN+$08A7
  2226
  2227 = 3077 12 D0		PMG_PCOLR
  2227 = 3079 C0 02		PMG_PCOLR_S
  2227 = 307B 00 D0		PMG_HPOS
  2227 = 307D 04 D0		PMG_HPOSM
  2227 = 307F 08 D0		PMG_SIZEP
  2227 = 3081 0D D0		PMG_GRAFP
  2227 = 3083 0C D0		PMG_PPL
  2227 				.endl							; UNIT B_PMG
  2228
  2229 				; ------------------------------------------------------------
  2230
  2231 3085			.local	JOYSTICK					; UNIT
  2232
  2233 				; ------------------------------------------------------------
  2234
  2235 = 000F			JOY_NONE	= $0F
  2236 = 000E			JOY_UP	= $0E
  2237 = 000D			JOY_DOWN	= $0D
  2238 = 000B			JOY_LEFT	= $0B
  2239 = 000A			JOY_LEFT_UP	= $0A
  2240 = 0009			JOY_LEFT_DOWN	= $09
  2241 = 0007			JOY_RIGHT	= $07
  2242 = 0006			JOY_RIGHT_UP	= $06
  2243 = 0005			JOY_RIGHT_DOWN	= $05
  2244 = 0278			JOY_1	= $0278
  2245 = 0279			JOY_2	= $0279
  2246 = 0278			adr.STICK	= $0278
  2247 3085			.var STICK	= adr.STICK .word
  2248 = 0278			STICK0	= $0278
  2249 = 0279			STICK1	= $0279
  2250 = 0284			adr.STRIG	= $0284
  2251 3085			.var STRIG	= adr.STRIG .word
  2252 = 0284			STRIG0	= $0284
  2253 = 0285			STRIG1	= $0285
  2254 = 0270			adr.PADDL	= $0270
  2255 3085			.var PADDL	= adr.PADDL .word
  2256 = 0270			PADDL0	= $0270
  2257 = 0271			PADDL1	= $0271
  2258 = 0272			PADDL2	= $0272
  2259 = 0273			PADDL3	= $0273
  2260 = 0274			PADDL4	= $0274
  2261 = 0275			PADDL5	= $0275
  2262 = 0276			PADDL6	= $0276
  2263 = 0277			PADDL7	= $0277
  2264 = 027C			adr.PTRIG	= $027C
  2265 3085			.var PTRIG	= adr.PTRIG .word
  2266 = 027C			PTRIG0	= $027C
  2267 = 027D			PTRIG1	= $027D
  2268 = 027E			PTRIG2	= $027E
  2269 = 027F			PTRIG3	= $027F
  2270 = 0280			PTRIG4	= $0280
  2271 = 0281			PTRIG5	= $0281
  2272 = 0282			PTRIG6	= $0282
  2273 = 0283			PTRIG7	= $0283
  2274 = D010			TRIG0	= $D010
  2275 = D011			TRIG1	= $D011
  2276
  2277 = 3085 78 02		STICK
  2277 = 3087 84 02		STRIG
  2277 = 3089 70 02		PADDL
  2277 = 308B 7C 02		PTRIG
  2277 				.endl							; UNIT JOYSTICK
  2278
  2279 308D			.local	DLI						; PROCEDURE | ASSEMBLER | INTERRUPT
  2280
  2281 				; -------------------  ASM Block 00000093  -------------------
  2282
  2283
  2284 308D 48			    pha ; store registers
  2285 308E A9 02 8D 18 D0	    mva #2 atari.colpf2
  2286 3093 A9 08 8D 17 D0	    mva #8 atari.colpf1
  2287 3098 A9 E0 8D 09 D4	    mva >DEFAULT_CHARSET chbase
  2288 309D A9 B0 8D 03 D0	    mva #176 hposp3
  2289 30A2 A9 03 8D 0B D0	    mva #3 sizep3
  2290
  2291 				    
  2292 30A7 A9 B3 8D 00 02 A9 +     mwa #dli2 atari.vdslst
  2293 30B1 68			    pla ; restore registers
  2294
  2295 30B2 40				rti						; ret
  2296 				.endl
  2297
  2298 30B3			.local	DLI2						; PROCEDURE | ASSEMBLER | INTERRUPT
  2299
  2300 				; -------------------  ASM Block 00000094  -------------------
  2301
  2302
  2303 30B3 48			    pha ; store registers
  2304 30B4 AD 69 61 8D 18 D0	    mva config.editorBackgroundColor atari.colpf2
  2305 30BA AD 6A 61 8D 17 D0	    mva config.editorForegroundColor atari.colpf1
  2306 30C0 AD BC 61 8D 09 D4	    mva editorCharset chbase
  2307
  2308 				    
  2309 				    
  2310 30C6 A9 D2 8D 00 02 A9 +     mwa #dli3 atari.vdslst
  2311 30D0 68			    pla ; restore registers
  2312
  2313 30D1 40				rti						; ret
  2314 				.endl
  2315
  2316 30D2			.local	DLI3						; PROCEDURE | ASSEMBLER | INTERRUPT
  2317
  2318 				; -------------------  ASM Block 00000095  -------------------
  2319
  2320
  2321 30D2 48			    pha ; store registers
  2322 30D3 8D 0A D4		    sta wsync
  2323 30D6 A9 02 8D 18 D0	    mva #2 atari.colpf2
  2324 30DB A9 08 8D 17 D0	    mva #8 atari.colpf1
  2325 30E0 AD BB 61		    lda statusCustomCharset
  2326 30E3 D0 05		    sne
  2327 30E5 A9 E0 8D 09 D4	    mva >DEFAULT_CHARSET chbase
  2328 				    
  2329 30EA AD D4 61 8D 03 D0	    mva brushFramePosX hposp3
  2330 30F0 A9 00 8D 0B D0	    mva #0 sizep3
  2331 				    
  2332 30F5 68			    pla ; restore registers
  2333
  2334 30F6 40				rti						; ret
  2335 				.endl
  2336
  2337 30F7			.local	VBL						; PROCEDURE | ASSEMBLER | INTERRUPT
  2338
  2339 				; -------------------  ASM Block 00000096  -------------------
  2340
  2341
  2342 30F7 48 8A 48 98 48	    phr ; store registers
  2343 				    
  2344 				    
  2345 30FC A9 8D 8D 00 02 A9 +     mwa #dli atari.vdslst
  2346
  2347 				    ; cursor blink
  2348 3106 A5 14		    lda rtclok+2
  2349 3108 4A			    lsr
  2350 3109 29 0F		    and #$0f
  2351 310B AA			    tax 
  2352 310C BD 2B 31		    lda cursorBrightness,x
  2353 310F 8D C0 02		    sta atari.pcolr0
  2354 3112 8D C1 02		    sta atari.pcolr1
  2355 3115 8D C2 02		    sta atari.pcolr2
  2356 3118 8D C3 02		    sta atari.pcolr3
  2357
  2358 				    
  2359 311B AD AB 61		    lda keyRepeatCounter
  2360 311E F0 03		    seq
  2361 3120 CE AB 61		    dec keyRepeatCounter
  2362 				    
  2363
  2364 3123 68 A8 68 AA 68	    plr ; restore registers
  2365 3128 4C 62 E4		    jmp $E462 ; jump to system VBL handler
  2366 312B			cursorBrightness    
  2367 312B 04 05 06 07 08 09 +     dta 4, 5, 6, 7, 8, 9, 10, 11, 12, 11, 10, 9, 8, 7, 6, 5
  2368
  2369 313B 40				rti						; ret
  2370 				.endl
  2371
  2372 313C			.local	ADJUSTBRUSHFRAME				; PROCEDURE
  2373
  2374 				; optimize OK (test\tools\artur\artur.pas), line = 77
  2375
  2376 313C AD D3 61			lda BRUSHINDEX
  2377 313F 0A				asl @
  2378 3140 0A				asl @
  2379 3141 85 9E			sta :STACKORIGIN+10
  2380 3143 A9 C9			lda #$C9
  2381 3145 38 E5 9E			sub :STACKORIGIN+10
  2382 3148 8D D4 61			sta BRUSHFRAMEPOSX
  2383 314B			@exit
  2384 					.ifdef @new
  2385 					lda <@VarData
  2386 					sta :ztmp
  2387 					lda >@VarData
  2388 					ldy #@VarDataSize-1
  2389 					jmp @FreeMem
  2390 					els
  2391 314B 60				rts						; ret
  2392 					eif
  2393 				.endl
  2394
  2395 314C			.local	SWAP						; PROCEDURE
  2396
  2397 				; optimize OK (test\tools\artur\artur.pas), line = 83
  2398
  2399 314C AC D8 62 84 82 AC + 	mwy A :bp2
  2400 3156 A0 00			ldy #$00
  2401 3158 B1 82			lda (:bp2),y
  2402 315A 8D DC 62			sta C
  2403
  2404 				; optimize OK (test\tools\artur\artur.pas), line = 84
  2405
  2406 315D AC DA 62 84 82 AC + 	mwy B :bp2
  2407 3167 A0 00			ldy #$00
  2408 3169 B1 82			lda (:bp2),y
  2409 316B AC D9 62 84 81		mvy A+1 :bp+1
  2410 3170 AC D8 62			ldy A
  2411 3173 91 80			sta (:bp),y
  2412
  2413 				; optimize OK (test\tools\artur\artur.pas), line = 85
  2414
  2415 3175 A0 00			ldy #$00
  2416 3177 AD DC 62			lda C
  2417 317A 91 82			sta (:bp2),y
  2418
  2419 				; ------------------------------------------------------------
  2420
  2421 = 62D8			A	= DATAORIGIN+$0A28
  2422 = 62DA			B	= DATAORIGIN+$0A2A
  2423 = 62DC			C	= DATAORIGIN+$0A2C
  2424
  2425 = 62D8			@VarData	= A
  2426 = 0005			@VarDataSize	= 5
  2427
  2428 317C			@exit
  2429 					.ifdef @new
  2430 					lda <@VarData
  2431 					sta :ztmp
  2432 					lda >@VarData
  2433 					ldy #@VarDataSize-1
  2434 					jmp @FreeMem
  2435 					els
  2436 317C 60				rts						; ret
  2437 					eif
  2438 				.endl
  2439
  2440 317D			.local	ADDDRIVETOS					; PROCEDURE
  2441
  2442 				; optimize OK (test\tools\artur\artur.pas), line = 91
  2443
  2444 317D AD 70 61			lda adr.S+$00
  2445 3180 18 69 02			add #$02
  2446 3183 8D DD 62			sta L
  2447
  2448 				; optimize OK (test\tools\artur\artur.pas), line = 92
  2449
  2450 3186 8D 70 61			sta adr.S+$00
  2451
  2452 				; optimize OK (test\tools\artur\artur.pas), line = 93
  2453
  2454 3189 A9 73			lda <adr.S+$03
  2455 318B 85 8C			sta SYSTEM.MOVE_0459.DEST
  2456 318D A9 61			lda >adr.S+$03
  2457 318F 85 8D			sta SYSTEM.MOVE_0459.DEST+1
  2458 3191 A9 71			lda <adr.S+$01
  2459 3193 85 88			sta SYSTEM.MOVE_0459.SOURCE
  2460 3195 A9 61			lda >adr.S+$01
  2461 3197 85 89			sta SYSTEM.MOVE_0459.SOURCE+1
  2462 3199 AD DD 62			lda L
  2463 319C 85 84			sta SYSTEM.MOVE_0459.COUNT
  2464 319E A9 00			lda #$00
  2465 31A0 85 85			sta SYSTEM.MOVE_0459.COUNT+1
  2466 31A2				.local +MAIN.SYSTEM.MOVE_0459
  2467 31A2				m@INLINE
Macro: MAIN.SYSTEM.MOVE_0459.M@INLINE [Source: artur.a65]
     4 31A2 20 74 27			jsr @move
Source: artur.a65
  2468 					.endl
  2469
  2470 				; optimize OK (test\tools\artur\artur.pas), line = 94
  2471
  2472 31A5 A9 44			lda #$44
  2473 31A7 8D 71 61			sta adr.S+$01
  2474
  2475 				; optimize OK (test\tools\artur\artur.pas), line = 95
  2476
  2477 31AA A9 3A			lda #$3A
  2478 31AC 8D 72 61			sta adr.S+$02
  2479
  2480 				; ------------------------------------------------------------
  2481
  2482 = 62DD			L	= DATAORIGIN+$0A2D
  2483
  2484 = 62DD			@VarData	= L
  2485 = 0001			@VarDataSize	= 1
  2486
  2487 31AF			@exit
  2488 					.ifdef @new
  2489 					lda <@VarData
  2490 					sta :ztmp
  2491 					lda >@VarData
  2492 					ldy #@VarDataSize-1
  2493 					jmp @FreeMem
  2494 					els
  2495 31AF 60				rts						; ret
  2496 					eif
  2497 				.endl
  2498
  2499 31B0			.local	HEX2DECDIGIT					; FUNCTION
  2500 31B0 8D DE 62			sta C
  2501
  2502 				; optimize OK (test\tools\artur\artur.pas), line = 100
  2503
  2504 31B3 A9 FF			lda #$FF
  2505 31B5 8D DF 62			sta RESULT
  2506
  2507 				; optimize OK (test\tools\artur\artur.pas), line = 101
  2508
  2509 31B8 AD DE 62			lda C
  2510 31BB 8D E0 62			sta @CASETMP_0005
  2511 31BE 18				clc						; clear carry for add
  2512 31BF 69 E6			adc #$FF-$19					; make m = $FF
  2513 31C1 69 0A			adc #$19-$10+1					; carry set if in range n to m
  2514 31C3 90 0C			jcc l_08CB
  2515 				@
  2516
  2517 				; optimize OK (test\tools\artur\artur.pas), line = 102
  2518
  2519 31C5 AD DE 62			lda C
  2520 31C8 38 E9 10			sub #$10
  2521 31CB 8D DF 62			sta RESULT
  2522
  2523 31CE 4C FA 31			jmp a_0005
  2524 31D1			l_08CB
  2525 31D1 AD E0 62			lda @CASETMP_0005
  2526 31D4 18				clc						; clear carry for add
  2527 31D5 69 99			adc #$FF-$66					; make m = $FF
  2528 31D7 69 06			adc #$66-$61+1					; carry set if in range n to m
  2529 31D9 90 0C			jcc l_08DE
  2530 				@
  2531
  2532 				; optimize OK (test\tools\artur\artur.pas), line = 103
  2533
  2534 31DB AD DE 62			lda C
  2535 31DE 38 E9 57			sub #$57
  2536 31E1 8D DF 62			sta RESULT
  2537
  2538 31E4 4C FA 31			jmp a_0005
  2539 31E7			l_08DE
  2540 31E7 AD E0 62			lda @CASETMP_0005
  2541 31EA 18				clc						; clear carry for add
  2542 31EB 69 D9			adc #$FF-$26					; make m = $FF
  2543 31ED 69 06			adc #$26-$21+1					; carry set if in range n to m
  2544 31EF 90 09			jcc l_08F1
  2545 				@
  2546
  2547 				; optimize OK (test\tools\artur\artur.pas), line = 104
  2548
  2549 31F1 AD DE 62			lda C
  2550 31F4 38 E9 17			sub #$17
  2551 31F7 8D DF 62			sta RESULT
  2552
  2553 31FA			l_08F1
  2554 31FA			a_0005
  2555 31FA			@exit
  2556
  2557 				; ------------------------------------------------------------
  2558
  2559 = 62DE			C	= DATAORIGIN+$0A2E
  2560 = 62DF			RESULT	= DATAORIGIN+$0A2F
  2561 = 62E0			@CASETMP_0005	= DATAORIGIN+$0A30
  2562
  2563 = 62DE			@VarData	= C
  2564 = 0002			@VarDataSize	= 2
  2565
  2566 31FA 60				rts						; ret
  2567 				.endl
  2568
  2569 31FB			.local	PARSEHEX					; PROCEDURE
  2570
  2571 				; optimize OK (test\tools\artur\artur.pas), line = 111
  2572
  2573 31FB AC E3 62 84 82 AC + 	mwy ERR :bp2
  2574 3205 A0 00			ldy #$00
  2575 3207 98				tya
  2576 3208 91 82			sta (:bp2),y
  2577
  2578 				; optimize OK (test\tools\artur\artur.pas), line = 112
  2579
  2580 320A AC E1 62 84 82 AC + 	mwy I :bp2
  2581 3214 A0 00			ldy #$00
  2582 3216 91 82			sta (:bp2),y
  2583
  2584 				; optimize OK (test\tools\artur\artur.pas), line = 113
  2585
  2586 3218 8D E7 62			sta BASE
  2587
  2588 				; optimize OK (test\tools\artur\artur.pas), line = 114
  2589
  2590 321B AD 70 61			lda adr.S+$00
  2591 321E 8D E5 62			sta POS
  2592
  2593 				; --- RepeatUntilProlog
  2594 3221			l_091A
  2595
  2596 				; optimize OK (test\tools\artur\artur.pas), line = 116
  2597
  2598 3221 AC E5 62			ldy POS
  2599 3224 B9 70 61			lda adr.S,y
  2600 3227 20 B0 31			jsr HEX2DECDIGIT
  2601 322A AD DF 62			lda HEX2DECDIGIT.RESULT
  2602 322D 8D E6 62			sta DIGIT
  2603
  2604 				; optimize OK (test\tools\artur\artur.pas), line = 117
  2605
  2606 3230 C9 FF			cmp #$FF
  2607 3232 D0 13			jne l_0936
  2608
  2609 				; optimize OK (test\tools\artur\artur.pas), line = 118
  2610
  2611 3234 AC E3 62 84 82 AC + 	mwy ERR :bp2
  2612 323E A0 00			ldy #$00
  2613 3240 A9 01			lda #$01
  2614 3242 91 82			sta (:bp2),y
  2615 3244 4C 82 32			jmp @exit					; exit
  2616 3247			l_0936
  2617
  2618 				; optimize OK (test\tools\artur\artur.pas), line = 121
  2619
  2620 3247 AC E1 62 84 82 AC + 	mwy I :bp2
  2621 3251 A0 00			ldy #$00
  2622 3253 B1 82			lda (:bp2),y
  2623 3255 85 9D			sta :STACKORIGIN+9
  2624 3257 AD E6 62			lda DIGIT
  2625 325A AC E7 62			ldy BASE
  2626 325D F0 04			beq l_0000_e
  2627 325F			l_0000_b
  2628 325F 0A				asl @
  2629 3260 88				dey
  2630 3261 D0 FC			bne l_0000_b
  2631 3263			l_0000_e
  2632 3263 18 65 9D			add :STACKORIGIN+9
  2633 3266 AC E1 62 84 82 AC + 	mwy I :bp2
  2634 3270 A0 00			ldy #$00
  2635 3272 91 82			sta (:bp2),y
  2636
  2637 				; optimize OK (test\tools\artur\artur.pas), line = 122
  2638
  2639 3274 AD E7 62			lda BASE
  2640 3277 18 69 04			add #$04
  2641 327A 8D E7 62			sta BASE
  2642
  2643 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 123
  2644
  2645 327D CE E5 62			dec POS
  2646
  2647 				; optimize OK (test\tools\artur\artur.pas), line = 124
  2648
  2649 3280 D0 9F			jne l_091A
  2650
  2651 				; ------------------------------------------------------------
  2652
  2653 = 62E1			I	= DATAORIGIN+$0A31
  2654 = 62E3			ERR	= DATAORIGIN+$0A33
  2655 = 62E5			POS	= DATAORIGIN+$0A35
  2656 = 62E6			DIGIT	= DATAORIGIN+$0A36
  2657 = 62E7			BASE	= DATAORIGIN+$0A37
  2658
  2659 = 62E1			@VarData	= I
  2660 = 0007			@VarDataSize	= 7
  2661
  2662 3282			@exit
  2663 					.ifdef @new
  2664 					lda <@VarData
  2665 					sta :ztmp
  2666 					lda >@VarData
  2667 					ldy #@VarDataSize-1
  2668 					jmp @FreeMem
  2669 					els
  2670 3282 60				rts						; ret
  2671 					eif
  2672 				.endl
  2673
  2674 3283			.local	READJOYSTICK					; PROCEDURE
  2675
  2676 				; optimize OK (test\tools\artur\artur.pas), line = 129
  2677
  2678 3283 A9 00			lda #$00
  2679 3285 8D A7 61			sta JOYX
  2680
  2681 				; optimize OK (test\tools\artur\artur.pas), line = 130
  2682
  2683 3288 8D A8 61			sta JOYY
  2684
  2685 				; optimize OK (test\tools\artur\artur.pas), line = 131
  2686
  2687 328B AD 78 02			lda +JOYSTICK.STICK0
  2688 328E 29 01			and #$01
  2689 3290 D0 05			jne l_0983
  2690 3292 A9 FF			lda #$FF
  2691 3294 8D A8 61			sta JOYY
  2692 3297			l_0983
  2693
  2694 				; optimize OK (test\tools\artur\artur.pas), line = 132
  2695
  2696 3297 AD 78 02			lda +JOYSTICK.STICK0
  2697 329A 29 02			and #$02
  2698 329C D0 05			jne l_09A0
  2699 329E A9 01			lda #$01
  2700 32A0 8D A8 61			sta JOYY
  2701 32A3			l_09A0
  2702
  2703 				; optimize OK (test\tools\artur\artur.pas), line = 133
  2704
  2705 32A3 AD 78 02			lda +JOYSTICK.STICK0
  2706 32A6 29 04			and #$04
  2707 32A8 D0 05			jne l_09BD
  2708 32AA A9 FF			lda #$FF
  2709 32AC 8D A7 61			sta JOYX
  2710 32AF			l_09BD
  2711
  2712 				; optimize OK (test\tools\artur\artur.pas), line = 134
  2713
  2714 32AF AD 78 02			lda +JOYSTICK.STICK0
  2715 32B2 29 08			and #$08
  2716 32B4 D0 05			jne l_09DA
  2717 32B6 A9 01			lda #$01
  2718 32B8 8D A7 61			sta JOYX
  2719 32BB			l_09DA
  2720
  2721 				; optimize OK (test\tools\artur\artur.pas), line = 135
  2722
  2723 32BB AD 84 02			lda +JOYSTICK.STRIG0
  2724 32BE 8D A9 61			sta JOYFIRE
  2725 32C1			@exit
  2726 					.ifdef @new
  2727 					lda <@VarData
  2728 					sta :ztmp
  2729 					lda >@VarData
  2730 					ldy #@VarDataSize-1
  2731 					jmp @FreeMem
  2732 					els
  2733 32C1 60				rts						; ret
  2734 					eif
  2735 				.endl
  2736
  2737 32C2			.local	INITPMG						; PROCEDURE
  2738
  2739 				; optimize OK (test\tools\artur\artur.pas), line = 163
  2740
  2741 32C2 A9 70			lda #$70
  2742 32C4 20 53 30			jsr B_PMG.PMG_INIT_083E
  2743
  2744 				; optimize OK (test\tools\artur\artur.pas), line = 164
  2745
  2746 32C7 A9 01			lda #$01
  2747 32C9 8D 6F 02			sta B_PMG.PMG_GPRIOR_S
  2748
  2749 				; optimize OK (test\tools\artur\artur.pas), line = 165
  2750
  2751 32CC AD F7 32			lda PMGSETTINGS
  2752 32CF 85 82			sta :bp2
  2753 32D1 AD F8 32			lda PMGSETTINGS+1
  2754 32D4 85 83			sta :bp2+1
  2755 32D6 A0 0C			ldy #$0C
  2756 32D8 B1 82 99 00 D0 88 + 	mva:rpl (:bp2),y $D000,y-
  2757
  2758 				; optimize OK (test\tools\artur\artur.pas), line = 166
  2759
  2760 32E0 AD F5 32			lda FRAME
  2761 32E3 85 82			sta :bp2
  2762 32E5 AD F6 32			lda FRAME+1
  2763 32E8 85 83			sta :bp2+1
  2764 32EA A0 05			ldy #$05
  2765 32EC B1 82 99 F0 73 88 + 	mva:rpl (:bp2),y $73F0,y-
  2766
  2767 				; ------------------------------------------------------------
  2768
  2769 = 62E8			adr.FRAME	= [DATAORIGIN+$0A38] .array [6]
  2770 32F4			.var FRAME	= adr.FRAME .word
  2771 = 62EE			adr.PMGSETTINGS	= [DATAORIGIN+$0A3E] .array [13]
  2772 32F4			.var PMGSETTINGS	= adr.PMGSETTINGS .word
  2773
  2774 = 32F5			@VarData	= FRAME
  2775 = 0013			@VarDataSize	= 19
  2776
  2777 32F4			@exit
  2778 					.ifdef @new
  2779 					lda <@VarData
  2780 					sta :ztmp
  2781 					lda >@VarData
  2782 					ldy #@VarDataSize-1
  2783 					jmp @FreeMem
  2784 					els
  2785 32F4 60				rts						; ret
  2786 					eif
  2787 = 32F5 E8 62		FRAME
  2787 = 32F7 EE 62		PMGSETTINGS
  2787 				.endl
  2788
  2789 32F9			.local	NEXTACTION					; FUNCTION
  2790
  2791 				; optimize OK (test\tools\artur\artur.pas), line = 176
  2792
  2793 32F9 AC A6 62			ldy UNDOACTIONSIDX
  2794 32FC C8				iny
  2795 32FD 8C FB 62			sty RESULT
  2796
  2797 				; optimize OK (test\tools\artur\artur.pas), line = 177
  2798
  2799 3300 AD FB 62			lda RESULT
  2800 3303 C9 40			cmp #$40
  2801 3305 D0 05			jne l_0A1B
  2802 3307 A9 00			lda #$00
  2803 3309 8D FB 62			sta RESULT
  2804 330C			l_0A1B
  2805 330C			@exit
  2806
  2807 				; ------------------------------------------------------------
  2808
  2809 = 62FB			RESULT	= DATAORIGIN+$0A4B
  2810 330C 60				rts						; ret
  2811 				.endl
  2812
  2813 330D			.local	PREVACTION					; FUNCTION
  2814
  2815 				; optimize OK (test\tools\artur\artur.pas), line = 182
  2816
  2817 330D AD A6 62			lda UNDOACTIONSIDX
  2818 3310 8D FC 62			sta RESULT
  2819
  2820 				; optimize OK (test\tools\artur\artur.pas), line = 183
  2821
  2822 3313 D0 05			jne l_0A3E
  2823 3315 A9 40			lda #$40
  2824 3317 8D FC 62			sta RESULT
  2825 331A			l_0A3E
  2826
  2827 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 184
  2828
  2829 331A CE FC 62			dec RESULT
  2830 331D			@exit
  2831
  2832 				; ------------------------------------------------------------
  2833
  2834 = 62FC			RESULT	= DATAORIGIN+$0A4C
  2835 331D 60				rts						; ret
  2836 				.endl
  2837
  2838 331E			.local	INITUNDOSTORAGE					; PROCEDURE
  2839
  2840 				; optimize OK (test\tools\artur\artur.pas), line = 190
  2841
  2842 331E A9 00			lda #$00
  2843 3320 8D A6 62			sta UNDOACTIONSIDX
  2844
  2845 				; optimize OK (test\tools\artur\artur.pas), line = 191
  2846
  2847 3323 AD AB 58			lda UNDOACTIONS
  2848 3326 85 88			sta SYSTEM.FILLBYTE.A
  2849 3328 AD AC 58			lda UNDOACTIONS+1
  2850 332B 85 89			sta SYSTEM.FILLBYTE.A+1
  2851 332D A9 C0			lda #$C0
  2852 332F 85 8C			sta SYSTEM.FILLBYTE.COUNT
  2853 3331 A9 00			lda #$00
  2854 3333 85 8D			sta SYSTEM.FILLBYTE.COUNT+1
  2855 3335 A9 FF			lda #$FF
  2856 3337 85 84			sta SYSTEM.FILLBYTE.VALUE
  2857 3339				.local +MAIN.SYSTEM.FILLBYTE
  2858 3339				m@INLINE
Macro: MAIN.SYSTEM.FILLBYTE.M@INLINE [Source: artur.a65]
     4 3339 20 C9 27			jsr @fill
Source: artur.a65
  2859 					.endl
  2860
  2861 				; optimize OK (test\tools\artur\artur.pas), line = 192
  2862
  2863 333C A9 08			lda #$08
  2864 333E 8D A5 62			sta UNDOBUFFERIDX
  2865
  2866 				; optimize OK (test\tools\artur\artur.pas), line = 193
  2867
  2868 3341 A9 00			lda #$00
  2869 3343 8D FD 62			sta UNDOPTR
  2870 3346 A9 81			lda #$81
  2871 3348 8D FE 62			sta UNDOPTR+1
  2872
  2873 				; --- RepeatUntilProlog
  2874 334B			l_0A5F
  2875
  2876 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 195
  2877
  2878 334B CE A5 62			dec UNDOBUFFERIDX
  2879
  2880 				; optimize OK (test\tools\artur\artur.pas), line = 196
  2881
  2882 334E AD A5 62			lda UNDOBUFFERIDX
  2883 3351 0A				asl @
  2884 3352 A8				tay
  2885 3353 AD FD 62			lda UNDOPTR
  2886 3356 99 D5 61			sta adr.UNDOBUFFERS,y
  2887 3359 AD FE 62			lda UNDOPTR+1
  2888 335C 99 D6 61			sta adr.UNDOBUFFERS+1,y
  2889
  2890 				; optimize OK (test\tools\artur\artur.pas), line = 197
  2891
  2892 335F AD FD 62			lda UNDOPTR
  2893 3362 18 69 C0			add #$C0
  2894 3365 8D FD 62			sta UNDOPTR
  2895 3368 AD FE 62			lda UNDOPTR+1
  2896 336B 69 03			adc #$03
  2897 336D 8D FE 62			sta UNDOPTR+1
  2898
  2899 				; optimize OK (test\tools\artur\artur.pas), line = 198
  2900
  2901 3370 AD A5 62			lda UNDOBUFFERIDX
  2902 3373 D0 D6			jne l_0A5F
  2903
  2904 				; ------------------------------------------------------------
  2905
  2906 = 62FD			UNDOPTR	= DATAORIGIN+$0A4D
  2907
  2908 = 62FD			@VarData	= UNDOPTR
  2909 = 0002			@VarDataSize	= 2
  2910
  2911 3375			@exit
  2912 					.ifdef @new
  2913 					lda <@VarData
  2914 					sta :ztmp
  2915 					lda >@VarData
  2916 					ldy #@VarDataSize-1
  2917 					jmp @FreeMem
  2918 					els
  2919 3375 60				rts						; ret
  2920 					eif
  2921 				.endl
  2922
  2923 3376			.local	SETUNDOFROMXY					; PROCEDURE
  2924
  2925 				; optimize OK (test\tools\artur\artur.pas), line = 203
  2926
  2927 3376 AD FF 62			lda IDX
  2928 3379 0A				asl @
  2929 337A 18 6D FF 62			add IDX
  2930 337E A8				tay
  2931 337F AD 00 63			lda X
  2932 3382 99 E5 61			sta adr.UNDOACTIONS,y
  2933
  2934 				; optimize OK (test\tools\artur\artur.pas), line = 204
  2935
  2936 3385 C8				iny
  2937 3386 AD 01 63			lda Y
  2938 3389 99 E5 61			sta adr.UNDOACTIONS,y
  2939
  2940 				; optimize OK (test\tools\artur\artur.pas), line = 205
  2941
  2942 338C AD FF 62			lda IDX
  2943 338F 0A				asl @
  2944 3390 18 6D FF 62			add IDX
  2945 3394 18 69 02			add #$02
  2946 3397 85 9D			sta :STACKORIGIN+9
  2947 3399 AD 01 63			lda Y
  2948 339C 0A				asl @
  2949 339D A8				tay
  2950 339E AD 00 63			lda X
  2951 33A1 18 79 A8 62			add adr.LINEOFFSET,y
  2952 33A5 85 9E			sta :STACKORIGIN+10
  2953 33A7 A9 7C			lda #$7C
  2954 33A9 79 A9 62			adc adr.LINEOFFSET+1,y
  2955 33AC 85 81			sta :bp+1
  2956 33AE A4 9E			ldy :STACKORIGIN+10
  2957 33B0 B1 80			lda (:bp),y
  2958 33B2 A4 9D			ldy :STACKORIGIN+9
  2959 33B4 99 E5 61			sta adr.UNDOACTIONS,y
  2960
  2961 				; ------------------------------------------------------------
  2962
  2963 = 62FF			IDX	= DATAORIGIN+$0A4F
  2964 = 6300			X	= DATAORIGIN+$0A50
  2965 = 6301			Y	= DATAORIGIN+$0A51
  2966
  2967 = 62FF			@VarData	= IDX
  2968 = 0003			@VarDataSize	= 3
  2969
  2970 33B7			@exit
  2971 					.ifdef @new
  2972 					lda <@VarData
  2973 					sta :ztmp
  2974 					lda >@VarData
  2975 					ldy #@VarDataSize-1
  2976 					jmp @FreeMem
  2977 					els
  2978 33B7 60				rts						; ret
  2979 					eif
  2980 				.endl
  2981
  2982 33B8			.local	STOREUNDOFROMXY					; PROCEDURE
  2983
  2984 				; optimize OK (test\tools\artur\artur.pas), line = 210
  2985
  2986 33B8 AD A6 62			lda UNDOACTIONSIDX
  2987 33BB 8D FF 62			sta SETUNDOFROMXY.IDX
  2988 33BE AD 02 63			lda X
  2989 33C1 8D 00 63			sta SETUNDOFROMXY.X
  2990 33C4 AD 03 63			lda Y
  2991 33C7 8D 01 63			sta SETUNDOFROMXY.Y
  2992 33CA 20 76 33			jsr SETUNDOFROMXY
  2993
  2994 				; ------------------------------------------------------------
  2995
  2996 = 6302			X	= DATAORIGIN+$0A52
  2997 = 6303			Y	= DATAORIGIN+$0A53
  2998
  2999 = 6302			@VarData	= X
  3000 = 0002			@VarDataSize	= 2
  3001
  3002 33CD			@exit
  3003 					.ifdef @new
  3004 					lda <@VarData
  3005 					sta :ztmp
  3006 					lda >@VarData
  3007 					ldy #@VarDataSize-1
  3008 					jmp @FreeMem
  3009 					els
  3010 33CD 60				rts						; ret
  3011 					eif
  3012 				.endl
  3013
  3014 33CE			.local	STORESCREENTOUNDOBUFFER				; PROCEDURE
  3015 33CE 8D 04 63			sta BUFNUM
  3016
  3017 				; optimize OK (test\tools\artur\artur.pas), line = 215
  3018
  3019 33D1 0A				asl @
  3020 33D2 A8				tay
  3021 33D3 B9 D5 61			lda adr.UNDOBUFFERS,y
  3022 33D6 85 8C			sta SYSTEM.MOVE_0458.DEST
  3023 33D8 B9 D6 61			lda adr.UNDOBUFFERS+1,y
  3024 33DB 85 8D			sta SYSTEM.MOVE_0458.DEST+1
  3025 33DD A9 00			lda #$00
  3026 33DF 85 88			sta SYSTEM.MOVE_0458.SOURCE
  3027 33E1 A9 7C			lda #$7C
  3028 33E3 85 89			sta SYSTEM.MOVE_0458.SOURCE+1
  3029 33E5 A9 C0			lda #$C0
  3030 33E7 85 84			sta SYSTEM.MOVE_0458.COUNT
  3031 33E9 A9 03			lda #$03
  3032 33EB 85 85			sta SYSTEM.MOVE_0458.COUNT+1
  3033 33ED				.local +MAIN.SYSTEM.MOVE_0458
  3034 33ED				m@INLINE
Macro: MAIN.SYSTEM.MOVE_0458.M@INLINE [Source: artur.a65]
     4 33ED 20 74 27			jsr @move
Source: artur.a65
  3035 					.endl
  3036
  3037 				; ------------------------------------------------------------
  3038
  3039 = 6304			BUFNUM	= DATAORIGIN+$0A54
  3040
  3041 = 6304			@VarData	= BUFNUM
  3042 = 0001			@VarDataSize	= 1
  3043
  3044 33F0			@exit
  3045 					.ifdef @new
  3046 					lda <@VarData
  3047 					sta :ztmp
  3048 					lda >@VarData
  3049 					ldy #@VarDataSize-1
  3050 					jmp @FreeMem
  3051 					els
  3052 33F0 60				rts						; ret
  3053 					eif
  3054 				.endl
  3055
  3056 33F1			.local	RESTORESCREENFROMUNDOBUFFER			; PROCEDURE
  3057 33F1 8D 05 63			sta BUFNUM
  3058
  3059 				; optimize OK (test\tools\artur\artur.pas), line = 220
  3060
  3061 33F4 0A				asl @
  3062 33F5 A8				tay
  3063 33F6 B9 D5 61			lda adr.UNDOBUFFERS,y
  3064 33F9 85 88			sta SYSTEM.MOVE_0458.SOURCE
  3065 33FB B9 D6 61			lda adr.UNDOBUFFERS+1,y
  3066 33FE 85 89			sta SYSTEM.MOVE_0458.SOURCE+1
  3067 3400 A9 00			lda #$00
  3068 3402 85 8C			sta SYSTEM.MOVE_0458.DEST
  3069 3404 A9 7C			lda #$7C
  3070 3406 85 8D			sta SYSTEM.MOVE_0458.DEST+1
  3071 3408 A9 C0			lda #$C0
  3072 340A 85 84			sta SYSTEM.MOVE_0458.COUNT
  3073 340C A9 03			lda #$03
  3074 340E 85 85			sta SYSTEM.MOVE_0458.COUNT+1
  3075 3410				.local +MAIN.SYSTEM.MOVE_0458
  3076 3410				m@INLINE
Macro: MAIN.SYSTEM.MOVE_0458.M@INLINE [Source: artur.a65]
     4 3410 20 74 27			jsr @move
Source: artur.a65
  3077 					.endl
  3078
  3079 				; ------------------------------------------------------------
  3080
  3081 = 6305			BUFNUM	= DATAORIGIN+$0A55
  3082
  3083 = 6305			@VarData	= BUFNUM
  3084 = 0001			@VarDataSize	= 1
  3085
  3086 3413			@exit
  3087 					.ifdef @new
  3088 					lda <@VarData
  3089 					sta :ztmp
  3090 					lda >@VarData
  3091 					ldy #@VarDataSize-1
  3092 					jmp @FreeMem
  3093 					els
  3094 3413 60				rts						; ret
  3095 					eif
  3096 				.endl
  3097
  3098 3414			.local	REMOVEBUFFERFROMUNDOACTIONS			; PROCEDURE
  3099 3414 8D 06 63			sta BUFNUM
  3100
  3101 				; optimize OK (test\tools\artur\artur.pas), line = 226
  3102
  3103 3417 AD A6 62			lda UNDOACTIONSIDX
  3104 341A 8D 07 63			sta UNDOPTR
  3105
  3106 				; --- RepeatUntilProlog
  3107 341D			l_0AF6
  3108
  3109 				; optimize OK (test\tools\artur\artur.pas), line = 228
  3110
  3111 341D AD 07 63			lda UNDOPTR
  3112 3420 D0 05			jne l_0B08
  3113 3422 A9 40			lda #$40
  3114 3424 8D 07 63			sta UNDOPTR
  3115 3427			l_0B08
  3116
  3117 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 229
  3118
  3119 3427 CE 07 63			dec UNDOPTR
  3120
  3121 				; optimize OK (test\tools\artur\artur.pas), line = 230
  3122
  3123 342A AD 07 63			lda UNDOPTR
  3124 342D 0A				asl @
  3125 342E 18 6D 07 63			add UNDOPTR
  3126 3432 A8				tay
  3127 3433 B9 E5 61			lda adr.UNDOACTIONS,y
  3128 3436 8D 08 63			sta ACTION
  3129
  3130 				; optimize OK (test\tools\artur\artur.pas), line = 231
  3131
  3132 3439 C9 FE			cmp #$FE
  3133 343B D0 1A			jne l_0B36
  3134
  3135 				; optimize OK (test\tools\artur\artur.pas), line = 232
  3136
  3137 343D C8				iny
  3138 343E B9 E5 61			lda adr.UNDOACTIONS,y
  3139 3441 CD 06 63			cmp BUFNUM
  3140 3444 D0 11			jne l_0B56
  3141
  3142 				; optimize OK (test\tools\artur\artur.pas), line = 233
  3143
  3144 3446 AD 07 63			lda UNDOPTR
  3145 3449 0A				asl @
  3146 344A 18 6D 07 63			add UNDOPTR
  3147 344E A8				tay
  3148 344F A9 FF			lda #$FF
  3149 3451 99 E5 61			sta adr.UNDOACTIONS,y
  3150
  3151 				; optimize OK (test\tools\artur\artur.pas), line = 234
  3152
  3153 3454 8D 08 63			sta ACTION
  3154 3457			l_0B56
  3155 3457			l_0B36
  3156
  3157 				; optimize OK (test\tools\artur\artur.pas), line = 236
  3158
  3159 3457 AD 08 63			lda ACTION
  3160 345A C9 FF			cmp #$FF
  3161 345C F0 08			jeq l_0AF6x
  3162 345E AD 07 63			lda UNDOPTR
  3163 3461 CD A6 62			cmp UNDOACTIONSIDX
  3164 3464 D0 B7			jne l_0AF6
  3165 3466			l_0AF6x
  3166
  3167 				; ------------------------------------------------------------
  3168
  3169 = 6306			BUFNUM	= DATAORIGIN+$0A56
  3170 = 6307			UNDOPTR	= DATAORIGIN+$0A57
  3171 = 6308			ACTION	= DATAORIGIN+$0A58
  3172
  3173 = 6306			@VarData	= BUFNUM
  3174 = 0003			@VarDataSize	= 3
  3175
  3176 3466			@exit
  3177 					.ifdef @new
  3178 					lda <@VarData
  3179 					sta :ztmp
  3180 					lda >@VarData
  3181 					ldy #@VarDataSize-1
  3182 					jmp @FreeMem
  3183 					els
  3184 3466 60				rts						; ret
  3185 					eif
  3186 				.endl
  3187
  3188 3467			.local	STOREUNDOBUFFER					; PROCEDURE
  3189
  3190 				; optimize OK (test\tools\artur\artur.pas), line = 241
  3191
  3192 3467 AD A5 62			lda UNDOBUFFERIDX
  3193 346A 20 CE 33			jsr STORESCREENTOUNDOBUFFER
  3194
  3195 				; optimize OK (test\tools\artur\artur.pas), line = 242
  3196
  3197 346D AD A5 62			lda UNDOBUFFERIDX
  3198 3470 20 14 34			jsr REMOVEBUFFERFROMUNDOACTIONS
  3199
  3200 				; optimize OK (test\tools\artur\artur.pas), line = 243
  3201
  3202 3473 AD A6 62			lda UNDOACTIONSIDX
  3203 3476 0A				asl @
  3204 3477 18 6D A6 62			add UNDOACTIONSIDX
  3205 347B A8				tay
  3206 347C A9 FE			lda #$FE
  3207 347E 99 E5 61			sta adr.UNDOACTIONS,y
  3208
  3209 				; optimize OK (test\tools\artur\artur.pas), line = 244
  3210
  3211 3481 C8				iny
  3212 3482 AD A5 62			lda UNDOBUFFERIDX
  3213 3485 99 E5 61			sta adr.UNDOACTIONS,y
  3214
  3215 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 245
  3216
  3217 3488 EE A5 62			inc UNDOBUFFERIDX
  3218
  3219 				; optimize OK (test\tools\artur\artur.pas), line = 246
  3220
  3221 348B AD A5 62			lda UNDOBUFFERIDX
  3222 348E C9 08			cmp #$08
  3223 3490 D0 05			jne l_0BCB
  3224 3492 A9 00			lda #$00
  3225 3494 8D A5 62			sta UNDOBUFFERIDX
  3226 3497			l_0BCB
  3227 3497			@exit
  3228 					.ifdef @new
  3229 					lda <@VarData
  3230 					sta :ztmp
  3231 					lda >@VarData
  3232 					ldy #@VarDataSize-1
  3233 					jmp @FreeMem
  3234 					els
  3235 3497 60				rts						; ret
  3236 					eif
  3237 				.endl
  3238
  3239 3498			.local	RESTORECHARFROMUNDO				; PROCEDURE
  3240 3498 8D 09 63			sta IDX
  3241
  3242 				; optimize OK (test\tools\artur\artur.pas), line = 252
  3243
  3244 349B 0A				asl @
  3245 349C 18 6D 09 63			add IDX
  3246 34A0 A8				tay
  3247 34A1 B9 E5 61			lda adr.UNDOACTIONS,y
  3248 34A4 8D 0A 63			sta RX
  3249
  3250 				; optimize OK (test\tools\artur\artur.pas), line = 253
  3251
  3252 34A7 C8				iny
  3253 34A8 B9 E5 61			lda adr.UNDOACTIONS,y
  3254 34AB 8D 0B 63			sta RY
  3255
  3256 				; optimize OK (test\tools\artur\artur.pas), line = 254
  3257
  3258 34AE AD 09 63			lda IDX
  3259 34B1 0A				asl @
  3260 34B2 18 6D 09 63			add IDX
  3261 34B6 18 69 02			add #$02
  3262 34B9 A8				tay
  3263 34BA B9 E5 61			lda adr.UNDOACTIONS,y
  3264 34BD 8D 0C 63			sta RC
  3265
  3266 				; optimize OK (test\tools\artur\artur.pas), line = 255
  3267
  3268 34C0 AD 0B 63			lda RY
  3269 34C3 0A				asl @
  3270 34C4 A8				tay
  3271 34C5 AD 0A 63			lda RX
  3272 34C8 18 79 A8 62			add adr.LINEOFFSET,y
  3273 34CC 85 9E			sta :STACKORIGIN+10
  3274 34CE A9 7C			lda #$7C
  3275 34D0 79 A9 62			adc adr.LINEOFFSET+1,y
  3276 34D3 85 81			sta :bp+1
  3277 34D5 A4 9E			ldy :STACKORIGIN+10
  3278 34D7 AD 0C 63			lda RC
  3279 34DA 91 80			sta (:bp),y
  3280
  3281 				; ------------------------------------------------------------
  3282
  3283 = 6309			IDX	= DATAORIGIN+$0A59
  3284 = 630A			RX	= DATAORIGIN+$0A5A
  3285 = 630B			RY	= DATAORIGIN+$0A5B
  3286 = 630C			RC	= DATAORIGIN+$0A5C
  3287
  3288 = 6309			@VarData	= IDX
  3289 = 0004			@VarDataSize	= 4
  3290
  3291 34DC			@exit
  3292 					.ifdef @new
  3293 					lda <@VarData
  3294 					sta :ztmp
  3295 					lda >@VarData
  3296 					ldy #@VarDataSize-1
  3297 					jmp @FreeMem
  3298 					els
  3299 34DC 60				rts						; ret
  3300 					eif
  3301 				.endl
  3302
  3303 34DD			.local	RESTORE						; PROCEDURE
  3304 34DD 8D 0D 63			sta ACTIONIDX
  3305
  3306 				; optimize OK (test\tools\artur\artur.pas), line = 260
  3307
  3308 34E0 0A				asl @
  3309 34E1 18 6D 0D 63			add ACTIONIDX
  3310 34E5 A8				tay
  3311 34E6 B9 E5 61			lda adr.UNDOACTIONS,y
  3312 34E9 C9 FE			cmp #$FE
  3313 34EB D0 19			jne l_0C3D
  3314
  3315 				; optimize FAIL ('STOREUNDOBUFFER', test\tools\artur\artur.pas), line = 261
  3316
  3317 34ED 20 67 34			jsr STOREUNDOBUFFER
  3318
  3319 				; optimize OK (test\tools\artur\artur.pas), line = 262
  3320
  3321 34F0 AD 0D 63			lda ACTIONIDX
  3322 34F3 8D A6 62			sta UNDOACTIONSIDX
  3323
  3324 				; optimize OK (test\tools\artur\artur.pas), line = 263
  3325
  3326 34F6 0A				asl @
  3327 34F7 18 6D 0D 63			add ACTIONIDX
  3328 34FB A8				tay
  3329 34FC C8				iny
  3330 34FD B9 E5 61			lda adr.UNDOACTIONS,y
  3331 3500 20 F1 33			jsr RESTORESCREENFROMUNDOBUFFER
  3332 3503 4C 33 35			jmp l_0C5D
  3333 3506			l_0C3D
  3334
  3335 				; optimize OK (test\tools\artur\artur.pas), line = 265
  3336
  3337 3506 AD 0D 63			lda ACTIONIDX
  3338 3509 0A				asl @
  3339 350A 18 69 01			add #$01
  3340 350D 18 6D 0D 63			add ACTIONIDX
  3341 3511 A8				tay
  3342 3512 B9 E5 61			lda adr.UNDOACTIONS,y
  3343 3515 8D 03 63			sta STOREUNDOFROMXY.Y
  3344 3518 AD 0D 63			lda ACTIONIDX
  3345 351B 0A				asl @
  3346 351C 18 6D 0D 63			add ACTIONIDX
  3347 3520 A8				tay
  3348 3521 B9 E5 61			lda adr.UNDOACTIONS,y
  3349 3524 8D 02 63			sta STOREUNDOFROMXY.X
  3350 3527 20 B8 33			jsr STOREUNDOFROMXY
  3351
  3352 				; optimize OK (test\tools\artur\artur.pas), line = 266
  3353
  3354 352A AD 0D 63			lda ACTIONIDX
  3355 352D 8D A6 62			sta UNDOACTIONSIDX
  3356
  3357 				; optimize OK (test\tools\artur\artur.pas), line = 267
  3358
  3359 3530 20 98 34			jsr RESTORECHARFROMUNDO
  3360 3533			l_0C5D
  3361
  3362 				; ------------------------------------------------------------
  3363
  3364 = 630D			ACTIONIDX	= DATAORIGIN+$0A5D
  3365
  3366 = 630D			@VarData	= ACTIONIDX
  3367 = 0001			@VarDataSize	= 1
  3368
  3369 3533			@exit
  3370 					.ifdef @new
  3371 					lda <@VarData
  3372 					sta :ztmp
  3373 					lda >@VarData
  3374 					ldy #@VarDataSize-1
  3375 					jmp @FreeMem
  3376 					els
  3377 3533 60				rts						; ret
  3378 					eif
  3379 				.endl
  3380
  3381 3534			.local	STOREUNDOACTION					; PROCEDURE
  3382 3534 8D 0E 63			sta WHOLESCREEN
  3383
  3384 				; optimize OK (test\tools\artur\artur.pas), line = 273
  3385
  3386 3537 A9 00			lda #$00
  3387 3539 8D A7 62			sta REDOCOUNT
  3388
  3389 				; optimize OK (test\tools\artur\artur.pas), line = 274
  3390
  3391 353C AD 0E 63			lda WHOLESCREEN
  3392 353F F0 06			jeq l_0C98
  3393
  3394 				; optimize FAIL ('STOREUNDOBUFFER', test\tools\artur\artur.pas), line = 275
  3395
  3396 3541 20 67 34			jsr STOREUNDOBUFFER
  3397 3544 4C 56 35			jmp l_0CA3
  3398 3547			l_0C98
  3399 3547 AD B2 61			lda CURSORX
  3400 354A 8D 02 63			sta STOREUNDOFROMXY.X
  3401 354D AD B3 61			lda CURSORY
  3402 3550 8D 03 63			sta STOREUNDOFROMXY.Y
  3403 3553 20 B8 33			jsr STOREUNDOFROMXY
  3404 3556			l_0CA3
  3405
  3406 				; optimize FAIL ('NEXTACTION', test\tools\artur\artur.pas), line = 276
  3407
  3408 3556 20 F9 32			jsr NEXTACTION
  3409 3559 AD FB 62			lda NEXTACTION.RESULT
  3410 355C 8D A6 62			sta UNDOACTIONSIDX
  3411
  3412 				; ------------------------------------------------------------
  3413
  3414 = 630E			WHOLESCREEN	= DATAORIGIN+$0A5E
  3415
  3416 = 630E			@VarData	= WHOLESCREEN
  3417 = 0001			@VarDataSize	= 1
  3418
  3419 355F			@exit
  3420 					.ifdef @new
  3421 					lda <@VarData
  3422 					sta :ztmp
  3423 					lda >@VarData
  3424 					ldy #@VarDataSize-1
  3425 					jmp @FreeMem
  3426 					els
  3427 355F 60				rts						; ret
  3428 					eif
  3429 				.endl
  3430
  3431 3560			.local	TRYUNDO						; PROCEDURE
  3432
  3433 				; optimize FAIL ('PREVACTION', test\tools\artur\artur.pas), line = 282
  3434
  3435 3560 20 0D 33			jsr PREVACTION
  3436 3563 AD FC 62			lda PREVACTION.RESULT
  3437 3566 8D 0F 63			sta PREV
  3438
  3439 				; optimize OK (test\tools\artur\artur.pas), line = 283
  3440
  3441 3569 0A				asl @
  3442 356A 18 6D 0F 63			add PREV
  3443 356E A8				tay
  3444 356F B9 E5 61			lda adr.UNDOACTIONS,y
  3445 3572 C9 FF			cmp #$FF
  3446 3574 F0 20			jeq l_0CD3
  3447
  3448 				; optimize OK (test\tools\artur\artur.pas), line = 284
  3449
  3450 3576 AD 0F 63			lda PREV
  3451 3579 20 DD 34			jsr RESTORE
  3452
  3453 				; optimize OK (test\tools\artur\artur.pas), line = 285
  3454
  3455 357C AD 0F 63			lda PREV
  3456 357F 0A				asl @
  3457 3580 18 6D 0F 63			add PREV
  3458 3584 A8				tay
  3459 3585 B9 E5 61			lda adr.UNDOACTIONS,y
  3460 3588 C9 FE			cmp #$FE
  3461 358A D0 07			jne l_0CF5
  3462 358C C8				iny
  3463 358D B9 E5 61			lda adr.UNDOACTIONS,y
  3464 3590 8D A5 62			sta UNDOBUFFERIDX
  3465 3593			l_0CF5
  3466
  3467 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 286
  3468
  3469 3593 EE A7 62			inc REDOCOUNT
  3470 3596			l_0CD3
  3471
  3472 				; ------------------------------------------------------------
  3473
  3474 = 630F			PREV	= DATAORIGIN+$0A5F
  3475
  3476 = 630F			@VarData	= PREV
  3477 = 0001			@VarDataSize	= 1
  3478
  3479 3596			@exit
  3480 					.ifdef @new
  3481 					lda <@VarData
  3482 					sta :ztmp
  3483 					lda >@VarData
  3484 					ldy #@VarDataSize-1
  3485 					jmp @FreeMem
  3486 					els
  3487 3596 60				rts						; ret
  3488 					eif
  3489 				.endl
  3490
  3491 3597			.local	TRYREDO						; PROCEDURE
  3492
  3493 				; optimize FAIL ('NEXTACTION', test\tools\artur\artur.pas), line = 293
  3494
  3495 3597 20 F9 32			jsr NEXTACTION
  3496 359A AD FB 62			lda NEXTACTION.RESULT
  3497 359D 8D 10 63			sta NEXT
  3498
  3499 				; optimize OK (test\tools\artur\artur.pas), line = 294
  3500
  3501 35A0 AD A7 62			lda REDOCOUNT
  3502 35A3 F0 19			jeq l_0D29
  3503
  3504 				; optimize OK (test\tools\artur\artur.pas), line = 295
  3505
  3506 35A5 AD 10 63			lda NEXT
  3507 35A8 0A				asl @
  3508 35A9 18 6D 10 63			add NEXT
  3509 35AD A8				tay
  3510 35AE B9 E5 61			lda adr.UNDOACTIONS,y
  3511 35B1 C9 FF			cmp #$FF
  3512 35B3 F0 09			jeq l_0D47
  3513
  3514 				; optimize OK (test\tools\artur\artur.pas), line = 296
  3515
  3516 35B5 AD 10 63			lda NEXT
  3517 35B8 20 DD 34			jsr RESTORE
  3518
  3519 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 297
  3520
  3521 35BB CE A7 62			dec REDOCOUNT
  3522 35BE			l_0D47
  3523 35BE			l_0D29
  3524
  3525 				; ------------------------------------------------------------
  3526
  3527 = 6310			NEXT	= DATAORIGIN+$0A60
  3528
  3529 = 6310			@VarData	= NEXT
  3530 = 0001			@VarDataSize	= 1
  3531
  3532 35BE			@exit
  3533 					.ifdef @new
  3534 					lda <@VarData
  3535 					sta :ztmp
  3536 					lda >@VarData
  3537 					ldy #@VarDataSize-1
  3538 					jmp @FreeMem
  3539 					els
  3540 35BE 60				rts						; ret
  3541 					eif
  3542 				.endl
  3543
  3544 35BF			.local	CLEAREDIT					; PROCEDURE
  3545
  3546 				; optimize OK (test\tools\artur\artur.pas), line = 309
  3547
  3548 35BF A9 00			lda #$00
  3549 35C1 85 88			sta SYSTEM.FILLBYTE.A
  3550 35C3 A9 7C			lda #$7C
  3551 35C5 85 89			sta SYSTEM.FILLBYTE.A+1
  3552 35C7 A9 C0			lda #$C0
  3553 35C9 85 8C			sta SYSTEM.FILLBYTE.COUNT
  3554 35CB A9 03			lda #$03
  3555 35CD 85 8D			sta SYSTEM.FILLBYTE.COUNT+1
  3556 35CF A9 00			lda #$00
  3557 35D1 85 84			sta SYSTEM.FILLBYTE.VALUE
  3558 35D3				.local +MAIN.SYSTEM.FILLBYTE
  3559 35D3				m@INLINE
Macro: MAIN.SYSTEM.FILLBYTE.M@INLINE [Source: artur.a65]
     4 35D3 20 C9 27			jsr @fill
Source: artur.a65
  3560 					.endl
  3561 35D6			@exit
  3562 					.ifdef @new
  3563 					lda <@VarData
  3564 					sta :ztmp
  3565 					lda >@VarData
  3566 					ldy #@VarDataSize-1
  3567 					jmp @FreeMem
  3568 					els
  3569 35D6 60				rts						; ret
  3570 					eif
  3571 				.endl
  3572
  3573 35D7			.local	CLEARBUFFER					; PROCEDURE
  3574
  3575 				; optimize OK (test\tools\artur\artur.pas), line = 314
  3576
  3577 35D7 A9 00			lda #$00
  3578 35D9 85 88			sta SYSTEM.FILLBYTE.A
  3579 35DB A9 78			lda #$78
  3580 35DD 85 89			sta SYSTEM.FILLBYTE.A+1
  3581 35DF A9 C0			lda #$C0
  3582 35E1 85 8C			sta SYSTEM.FILLBYTE.COUNT
  3583 35E3 A9 03			lda #$03
  3584 35E5 85 8D			sta SYSTEM.FILLBYTE.COUNT+1
  3585 35E7 A9 00			lda #$00
  3586 35E9 85 84			sta SYSTEM.FILLBYTE.VALUE
  3587 35EB				.local +MAIN.SYSTEM.FILLBYTE
  3588 35EB				m@INLINE
Macro: MAIN.SYSTEM.FILLBYTE.M@INLINE [Source: artur.a65]
     4 35EB 20 C9 27			jsr @fill
Source: artur.a65
  3589 					.endl
  3590 35EE			@exit
  3591 					.ifdef @new
  3592 					lda <@VarData
  3593 					sta :ztmp
  3594 					lda >@VarData
  3595 					ldy #@VarDataSize-1
  3596 					jmp @FreeMem
  3597 					els
  3598 35EE 60				rts						; ret
  3599 					eif
  3600 				.endl
  3601
  3602 35EF			.local	STOREEDITINBUFFER				; PROCEDURE
  3603
  3604 				; optimize OK (test\tools\artur\artur.pas), line = 319
  3605
  3606 35EF A9 00			lda #$00
  3607 35F1 85 88			sta SYSTEM.MOVE_0458.SOURCE
  3608 35F3 A9 7C			lda #$7C
  3609 35F5 85 89			sta SYSTEM.MOVE_0458.SOURCE+1
  3610 35F7 A9 00			lda #$00
  3611 35F9 85 8C			sta SYSTEM.MOVE_0458.DEST
  3612 35FB A9 78			lda #$78
  3613 35FD 85 8D			sta SYSTEM.MOVE_0458.DEST+1
  3614 35FF A9 C0			lda #$C0
  3615 3601 85 84			sta SYSTEM.MOVE_0458.COUNT
  3616 3603 A9 03			lda #$03
  3617 3605 85 85			sta SYSTEM.MOVE_0458.COUNT+1
  3618 3607				.local +MAIN.SYSTEM.MOVE_0458
  3619 3607				m@INLINE
Macro: MAIN.SYSTEM.MOVE_0458.M@INLINE [Source: artur.a65]
     4 3607 20 74 27			jsr @move
Source: artur.a65
  3620 					.endl
  3621 360A			@exit
  3622 					.ifdef @new
  3623 					lda <@VarData
  3624 					sta :ztmp
  3625 					lda >@VarData
  3626 					ldy #@VarDataSize-1
  3627 					jmp @FreeMem
  3628 					els
  3629 360A 60				rts						; ret
  3630 					eif
  3631 				.endl
  3632
  3633 360B			.local	RESTOREEDITFROMBUFFER				; PROCEDURE
  3634
  3635 				; optimize OK (test\tools\artur\artur.pas), line = 324
  3636
  3637 360B A9 00			lda #$00
  3638 360D 85 88			sta SYSTEM.MOVE_0458.SOURCE
  3639 360F A9 78			lda #$78
  3640 3611 85 89			sta SYSTEM.MOVE_0458.SOURCE+1
  3641 3613 A9 00			lda #$00
  3642 3615 85 8C			sta SYSTEM.MOVE_0458.DEST
  3643 3617 A9 7C			lda #$7C
  3644 3619 85 8D			sta SYSTEM.MOVE_0458.DEST+1
  3645 361B A9 C0			lda #$C0
  3646 361D 85 84			sta SYSTEM.MOVE_0458.COUNT
  3647 361F A9 03			lda #$03
  3648 3621 85 85			sta SYSTEM.MOVE_0458.COUNT+1
  3649 3623				.local +MAIN.SYSTEM.MOVE_0458
  3650 3623				m@INLINE
Macro: MAIN.SYSTEM.MOVE_0458.M@INLINE [Source: artur.a65]
     4 3623 20 74 27			jsr @move
Source: artur.a65
  3651 					.endl
  3652 3626			@exit
  3653 					.ifdef @new
  3654 					lda <@VarData
  3655 					sta :ztmp
  3656 					lda >@VarData
  3657 					ldy #@VarDataSize-1
  3658 					jmp @FreeMem
  3659 					els
  3660 3626 60				rts						; ret
  3661 					eif
  3662 				.endl
  3663
  3664 3627			.local	DRAWRECT					; PROCEDURE
  3665
  3666 				; optimize OK (test\tools\artur\artur.pas), line = 330
  3667
  3668 3627 AD 12 63			lda Y
  3669 362A 0A				asl @
  3670 362B A8				tay
  3671 362C B9 A8 62			lda adr.LINEOFFSET,y
  3672 362F 18 6D 11 63			add X
  3673 3633 8D 16 63			sta CARRET
  3674 3636 B9 A9 62			lda adr.LINEOFFSET+1,y
  3675 3639 69 7C			adc #$7C
  3676 363B 8D 17 63			sta CARRET+1
  3677
  3678 				; --- RepeatUntilProlog
  3679 363E			l_0D8B
  3680
  3681 				; optimize OK (test\tools\artur\artur.pas), line = 332
  3682
  3683 363E AD 16 63			lda CARRET
  3684 3641 85 88			sta SYSTEM.FILLBYTE.A
  3685 3643 AD 17 63			lda CARRET+1
  3686 3646 85 89			sta SYSTEM.FILLBYTE.A+1
  3687 3648 AD 13 63			lda W
  3688 364B 85 8C			sta SYSTEM.FILLBYTE.COUNT
  3689 364D A9 00			lda #$00
  3690 364F 85 8D			sta SYSTEM.FILLBYTE.COUNT+1
  3691 3651 AD 15 63			lda C
  3692 3654 85 84			sta SYSTEM.FILLBYTE.VALUE
  3693 3656				.local +MAIN.SYSTEM.FILLBYTE
  3694 3656				m@INLINE
Macro: MAIN.SYSTEM.FILLBYTE.M@INLINE [Source: artur.a65]
     4 3656 20 C9 27			jsr @fill
Source: artur.a65
  3695 					.endl
  3696
  3697 				; optimize OK (test\tools\artur\artur.pas), line = 333
  3698
  3699 3659 AD 16 63			lda CARRET
  3700 365C 18 69 28			add #$28
  3701 365F 8D 16 63			sta CARRET
  3702 3662 90 03			scc
  3703 3664 EE 17 63			inc CARRET+1
  3704
  3705 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 334
  3706
  3707 3667 CE 14 63			dec H
  3708
  3709 				; optimize OK (test\tools\artur\artur.pas), line = 335
  3710
  3711 366A D0 D2			jne l_0D8B
  3712
  3713 				; ------------------------------------------------------------
  3714
  3715 = 6311			X	= DATAORIGIN+$0A61
  3716 = 6312			Y	= DATAORIGIN+$0A62
  3717 = 6313			W	= DATAORIGIN+$0A63
  3718 = 6314			H	= DATAORIGIN+$0A64
  3719 = 6315			C	= DATAORIGIN+$0A65
  3720 = 6316			CARRET	= DATAORIGIN+$0A66
  3721
  3722 = 6311			@VarData	= X
  3723 = 0007			@VarDataSize	= 7
  3724
  3725 366C			@exit
  3726 					.ifdef @new
  3727 					lda <@VarData
  3728 					sta :ztmp
  3729 					lda >@VarData
  3730 					ldy #@VarDataSize-1
  3731 					jmp @FreeMem
  3732 					els
  3733 366C 60				rts						; ret
  3734 					eif
  3735 				.endl
  3736
  3737 366D			.local	READCURSORCHAR					; PROCEDURE
  3738
  3739 				; optimize OK (test\tools\artur\artur.pas), line = 340
  3740
  3741 366D AC B4 61			ldy CURSOR
  3742 3670 A9 7C			lda #$7C
  3743 3672 18 6D B5 61			add CURSOR+1
  3744 3676 85 81			sta :bp+1
  3745 3678 B1 80			lda (:bp),y
  3746 367A 8D B6 61			sta CURSORCHAR
  3747
  3748 				; optimize OK (test\tools\artur\artur.pas), line = 341
  3749
  3750 367D AD 6C 61			lda CONFIG.KEYCODEDISPLAY
  3751 3680 C9 02			cmp #$02
  3752 3682 D0 0C			jne l_0DCE
  3753 3684 AD B6 61			lda CURSORCHAR
  3754 3687 20 FA 2C			jsr B_CRT.ANTIC2ATASCII_0545
  3755 368A AD 3C 5A			lda B_CRT.ANTIC2ATASCII_0545.RESULT
  3756 368D 8D B6 61			sta CURSORCHAR
  3757 3690			l_0DCE
  3758 3690			@exit
  3759 					.ifdef @new
  3760 					lda <@VarData
  3761 					sta :ztmp
  3762 					lda >@VarData
  3763 					ldy #@VarDataSize-1
  3764 					jmp @FreeMem
  3765 					els
  3766 3690 60				rts						; ret
  3767 					eif
  3768 				.endl
  3769
  3770 3691			.local	UPDATEXYK					; PROCEDURE
  3771
  3772 				; optimize FAIL ('SYSTEM.STR_0449', test\tools\artur\artur.pas), line = 346
  3773
  3774 3691 E8				inx
  3775 3692 AD A1 58 95 94		mva S :STACKORIGIN,x
  3776 3697 AD A2 58 95 A4		mva S+1 :STACKORIGIN+STACKWIDTH,x
  3777 369C E8				inx
  3778 369D AD B2 61 95 94		mva CURSORX :STACKORIGIN,x
  3779 36A2 A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3780 36A6 A9 00 95 B4			mva #$00 :STACKORIGIN+STACKWIDTH*2,x
  3781 36AA A9 00 95 C4			mva #$00 :STACKORIGIN+STACKWIDTH*3,x
  3782 36AE 20 3C 2A			jsr SYSTEM.STR_0449
  3783
  3784 				; optimize FAIL ('B_CRT.ATASCII2ANTIC_0549', test\tools\artur\artur.pas), line = 347
  3785
  3786 36B1 E8				inx
  3787 36B2 AD A1 58 95 94		mva S :STACKORIGIN,x
  3788 36B7 AD A2 58 95 A4		mva S+1 :STACKORIGIN+STACKWIDTH,x
  3789 36BC 20 12 2D			jsr B_CRT.ATASCII2ANTIC_0549
  3790 36BF E8				inx
  3791 36C0 AD 67 2D			lda B_CRT.ATASCII2ANTIC_0549.RESULT
  3792 36C3 85 88			sta @move.src
  3793 36C5 AD 68 2D			lda B_CRT.ATASCII2ANTIC_0549.RESULT+1
  3794 36C8 85 89			sta @move.src+1
  3795 					@moveSTRING S #41
  3795 				 MWA S @MOVE.DST\ MWA #41 @MOVE.CNT\ JSR @MOVESTRING
  3795 36CA AD A1 58 85 8C AD +  MWA S @MOVE.DST
  3795 36D4 A9 29 85 84 A9 00 +  MWA #41 @MOVE.CNT
  3795 36DC 20 11 28		 JSR @MOVESTRING
  3796 36DF CA				dex
  3797
  3798 				; optimize OK (test\tools\artur\artur.pas), line = 348
  3799
  3800 36E0 A9 00			lda #$00
  3801 36E2 8D CC 7F			sta $7FCC
  3802
  3803 				; optimize OK (test\tools\artur\artur.pas), line = 349
  3804
  3805 36E5 AD 70 61			lda adr.S+$00
  3806 36E8 85 84			sta SYSTEM.MOVE_045A.COUNT
  3807 36EA A9 71			lda <adr.S+$01
  3808 36EC 85 88			sta SYSTEM.MOVE_045A.SOURCE
  3809 36EE A9 61			lda >adr.S+$01
  3810 36F0 85 89			sta SYSTEM.MOVE_045A.SOURCE+1
  3811 36F2 A9 CB			lda #$CB
  3812 36F4 85 8C			sta SYSTEM.MOVE_045A.DEST
  3813 36F6 A9 7F			lda #$7F
  3814 36F8 85 8D			sta SYSTEM.MOVE_045A.DEST+1
  3815 36FA A9 00			lda #$00
  3816 36FC 85 85			sta SYSTEM.MOVE_045A.COUNT+1
  3817 36FE				.local +MAIN.SYSTEM.MOVE_045A
  3818 36FE				m@INLINE
Macro: MAIN.SYSTEM.MOVE_045A.M@INLINE [Source: artur.a65]
     4 36FE 20 74 27			jsr @move
Source: artur.a65
  3819 					.endl
  3820
  3821 				; optimize FAIL ('SYSTEM.STR_0449', test\tools\artur\artur.pas), line = 351
  3822
  3823 3701 E8				inx
  3824 3702 AD A1 58 95 94		mva S :STACKORIGIN,x
  3825 3707 AD A2 58 95 A4		mva S+1 :STACKORIGIN+STACKWIDTH,x
  3826 370C E8				inx
  3827 370D AD B3 61 95 94		mva CURSORY :STACKORIGIN,x
  3828 3712 A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3829 3716 A9 00 95 B4			mva #$00 :STACKORIGIN+STACKWIDTH*2,x
  3830 371A A9 00 95 C4			mva #$00 :STACKORIGIN+STACKWIDTH*3,x
  3831 371E 20 3C 2A			jsr SYSTEM.STR_0449
  3832
  3833 				; optimize FAIL ('B_CRT.ATASCII2ANTIC_0549', test\tools\artur\artur.pas), line = 352
  3834
  3835 3721 E8				inx
  3836 3722 AD A1 58 95 94		mva S :STACKORIGIN,x
  3837 3727 AD A2 58 95 A4		mva S+1 :STACKORIGIN+STACKWIDTH,x
  3838 372C 20 12 2D			jsr B_CRT.ATASCII2ANTIC_0549
  3839 372F E8				inx
  3840 3730 AD 67 2D			lda B_CRT.ATASCII2ANTIC_0549.RESULT
  3841 3733 85 88			sta @move.src
  3842 3735 AD 68 2D			lda B_CRT.ATASCII2ANTIC_0549.RESULT+1
  3843 3738 85 89			sta @move.src+1
  3844 					@moveSTRING S #41
  3844 				 MWA S @MOVE.DST\ MWA #41 @MOVE.CNT\ JSR @MOVESTRING
  3844 373A AD A1 58 85 8C AD +  MWA S @MOVE.DST
  3844 3744 A9 29 85 84 A9 00 +  MWA #41 @MOVE.CNT
  3844 374C 20 11 28		 JSR @MOVESTRING
  3845 374F CA				dex
  3846
  3847 				; optimize OK (test\tools\artur\artur.pas), line = 353
  3848
  3849 3750 A9 00			lda #$00
  3850 3752 8D D0 7F			sta $7FD0
  3851
  3852 				; optimize OK (test\tools\artur\artur.pas), line = 354
  3853
  3854 3755 AD 70 61			lda adr.S+$00
  3855 3758 85 84			sta SYSTEM.MOVE_045A.COUNT
  3856 375A A9 71			lda <adr.S+$01
  3857 375C 85 88			sta SYSTEM.MOVE_045A.SOURCE
  3858 375E A9 61			lda >adr.S+$01
  3859 3760 85 89			sta SYSTEM.MOVE_045A.SOURCE+1
  3860 3762 A9 CF			lda #$CF
  3861 3764 85 8C			sta SYSTEM.MOVE_045A.DEST
  3862 3766 A9 7F			lda #$7F
  3863 3768 85 8D			sta SYSTEM.MOVE_045A.DEST+1
  3864 376A A9 00			lda #$00
  3865 376C 85 85			sta SYSTEM.MOVE_045A.COUNT+1
  3866 376E				.local +MAIN.SYSTEM.MOVE_045A
  3867 376E				m@INLINE
Macro: MAIN.SYSTEM.MOVE_045A.M@INLINE [Source: artur.a65]
     4 376E 20 74 27			jsr @move
Source: artur.a65
  3868 					.endl
  3869
  3870 				; optimize OK (test\tools\artur\artur.pas), line = 356
  3871
  3872 3771 AD 6C 61			lda CONFIG.KEYCODEDISPLAY
  3873 3774 F0 64			jeq l_0E14
  3874
  3875 				; optimize OK (test\tools\artur\artur.pas), line = 357
  3876
  3877 3776 A9 AB			lda #$AB
  3878 3778 8D D2 7F			sta $7FD2
  3879
  3880 				; optimize OK (test\tools\artur\artur.pas), line = 358
  3881
  3882 377B AD B6 61			lda CURSORCHAR
  3883 377E 85 88			sta SYSTEM.HEXSTR.VALUE
  3884 3780 A9 00			lda #$00
  3885 3782 85 89			sta SYSTEM.HEXSTR.VALUE+1
  3886 3784 85 8A			sta SYSTEM.HEXSTR.VALUE+2
  3887 3786 85 8B			sta SYSTEM.HEXSTR.VALUE+3
  3888 3788 A9 02			lda #$02
  3889 378A 85 8C			sta SYSTEM.HEXSTR.DIGITS
  3890 378C 20 F6 29			jsr SYSTEM.HEXSTR
  3891 378F E8				inx
  3892 3790 AD 05 2A 95 94		mva SYSTEM.HEXSTR.RESULT :STACKORIGIN,x
  3893 3795 AD 06 2A 95 A4		mva SYSTEM.HEXSTR.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  3894 379A 20 12 2D			jsr B_CRT.ATASCII2ANTIC_0549
  3895 379D E8				inx
  3896 379E AD 67 2D			lda B_CRT.ATASCII2ANTIC_0549.RESULT
  3897 37A1 85 88			sta @move.src
  3898 37A3 AD 68 2D			lda B_CRT.ATASCII2ANTIC_0549.RESULT+1
  3899 37A6 85 89			sta @move.src+1
  3900 					@moveSTRING S #41
  3900 				 MWA S @MOVE.DST\ MWA #41 @MOVE.CNT\ JSR @MOVESTRING
  3900 37A8 AD A1 58 85 8C AD +  MWA S @MOVE.DST
  3900 37B2 A9 29 85 84 A9 00 +  MWA #41 @MOVE.CNT
  3900 37BA 20 11 28		 JSR @MOVESTRING
  3901 37BD CA				dex
  3902
  3903 				; optimize OK (test\tools\artur\artur.pas), line = 359
  3904
  3905 37BE AD 70 61			lda adr.S+$00
  3906 37C1 85 84			sta SYSTEM.MOVE_045A.COUNT
  3907 37C3 A9 71			lda <adr.S+$01
  3908 37C5 85 88			sta SYSTEM.MOVE_045A.SOURCE
  3909 37C7 A9 61			lda >adr.S+$01
  3910 37C9 85 89			sta SYSTEM.MOVE_045A.SOURCE+1
  3911 37CB A9 D3			lda #$D3
  3912 37CD 85 8C			sta SYSTEM.MOVE_045A.DEST
  3913 37CF A9 7F			lda #$7F
  3914 37D1 85 8D			sta SYSTEM.MOVE_045A.DEST+1
  3915 37D3 A9 00			lda #$00
  3916 37D5 85 85			sta SYSTEM.MOVE_045A.COUNT+1
  3917 37D7				.local +MAIN.SYSTEM.MOVE_045A
  3918 37D7				m@INLINE
Macro: MAIN.SYSTEM.MOVE_045A.M@INLINE [Source: artur.a65]
     4 37D7 20 74 27			jsr @move
Source: artur.a65
  3919 					.endl
  3920 37DA			l_0E14
  3921 37DA			@exit
  3922 					.ifdef @new
  3923 					lda <@VarData
  3924 					sta :ztmp
  3925 					lda >@VarData
  3926 					ldy #@VarDataSize-1
  3927 					jmp @FreeMem
  3928 					els
  3929 37DA 60				rts						; ret
  3930 					eif
  3931 				.endl
  3932
  3933 37DB			.local	SHOWSTATUS					; PROCEDURE
  3934
  3935 				; optimize FAIL ('SYSTEM.PAUSE_0479', test\tools\artur\artur.pas), line = 365
  3936
  3937 37DB 20 A0 2A			jsr SYSTEM.PAUSE_0479
  3938
  3939 				; optimize OK (test\tools\artur\artur.pas), line = 366
  3940
  3941 37DE A9 00			lda #$00
  3942 37E0 A0 27			ldy #$27
  3943 37E2 99 C0 7F 88 10 FA		sta:rpl $7FC0,y-
  3944 37E8 A0 ED			ldy #256-19
  3945 37EA B9 28 1F 99 83 60 + 	mva:rne CODEORIGIN+$0015+19-256,y adr.S+19-256,y+
  3946
  3947 				; optimize OK (test\tools\artur\artur.pas), line = 368
  3948
  3949 37F3 AD 70 61			lda adr.S+$00
  3950 37F6 85 84			sta SYSTEM.MOVE_045A.COUNT
  3951 37F8 A9 71			lda <adr.S+$01
  3952 37FA 85 88			sta SYSTEM.MOVE_045A.SOURCE
  3953 37FC A9 61			lda >adr.S+$01
  3954 37FE 85 89			sta SYSTEM.MOVE_045A.SOURCE+1
  3955 3800 A9 C0			lda #$C0
  3956 3802 85 8C			sta SYSTEM.MOVE_045A.DEST
  3957 3804 A9 7F			lda #$7F
  3958 3806 85 8D			sta SYSTEM.MOVE_045A.DEST+1
  3959 3808 A9 00			lda #$00
  3960 380A 85 85			sta SYSTEM.MOVE_045A.COUNT+1
  3961 380C				.local +MAIN.SYSTEM.MOVE_045A
  3962 380C				m@INLINE
Macro: MAIN.SYSTEM.MOVE_045A.M@INLINE [Source: artur.a65]
     4 380C 20 74 27			jsr @move
Source: artur.a65
  3963 					.endl
  3964 380F A0 FA			ldy #256-6
  3965 3811 B9 2F 1F 99 76 60 + 	mva:rne CODEORIGIN+$0029+6-256,y adr.S+6-256,y+
  3966
  3967 				; optimize OK (test\tools\artur\artur.pas), line = 371
  3968
  3969 381A AD B0 61			lda MODE
  3970 381D C9 01			cmp #$01
  3971 381F D0 0B			jne l_0E49
  3972 3821 A0 FA			ldy #256-6
  3973 3823 B9 36 1F 99 76 60 + 	mva:rne CODEORIGIN+$0030+6-256,y adr.S+6-256,y+
  3974 382C			l_0E49
  3975
  3976 				; optimize OK (test\tools\artur\artur.pas), line = 372
  3977
  3978 382C AD B0 61			lda MODE
  3979 382F C9 02			cmp #$02
  3980 3831 D0 0B			jne l_0E5E
  3981 3833 A0 FA			ldy #256-6
  3982 3835 B9 3D 1F 99 76 60 + 	mva:rne CODEORIGIN+$0037+6-256,y adr.S+6-256,y+
  3983 383E			l_0E5E
  3984
  3985 				; optimize OK (test\tools\artur\artur.pas), line = 373
  3986
  3987 383E AD 70 61			lda adr.S+$00
  3988 3841 85 84			sta SYSTEM.MOVE_045A.COUNT
  3989 3843 A9 71			lda <adr.S+$01
  3990 3845 85 88			sta SYSTEM.MOVE_045A.SOURCE
  3991 3847 A9 61			lda >adr.S+$01
  3992 3849 85 89			sta SYSTEM.MOVE_045A.SOURCE+1
  3993 384B A9 C4			lda #$C4
  3994 384D 85 8C			sta SYSTEM.MOVE_045A.DEST
  3995 384F A9 7F			lda #$7F
  3996 3851 85 8D			sta SYSTEM.MOVE_045A.DEST+1
  3997 3853 A9 00			lda #$00
  3998 3855 85 85			sta SYSTEM.MOVE_045A.COUNT+1
  3999 3857				.local +MAIN.SYSTEM.MOVE_045A
  4000 3857				m@INLINE
Macro: MAIN.SYSTEM.MOVE_045A.M@INLINE [Source: artur.a65]
     4 3857 20 74 27			jsr @move
Source: artur.a65
  4001 					.endl
  4002
  4003 				; optimize FAIL ('UPDATEXYK', test\tools\artur\artur.pas), line = 375
  4004
  4005 385A 20 91 36			jsr UPDATEXYK
  4006
  4007 				; optimize OK (test\tools\artur\artur.pas), line = 377
  4008
  4009 385D A9 11			lda #$11
  4010 385F 8D 6D 61			sta B
  4011
  4012 3862			l_0E72
  4013 				; --- ForToDoCondition
  4014 3862 AC 6D 61			ldy B
  4015 3865 B9 C1 61			lda adr.BRUSHHISTORY,y
  4016 3868 85 9D			sta :STACKORIGIN+9
  4017 386A A9 E7			lda #$E7
  4018 386C 38 ED 6D 61			sub B
  4019 3870 A8				tay
  4020 3871 A9 7F			lda #$7F
  4021 3873 E9 00			sbc #$00
  4022 3875 85 81			sta :bp+1
  4023 3877 A5 9D			lda :STACKORIGIN+9
  4024 3879 91 80			sta (:bp),y
  4025 387B CE 6D 61			dec B
  4026 387E 10 E2			jpl l_0E72
  4027 3880			l_0E80
  4028
  4029 				; optimize OK (test\tools\artur\artur.pas), line = 378
  4030
  4031 3880 AD AA 61			lda BRUSH
  4032 3883 8D E7 7F			sta $7FE7
  4033
  4034 				; ------------------------------------------------------------
  4035
  4036 3886			@exit
  4037 					.ifdef @new
  4038 					lda <@VarData
  4039 					sta :ztmp
  4040 					lda >@VarData
  4041 					ldy #@VarDataSize-1
  4042 					jmp @FreeMem
  4043 					els
  4044 3886 60				rts						; ret
  4045 					eif
  4046 				.endl
  4047
  4048 3887			.local	SHOWMENUBAR					; PROCEDURE
  4049
  4050 				; optimize OK (test\tools\artur\artur.pas), line = 383
  4051
  4052 3887 A9 00			lda #$00
  4053 3889 A0 27			ldy #$27
  4054 388B 99 C0 7B 88 10 FA		sta:rpl $7BC0,y-
  4055
  4056 				; optimize OK (test\tools\artur\artur.pas), line = 384
  4057
  4058 3891 AD B0 61			lda MODE
  4059 3894 F0 03 4C 18 39		jne l_0EBA
  4060 3899 A0 D7			ldy #256-41
  4061 389B B9 67 1F 99 99 60 + 	mva:rne CODEORIGIN+$003E+41-256,y adr.S+41-256,y+
  4062
  4063 				; optimize OK (test\tools\artur\artur.pas), line = 386
  4064
  4065 38A4 AD 70 61			lda adr.S+$00
  4066 38A7 85 84			sta SYSTEM.MOVE_045A.COUNT
  4067 38A9 A9 71			lda <adr.S+$01
  4068 38AB 85 88			sta SYSTEM.MOVE_045A.SOURCE
  4069 38AD A9 61			lda >adr.S+$01
  4070 38AF 85 89			sta SYSTEM.MOVE_045A.SOURCE+1
  4071 38B1 A9 C0			lda #$C0
  4072 38B3 85 8C			sta SYSTEM.MOVE_045A.DEST
  4073 38B5 A9 7B			lda #$7B
  4074 38B7 85 8D			sta SYSTEM.MOVE_045A.DEST+1
  4075 38B9 A9 00			lda #$00
  4076 38BB 85 85			sta SYSTEM.MOVE_045A.COUNT+1
  4077 38BD				.local +MAIN.SYSTEM.MOVE_045A
  4078 38BD				m@INLINE
Macro: MAIN.SYSTEM.MOVE_045A.M@INLINE [Source: artur.a65]
     4 38BD 20 74 27			jsr @move
Source: artur.a65
  4079 					.endl
  4080
  4081 				; optimize OK (test\tools\artur\artur.pas), line = 387
  4082
  4083 38C0 AD BA 61			lda CURSORFORWARD
  4084 38C3 F0 27			jeq l_0ECE
  4085 38C5 A0 F9			ldy #256-7
  4086 38C7 B9 6F 1F 99 77 60 + 	mva:rne CODEORIGIN+$0068+7-256,y adr.S+7-256,y+
  4087
  4088 				; optimize OK (test\tools\artur\artur.pas), line = 389
  4089
  4090 38D0 AD 70 61			lda adr.S+$00
  4091 38D3 85 84			sta SYSTEM.MOVE_045A.COUNT
  4092 38D5 A9 71			lda <adr.S+$01
  4093 38D7 85 88			sta SYSTEM.MOVE_045A.SOURCE
  4094 38D9 A9 61			lda >adr.S+$01
  4095 38DB 85 89			sta SYSTEM.MOVE_045A.SOURCE+1
  4096 38DD A9 DA			lda #$DA
  4097 38DF 85 8C			sta SYSTEM.MOVE_045A.DEST
  4098 38E1 A9 7B			lda #$7B
  4099 38E3 85 8D			sta SYSTEM.MOVE_045A.DEST+1
  4100 38E5 A9 00			lda #$00
  4101 38E7 85 85			sta SYSTEM.MOVE_045A.COUNT+1
  4102 38E9				.local +MAIN.SYSTEM.MOVE_045A
  4103 38E9				m@INLINE
Macro: MAIN.SYSTEM.MOVE_045A.M@INLINE [Source: artur.a65]
     4 38E9 20 74 27			jsr @move
Source: artur.a65
  4104 					.endl
  4105 38EC			l_0ECE
  4106
  4107 				; optimize OK (test\tools\artur\artur.pas), line = 391
  4108
  4109 38EC AD B9 61			lda INVERT
  4110 38EF F0 27			jeq l_0EE4
  4111 38F1 A0 F8			ldy #256-8
  4112 38F3 B9 78 1F 99 78 60 + 	mva:rne CODEORIGIN+$0070+8-256,y adr.S+8-256,y+
  4113
  4114 				; optimize OK (test\tools\artur\artur.pas), line = 393
  4115
  4116 38FC AD 70 61			lda adr.S+$00
  4117 38FF 85 84			sta SYSTEM.MOVE_045A.COUNT
  4118 3901 A9 71			lda <adr.S+$01
  4119 3903 85 88			sta SYSTEM.MOVE_045A.SOURCE
  4120 3905 A9 61			lda >adr.S+$01
  4121 3907 85 89			sta SYSTEM.MOVE_045A.SOURCE+1
  4122 3909 A9 E1			lda #$E1
  4123 390B 85 8C			sta SYSTEM.MOVE_045A.DEST
  4124 390D A9 7B			lda #$7B
  4125 390F 85 8D			sta SYSTEM.MOVE_045A.DEST+1
  4126 3911 A9 00			lda #$00
  4127 3913 85 85			sta SYSTEM.MOVE_045A.COUNT+1
  4128 3915				.local +MAIN.SYSTEM.MOVE_045A
  4129 3915				m@INLINE
Macro: MAIN.SYSTEM.MOVE_045A.M@INLINE [Source: artur.a65]
     4 3915 20 74 27			jsr @move
Source: artur.a65
  4130 					.endl
  4131 3918			l_0EE4
  4132 3918			l_0EBA
  4133
  4134 				; optimize OK (test\tools\artur\artur.pas), line = 396
  4135
  4136 3918 AD B0 61			lda MODE
  4137 391B C9 01			cmp #$01
  4138 391D F0 03 4C FF 39		jne l_0F02
  4139 3922 A0 D7			ldy #256-41
  4140 3924 B9 A2 1F 99 99 60 + 	mva:rne CODEORIGIN+$0079+41-256,y adr.S+41-256,y+
  4141
  4142 				; optimize OK (test\tools\artur\artur.pas), line = 402
  4143
  4144 392D AD 70 61			lda adr.S+$00
  4145 3930 85 84			sta SYSTEM.MOVE_045A.COUNT
  4146 3932 A9 71			lda <adr.S+$01
  4147 3934 85 88			sta SYSTEM.MOVE_045A.SOURCE
  4148 3936 A9 61			lda >adr.S+$01
  4149 3938 85 89			sta SYSTEM.MOVE_045A.SOURCE+1
  4150 393A A9 C0			lda #$C0
  4151 393C 85 8C			sta SYSTEM.MOVE_045A.DEST
  4152 393E A9 7B			lda #$7B
  4153 3940 85 8D			sta SYSTEM.MOVE_045A.DEST+1
  4154 3942 A9 00			lda #$00
  4155 3944 85 85			sta SYSTEM.MOVE_045A.COUNT+1
  4156 3946				.local +MAIN.SYSTEM.MOVE_045A
  4157 3946				m@INLINE
Macro: MAIN.SYSTEM.MOVE_045A.M@INLINE [Source: artur.a65]
     4 3946 20 74 27			jsr @move
Source: artur.a65
  4158 					.endl
  4159
  4160 				; optimize OK (test\tools\artur\artur.pas), line = 403
  4161
  4162 3949 AD B1 61			lda DRAWTOOL
  4163 394C D0 27			jne l_0F1C
  4164 394E A0 FB			ldy #256-5
  4165 3950 B9 A8 1F 99 75 60 + 	mva:rne CODEORIGIN+$00A3+5-256,y adr.S+5-256,y+
  4166
  4167 				; optimize OK (test\tools\artur\artur.pas), line = 405
  4168
  4169 3959 AD 70 61			lda adr.S+$00
  4170 395C 85 84			sta SYSTEM.MOVE_045A.COUNT
  4171 395E A9 71			lda <adr.S+$01
  4172 3960 85 88			sta SYSTEM.MOVE_045A.SOURCE
  4173 3962 A9 61			lda >adr.S+$01
  4174 3964 85 89			sta SYSTEM.MOVE_045A.SOURCE+1
  4175 3966 A9 CD			lda #$CD
  4176 3968 85 8C			sta SYSTEM.MOVE_045A.DEST
  4177 396A A9 7B			lda #$7B
  4178 396C 85 8D			sta SYSTEM.MOVE_045A.DEST+1
  4179 396E A9 00			lda #$00
  4180 3970 85 85			sta SYSTEM.MOVE_045A.COUNT+1
  4181 3972				.local +MAIN.SYSTEM.MOVE_045A
  4182 3972				m@INLINE
Macro: MAIN.SYSTEM.MOVE_045A.M@INLINE [Source: artur.a65]
     4 3972 20 74 27			jsr @move
Source: artur.a65
  4183 					.endl
  4184 3975			l_0F1C
  4185
  4186 				; optimize OK (test\tools\artur\artur.pas), line = 407
  4187
  4188 3975 AD B1 61			lda DRAWTOOL
  4189 3978 C9 01			cmp #$01
  4190 397A D0 27			jne l_0F38
  4191 397C A0 FB			ldy #256-5
  4192 397E B9 AE 1F 99 75 60 + 	mva:rne CODEORIGIN+$00A9+5-256,y adr.S+5-256,y+
  4193
  4194 				; optimize OK (test\tools\artur\artur.pas), line = 409
  4195
  4196 3987 AD 70 61			lda adr.S+$00
  4197 398A 85 84			sta SYSTEM.MOVE_045A.COUNT
  4198 398C A9 71			lda <adr.S+$01
  4199 398E 85 88			sta SYSTEM.MOVE_045A.SOURCE
  4200 3990 A9 61			lda >adr.S+$01
  4201 3992 85 89			sta SYSTEM.MOVE_045A.SOURCE+1
  4202 3994 A9 D4			lda #$D4
  4203 3996 85 8C			sta SYSTEM.MOVE_045A.DEST
  4204 3998 A9 7B			lda #$7B
  4205 399A 85 8D			sta SYSTEM.MOVE_045A.DEST+1
  4206 399C A9 00			lda #$00
  4207 399E 85 85			sta SYSTEM.MOVE_045A.COUNT+1
  4208 39A0				.local +MAIN.SYSTEM.MOVE_045A
  4209 39A0				m@INLINE
Macro: MAIN.SYSTEM.MOVE_045A.M@INLINE [Source: artur.a65]
     4 39A0 20 74 27			jsr @move
Source: artur.a65
  4210 					.endl
  4211 39A3			l_0F38
  4212
  4213 				; optimize OK (test\tools\artur\artur.pas), line = 411
  4214
  4215 39A3 AD B1 61			lda DRAWTOOL
  4216 39A6 C9 02			cmp #$02
  4217 39A8 D0 27			jne l_0F54
  4218 39AA A0 FA			ldy #256-6
  4219 39AC B9 B5 1F 99 76 60 + 	mva:rne CODEORIGIN+$00AF+6-256,y adr.S+6-256,y+
  4220
  4221 				; optimize OK (test\tools\artur\artur.pas), line = 413
  4222
  4223 39B5 AD 70 61			lda adr.S+$00
  4224 39B8 85 84			sta SYSTEM.MOVE_045A.COUNT
  4225 39BA A9 71			lda <adr.S+$01
  4226 39BC 85 88			sta SYSTEM.MOVE_045A.SOURCE
  4227 39BE A9 61			lda >adr.S+$01
  4228 39C0 85 89			sta SYSTEM.MOVE_045A.SOURCE+1
  4229 39C2 A9 DB			lda #$DB
  4230 39C4 85 8C			sta SYSTEM.MOVE_045A.DEST
  4231 39C6 A9 7B			lda #$7B
  4232 39C8 85 8D			sta SYSTEM.MOVE_045A.DEST+1
  4233 39CA A9 00			lda #$00
  4234 39CC 85 85			sta SYSTEM.MOVE_045A.COUNT+1
  4235 39CE				.local +MAIN.SYSTEM.MOVE_045A
  4236 39CE				m@INLINE
Macro: MAIN.SYSTEM.MOVE_045A.M@INLINE [Source: artur.a65]
     4 39CE 20 74 27			jsr @move
Source: artur.a65
  4237 					.endl
  4238 39D1			l_0F54
  4239
  4240 				; optimize OK (test\tools\artur\artur.pas), line = 415
  4241
  4242 39D1 AD B1 61			lda DRAWTOOL
  4243 39D4 C9 03			cmp #$03
  4244 39D6 D0 27			jne l_0F70
  4245 39D8 A0 FA			ldy #256-6
  4246 39DA B9 BC 1F 99 76 60 + 	mva:rne CODEORIGIN+$00B6+6-256,y adr.S+6-256,y+
  4247
  4248 				; optimize OK (test\tools\artur\artur.pas), line = 417
  4249
  4250 39E3 AD 70 61			lda adr.S+$00
  4251 39E6 85 84			sta SYSTEM.MOVE_045A.COUNT
  4252 39E8 A9 71			lda <adr.S+$01
  4253 39EA 85 88			sta SYSTEM.MOVE_045A.SOURCE
  4254 39EC A9 61			lda >adr.S+$01
  4255 39EE 85 89			sta SYSTEM.MOVE_045A.SOURCE+1
  4256 39F0 A9 E3			lda #$E3
  4257 39F2 85 8C			sta SYSTEM.MOVE_045A.DEST
  4258 39F4 A9 7B			lda #$7B
  4259 39F6 85 8D			sta SYSTEM.MOVE_045A.DEST+1
  4260 39F8 A9 00			lda #$00
  4261 39FA 85 85			sta SYSTEM.MOVE_045A.COUNT+1
  4262 39FC				.local +MAIN.SYSTEM.MOVE_045A
  4263 39FC				m@INLINE
Macro: MAIN.SYSTEM.MOVE_045A.M@INLINE [Source: artur.a65]
     4 39FC 20 74 27			jsr @move
Source: artur.a65
  4264 					.endl
  4265 39FF			l_0F70
  4266 39FF			l_0F02
  4267
  4268 				; optimize OK (test\tools\artur\artur.pas), line = 420
  4269
  4270 39FF AD B0 61			lda MODE
  4271 3A02 C9 02			cmp #$02
  4272 3A04 D0 58			jne l_0F8E
  4273
  4274 				; optimize OK (test\tools\artur\artur.pas), line = 421
  4275
  4276 3A06 AD BE 61			lda P2X
  4277 3A09 C9 FF			cmp #$FF
  4278 3A0B D0 2A			jne l_0FA1
  4279 3A0D A0 E0			ldy #256-32
  4280 3A0F B9 DD 1F 99 90 60 + 	mva:rne CODEORIGIN+$00BD+32-256,y adr.S+32-256,y+
  4281
  4282 				; optimize OK (test\tools\artur\artur.pas), line = 423
  4283
  4284 3A18 AD 70 61			lda adr.S+$00
  4285 3A1B 85 84			sta SYSTEM.MOVE_045A.COUNT
  4286 3A1D A9 71			lda <adr.S+$01
  4287 3A1F 85 88			sta SYSTEM.MOVE_045A.SOURCE
  4288 3A21 A9 61			lda >adr.S+$01
  4289 3A23 85 89			sta SYSTEM.MOVE_045A.SOURCE+1
  4290 3A25 A9 C0			lda #$C0
  4291 3A27 85 8C			sta SYSTEM.MOVE_045A.DEST
  4292 3A29 A9 7B			lda #$7B
  4293 3A2B 85 8D			sta SYSTEM.MOVE_045A.DEST+1
  4294 3A2D A9 00			lda #$00
  4295 3A2F 85 85			sta SYSTEM.MOVE_045A.COUNT+1
  4296 3A31				.local +MAIN.SYSTEM.MOVE_045A
  4297 3A31				m@INLINE
Macro: MAIN.SYSTEM.MOVE_045A.M@INLINE [Source: artur.a65]
     4 3A31 20 74 27			jsr @move
Source: artur.a65
  4298 					.endl
  4299 3A34 4C 5E 3A			jmp l_0FB2
  4300 3A37			l_0FA1
  4301 3A37 A0 DF			ldy #256-33
  4302 3A39 B9 FF 1F 99 91 60 + 	mva:rne CODEORIGIN+$00DE+33-256,y adr.S+33-256,y+
  4303
  4304 				; optimize OK (test\tools\artur\artur.pas), line = 430
  4305
  4306 3A42 AD 70 61			lda adr.S+$00
  4307 3A45 85 84			sta SYSTEM.MOVE_045A.COUNT
  4308 3A47 A9 71			lda <adr.S+$01
  4309 3A49 85 88			sta SYSTEM.MOVE_045A.SOURCE
  4310 3A4B A9 61			lda >adr.S+$01
  4311 3A4D 85 89			sta SYSTEM.MOVE_045A.SOURCE+1
  4312 3A4F A9 C0			lda #$C0
  4313 3A51 85 8C			sta SYSTEM.MOVE_045A.DEST
  4314 3A53 A9 7B			lda #$7B
  4315 3A55 85 8D			sta SYSTEM.MOVE_045A.DEST+1
  4316 3A57 A9 00			lda #$00
  4317 3A59 85 85			sta SYSTEM.MOVE_045A.COUNT+1
  4318 3A5B				.local +MAIN.SYSTEM.MOVE_045A
  4319 3A5B				m@INLINE
Macro: MAIN.SYSTEM.MOVE_045A.M@INLINE [Source: artur.a65]
     4 3A5B 20 74 27			jsr @move
Source: artur.a65
  4320 					.endl
  4321 3A5E			l_0FB2
  4322 3A5E			l_0F8E
  4323 3A5E			@exit
  4324 					.ifdef @new
  4325 					lda <@VarData
  4326 					sta :ztmp
  4327 					lda >@VarData
  4328 					ldy #@VarDataSize-1
  4329 					jmp @FreeMem
  4330 					els
  4331 3A5E 60				rts						; ret
  4332 					eif
  4333 				.endl
  4334
  4335 3A5F			.local	XORCURSOR					; PROCEDURE
  4336
  4337 				; optimize OK (test\tools\artur\artur.pas), line = 444
  4338
  4339 3A5F AD 18 63			lda X
  4340 3A62 4A				lsr @
  4341 3A63 4A				lsr @
  4342 3A64 4A				lsr @
  4343 3A65 8D 1A 63			sta PX
  4344
  4345 				; optimize OK (test\tools\artur\artur.pas), line = 445
  4346
  4347 3A68 85 85			sta :eax+1
  4348 3A6A A9 00			lda #$00
  4349 3A6C 46 85			lsr :eax+1
  4350 3A6E 6A				ror @
  4351 3A6F 18 69 80			add #$80
  4352 3A72 85 9D			sta :STACKORIGIN+9
  4353 3A74 A9 71			lda #$71
  4354 3A76 65 85			adc :eax+1
  4355 3A78 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  4356 3A7A A9 00			lda #$00
  4357 3A7C 85 AE			sta :STACKORIGIN+STACKWIDTH+10
  4358 3A7E AD 19 63			lda Y
  4359 3A81 0A				asl @
  4360 3A82 26 AE			rol :STACKORIGIN+STACKWIDTH+10
  4361 3A84 0A				asl @
  4362 3A85 26 AE			rol :STACKORIGIN+STACKWIDTH+10
  4363 3A87 18 65 9D			add :STACKORIGIN+9
  4364 3A8A A8				tay
  4365 3A8B A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  4366 3A8D 65 AE			adc :STACKORIGIN+STACKWIDTH+10
  4367 3A8F 8D 1D 63			sta CURSOR_PMG+1
  4368 3A92 98				tya
  4369 3A93 18 69 0F			add #$0F
  4370 3A96 8D 1C 63			sta CURSOR_PMG
  4371 3A99 90 03			scc
  4372 3A9B EE 1D 63			inc CURSOR_PMG+1
  4373
  4374 				; optimize OK (test\tools\artur\artur.pas), line = 446
  4375
  4376 3A9E AD 18 63			lda X
  4377 3AA1 29 07			and #$07
  4378 3AA3 8D 1A 63			sta PX
  4379
  4380 				; optimize FAIL (50, test\tools\artur\artur.pas), line = 447
  4381
  4382 3AA6 E8				inx
  4383 3AA7 A9 80 95 94			mva #$80 :STACKORIGIN,x
  4384 3AAB E8				inx
  4385 3AAC AD 1A 63 95 94		mva PX :STACKORIGIN,x
  4386 3AB1 20 30 27			jsr shrAL_CL.BYTE
  4387 3AB4 CA				dex
  4388 3AB5 B5 94			lda :STACKORIGIN,x
  4389 3AB7 8D 1B 63			sta CURSOR_MASK
  4390 3ABA CA				dex
  4391
  4392 				; optimize OK (test\tools\artur\artur.pas), line = 448
  4393
  4394 3ABB A9 04			lda #$04
  4395 3ABD 8D 1A 63			sta PX
  4396
  4397 				; --- RepeatUntilProlog
  4398 3AC0			l_1002
  4399
  4400 				; optimize OK (test\tools\artur\artur.pas), line = 450
  4401
  4402 3AC0 AC 1D 63			ldy CURSOR_PMG+1
  4403 3AC3 84 81			sty :bp+1
  4404 3AC5 AC 1C 63			ldy CURSOR_PMG
  4405 3AC8 B1 80			lda (:bp),y
  4406 3ACA 4D 1B 63			eor CURSOR_MASK
  4407 3ACD 91 80			sta (:bp),y
  4408
  4409 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 451
  4410
  4411 3ACF EE 1C 63			inc CURSOR_PMG
  4412 3AD2 D0 03			sne
  4413 3AD4 EE 1D 63			inc CURSOR_PMG+1
  4414
  4415 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 452
  4416
  4417 3AD7 CE 1A 63			dec PX
  4418
  4419 				; optimize OK (test\tools\artur\artur.pas), line = 453
  4420
  4421 3ADA D0 E4			jne l_1002
  4422
  4423 				; ------------------------------------------------------------
  4424
  4425 = 6318			X	= DATAORIGIN+$0A68
  4426 = 6319			Y	= DATAORIGIN+$0A69
  4427 = 631A			PX	= DATAORIGIN+$0A6A
  4428 = 631B			CURSOR_MASK	= DATAORIGIN+$0A6B
  4429 = 631C			CURSOR_PMG	= DATAORIGIN+$0A6C
  4430
  4431 = 6318			@VarData	= X
  4432 = 0006			@VarDataSize	= 6
  4433
  4434 3ADC			@exit
  4435 					.ifdef @new
  4436 					lda <@VarData
  4437 					sta :ztmp
  4438 					lda >@VarData
  4439 					ldy #@VarDataSize-1
  4440 					jmp @FreeMem
  4441 					els
  4442 3ADC 60				rts						; ret
  4443 					eif
  4444 				.endl
  4445
  4446 3ADD			.local	ERASEALLCURSORS					; PROCEDURE
  4447
  4448 				; optimize OK (test\tools\artur\artur.pas), line = 458
  4449
  4450 3ADD A9 80			lda #$80
  4451 3ADF 85 88			sta SYSTEM.FILLBYTE.A
  4452 3AE1 A9 71			lda #$71
  4453 3AE3 85 89			sta SYSTEM.FILLBYTE.A+1
  4454 3AE5 A9 70			lda #$70
  4455 3AE7 85 8C			sta SYSTEM.FILLBYTE.COUNT
  4456 3AE9 A9 02			lda #$02
  4457 3AEB 85 8D			sta SYSTEM.FILLBYTE.COUNT+1
  4458 3AED A9 00			lda #$00
  4459 3AEF 85 84			sta SYSTEM.FILLBYTE.VALUE
  4460 3AF1				.local +MAIN.SYSTEM.FILLBYTE
  4461 3AF1				m@INLINE
Macro: MAIN.SYSTEM.FILLBYTE.M@INLINE [Source: artur.a65]
     4 3AF1 20 C9 27			jsr @fill
Source: artur.a65
  4462 					.endl
  4463 3AF4			@exit
  4464 					.ifdef @new
  4465 					lda <@VarData
  4466 					sta :ztmp
  4467 					lda >@VarData
  4468 					ldy #@VarDataSize-1
  4469 					jmp @FreeMem
  4470 					els
  4471 3AF4 60				rts						; ret
  4472 					eif
  4473 				.endl
  4474
  4475 3AF5			.local	INITCURSOR					; PROCEDURE
  4476
  4477 				; optimize OK (test\tools\artur\artur.pas), line = 463
  4478
  4479 3AF5 A9 00			lda #$00
  4480 3AF7 8D B2 61			sta CURSORX
  4481
  4482 				; optimize OK (test\tools\artur\artur.pas), line = 464
  4483
  4484 3AFA 8D B3 61			sta CURSORY
  4485
  4486 				; optimize OK (test\tools\artur\artur.pas), line = 465
  4487
  4488 3AFD 8D B4 61			sta CURSOR
  4489 3B00 8D B5 61			sta CURSOR+1
  4490
  4491 				; optimize OK (test\tools\artur\artur.pas), line = 466
  4492
  4493 3B03 AD B2 61			lda CURSORX
  4494 3B06 8D 18 63			sta XORCURSOR.X
  4495 3B09 AD B3 61			lda CURSORY
  4496 3B0C 8D 19 63			sta XORCURSOR.Y
  4497 3B0F 20 5F 3A			jsr XORCURSOR
  4498 3B12			@exit
  4499 					.ifdef @new
  4500 					lda <@VarData
  4501 					sta :ztmp
  4502 					lda >@VarData
  4503 					ldy #@VarDataSize-1
  4504 					jmp @FreeMem
  4505 					els
  4506 3B12 60				rts						; ret
  4507 					eif
  4508 				.endl
  4509
  4510 3B13			.local	DRAWSELECTION					; PROCEDURE
  4511
  4512 				; optimize FAIL ('ERASEALLCURSORS', test\tools\artur\artur.pas), line = 472
  4513
  4514 3B13 20 DD 3A			jsr ERASEALLCURSORS
  4515
  4516 				; optimize OK (test\tools\artur\artur.pas), line = 473
  4517
  4518 3B16 AD 20 63			lda PC2X
  4519 3B19 CD 1E 63			cmp PC1X
  4520 3B1C B0 17			jcs l_105B
  4521 3B1E A9 1E			lda <PC1X
  4522 3B20 8D D8 62			sta SWAP.A
  4523 3B23 A9 63			lda >PC1X
  4524 3B25 8D D9 62			sta SWAP.A+1
  4525 3B28 A9 20			lda <PC2X
  4526 3B2A 8D DA 62			sta SWAP.B
  4527 3B2D A9 63			lda >PC2X
  4528 3B2F 8D DB 62			sta SWAP.B+1
  4529 3B32 20 4C 31			jsr SWAP
  4530 3B35			l_105B
  4531
  4532 				; optimize OK (test\tools\artur\artur.pas), line = 474
  4533
  4534 3B35 AD 21 63			lda PC2Y
  4535 3B38 CD 1F 63			cmp PC1Y
  4536 3B3B B0 17			jcs l_1075
  4537 3B3D A9 1F			lda <PC1Y
  4538 3B3F 8D D8 62			sta SWAP.A
  4539 3B42 A9 63			lda >PC1Y
  4540 3B44 8D D9 62			sta SWAP.A+1
  4541 3B47 A9 21			lda <PC2Y
  4542 3B49 8D DA 62			sta SWAP.B
  4543 3B4C A9 63			lda >PC2Y
  4544 3B4E 8D DB 62			sta SWAP.B+1
  4545 3B51 20 4C 31			jsr SWAP
  4546 3B54			l_1075
  4547
  4548 				; optimize OK (test\tools\artur\artur.pas), line = 475
  4549
  4550 3B54 AD 1E 63			lda PC1X
  4551 3B57 8D 22 63			sta X
  4552
  4553 3B5A			l_1088
  4554 				; --- ForToDoCondition
  4555 3B5A AD 22 63			lda X
  4556 3B5D CD 20 63			cmp PC2X
  4557 3B60 90 02			scc
  4558 3B62 D0 28			jne l_1096
  4559
  4560 				; optimize OK (test\tools\artur\artur.pas), line = 476
  4561
  4562 3B64 8D 18 63			sta XORCURSOR.X
  4563 3B67 AD 1F 63			lda PC1Y
  4564 3B6A 8D 19 63			sta XORCURSOR.Y
  4565 3B6D 20 5F 3A			jsr XORCURSOR
  4566
  4567 				; optimize OK (test\tools\artur\artur.pas), line = 477
  4568
  4569 3B70 AD 1F 63			lda PC1Y
  4570 3B73 CD 21 63			cmp PC2Y
  4571 3B76 F0 0F			jeq l_10B1
  4572 3B78 AD 22 63			lda X
  4573 3B7B 8D 18 63			sta XORCURSOR.X
  4574 3B7E AD 21 63			lda PC2Y
  4575 3B81 8D 19 63			sta XORCURSOR.Y
  4576 3B84 20 5F 3A			jsr XORCURSOR
  4577 3B87			l_10B1
  4578
  4579 				; --- ForToDoEpilog
  4580 3B87 EE 22 63			inc X
  4581 3B8A D0 CE			jne l_1088
  4582 3B8C			l_1096
  4583
  4584 				; optimize OK (test\tools\artur\artur.pas), line = 479
  4585
  4586 3B8C AC 1F 63			ldy PC1Y
  4587 3B8F C8				iny
  4588 3B90 8C 23 63			sty Y
  4589 3B93 AC 21 63			ldy PC2Y
  4590 3B96 88				dey
  4591 3B97 8C 9B 3B			sty @FORTMP_10D2_0
  4592
  4593 3B9A			l_10D5
  4594 				; --- ForToDoCondition
  4595 3B9A A9 00			lda @FORTMP_10D2_0:#$00
  4596 3B9C CD 23 63			cmp Y
  4597 3B9F 90 2B			jcc l_10E3
  4598
  4599 				; optimize OK (test\tools\artur\artur.pas), line = 480
  4600
  4601 3BA1 AD 1E 63			lda PC1X
  4602 3BA4 8D 18 63			sta XORCURSOR.X
  4603 3BA7 AD 23 63			lda Y
  4604 3BAA 8D 19 63			sta XORCURSOR.Y
  4605 3BAD 20 5F 3A			jsr XORCURSOR
  4606
  4607 				; optimize OK (test\tools\artur\artur.pas), line = 481
  4608
  4609 3BB0 AD 1E 63			lda PC1X
  4610 3BB3 CD 20 63			cmp PC2X
  4611 3BB6 F0 0F			jeq l_10FE
  4612 3BB8 AD 20 63			lda PC2X
  4613 3BBB 8D 18 63			sta XORCURSOR.X
  4614 3BBE AD 23 63			lda Y
  4615 3BC1 8D 19 63			sta XORCURSOR.Y
  4616 3BC4 20 5F 3A			jsr XORCURSOR
  4617 3BC7			l_10FE
  4618
  4619 				; --- ForToDoEpilog
  4620 3BC7 EE 23 63			inc Y
  4621 3BCA D0 CE			jne l_10D5
  4622 3BCC			l_10E3
  4623
  4624 				; ------------------------------------------------------------
  4625
  4626 = 631E			PC1X	= DATAORIGIN+$0A6E
  4627 = 631F			PC1Y	= DATAORIGIN+$0A6F
  4628 = 6320			PC2X	= DATAORIGIN+$0A70
  4629 = 6321			PC2Y	= DATAORIGIN+$0A71
  4630 = 6322			X	= DATAORIGIN+$0A72
  4631 = 6323			Y	= DATAORIGIN+$0A73
  4632
  4633 = 631E			@VarData	= PC1X
  4634 = 0006			@VarDataSize	= 6
  4635
  4636 3BCC			@exit
  4637 					.ifdef @new
  4638 					lda <@VarData
  4639 					sta :ztmp
  4640 					lda >@VarData
  4641 					ldy #@VarDataSize-1
  4642 					jmp @FreeMem
  4643 					els
  4644 3BCC 60				rts						; ret
  4645 					eif
  4646 				.endl
  4647
  4648 3BCD			.local	DRAWLINE					; PROCEDURE
  4649
  4650 				; optimize OK (test\tools\artur\artur.pas), line = 493
  4651
  4652 3BCD A0 01			ldy #1
  4653 3BCF AD BE 61			lda P2X
  4654 3BD2 C9 FF			cmp #$FF
  4655 3BD4 F0 01			beq @+
  4656 3BD6 88				dey
  4657 				@
  4658 3BD7 98				tya
  4659 3BD8 8D 32 63			sta CUR
  4660
  4661 				; optimize OK (test\tools\artur\artur.pas), line = 495
  4662
  4663 3BDB D0 05			jne l_112C
  4664 3BDD A9 01			lda #$01
  4665 3BDF 20 34 35			jsr STOREUNDOACTION
  4666 3BE2			l_112C
  4667
  4668 				; optimize OK (test\tools\artur\artur.pas), line = 497
  4669
  4670 3BE2 AD B2 61			lda CURSORX
  4671 3BE5 8D BE 61			sta P2X
  4672
  4673 				; optimize OK (test\tools\artur\artur.pas), line = 498
  4674
  4675 3BE8 AD B3 61			lda CURSORY
  4676 3BEB 8D C0 61			sta P2Y
  4677
  4678 				; optimize OK (test\tools\artur\artur.pas), line = 499
  4679
  4680 3BEE AD BE 61			lda P2X
  4681 3BF1 38 ED BD 61			sub P1X
  4682 3BF5 8D 25 63			sta DELTAX
  4683
  4684 				; optimize OK (test\tools\artur\artur.pas), line = 500
  4685
  4686 3BF8 10 09			jpl l_115B
  4687 3BFA A9 00			lda #$00
  4688 3BFC 38 ED 25 63			sub DELTAX
  4689 3C00 8D 25 63			sta DELTAX
  4690 3C03			l_115B
  4691
  4692 				; optimize OK (test\tools\artur\artur.pas), line = 501
  4693
  4694 3C03 AD C0 61			lda P2Y
  4695 3C06 38 ED BF 61			sub P1Y
  4696 3C0A 8D 26 63			sta DELTAY
  4697
  4698 				; optimize OK (test\tools\artur\artur.pas), line = 502
  4699
  4700 3C0D 10 09			jpl l_1185
  4701 3C0F A9 00			lda #$00
  4702 3C11 38 ED 26 63			sub DELTAY
  4703 3C15 8D 26 63			sta DELTAY
  4704 3C18			l_1185
  4705
  4706 				; optimize OK (test\tools\artur\artur.pas), line = 504
  4707
  4708 3C18 AD 25 63			lda DELTAX
  4709 3C1B 38 ED 26 63			sub DELTAY
  4710 3C1F 50 02			svc
  4711 3C21 49 80			eor #$80
  4712 3C23 30 39			jmi l_11A5
  4713
  4714 				; optimize OK (test\tools\artur\artur.pas), line = 506
  4715
  4716 3C25 AC 25 63			ldy DELTAX
  4717 3C28 C8				iny
  4718 3C29 8C 2E 63			sty NUMPIXELS
  4719
  4720 				; optimize OK (test\tools\artur\artur.pas), line = 507
  4721
  4722 3C2C AD 26 63			lda DELTAY
  4723 3C2F 0A				asl @
  4724 3C30 38 ED 25 63			sub DELTAX
  4725 3C34 8D 27 63			sta D
  4726
  4727 				; optimize OK (test\tools\artur\artur.pas), line = 508
  4728
  4729 3C37 AD 26 63			lda DELTAY
  4730 3C3A 0A				asl @
  4731 3C3B 8D 28 63			sta DINC1
  4732
  4733 				; optimize OK (test\tools\artur\artur.pas), line = 509
  4734
  4735 3C3E AD 26 63			lda DELTAY
  4736 3C41 38 ED 25 63			sub DELTAX
  4737 3C45 0A				asl @
  4738 3C46 8D 29 63			sta DINC2
  4739
  4740 				; optimize OK (test\tools\artur\artur.pas), line = 510
  4741
  4742 3C49 A9 01			lda #$01
  4743 3C4B 8D 2A 63			sta XINC1
  4744
  4745 				; optimize OK (test\tools\artur\artur.pas), line = 511
  4746
  4747 3C4E 8D 2B 63			sta XINC2
  4748
  4749 				; optimize OK (test\tools\artur\artur.pas), line = 512
  4750
  4751 3C51 A9 00			lda #$00
  4752 3C53 8D 2C 63			sta YINC1
  4753
  4754 				; optimize OK (test\tools\artur\artur.pas), line = 513
  4755
  4756 3C56 A9 01			lda #$01
  4757 3C58 8D 2D 63			sta YINC2
  4758 3C5B 4C 92 3C			jmp l_11F3
  4759 3C5E			l_11A5
  4760
  4761 				; optimize OK (test\tools\artur\artur.pas), line = 516
  4762
  4763 3C5E AC 26 63			ldy DELTAY
  4764 3C61 C8				iny
  4765 3C62 8C 2E 63			sty NUMPIXELS
  4766
  4767 				; optimize OK (test\tools\artur\artur.pas), line = 517
  4768
  4769 3C65 AD 25 63			lda DELTAX
  4770 3C68 0A				asl @
  4771 3C69 38 ED 26 63			sub DELTAY
  4772 3C6D 8D 27 63			sta D
  4773
  4774 				; optimize OK (test\tools\artur\artur.pas), line = 518
  4775
  4776 3C70 AD 25 63			lda DELTAX
  4777 3C73 0A				asl @
  4778 3C74 8D 28 63			sta DINC1
  4779
  4780 				; optimize OK (test\tools\artur\artur.pas), line = 519
  4781
  4782 3C77 AD 25 63			lda DELTAX
  4783 3C7A 38 ED 26 63			sub DELTAY
  4784 3C7E 0A				asl @
  4785 3C7F 8D 29 63			sta DINC2
  4786
  4787 				; optimize OK (test\tools\artur\artur.pas), line = 520
  4788
  4789 3C82 A9 00			lda #$00
  4790 3C84 8D 2A 63			sta XINC1
  4791
  4792 				; optimize OK (test\tools\artur\artur.pas), line = 521
  4793
  4794 3C87 A9 01			lda #$01
  4795 3C89 8D 2B 63			sta XINC2
  4796
  4797 				; optimize OK (test\tools\artur\artur.pas), line = 522
  4798
  4799 3C8C 8D 2C 63			sta YINC1
  4800
  4801 				; optimize OK (test\tools\artur\artur.pas), line = 523
  4802
  4803 3C8F 8D 2D 63			sta YINC2
  4804 3C92			l_11F3
  4805
  4806 				; optimize OK (test\tools\artur\artur.pas), line = 526
  4807
  4808 3C92 AD BE 61			lda P2X
  4809 3C95 CD BD 61			cmp P1X
  4810 3C98 B0 12			jcs l_124B
  4811
  4812 				; optimize OK (test\tools\artur\artur.pas), line = 527
  4813
  4814 3C9A A9 00			lda #$00
  4815 3C9C 38 ED 2A 63			sub XINC1
  4816 3CA0 8D 2A 63			sta XINC1
  4817
  4818 				; optimize OK (test\tools\artur\artur.pas), line = 528
  4819
  4820 3CA3 A9 00			lda #$00
  4821 3CA5 38 ED 2B 63			sub XINC2
  4822 3CA9 8D 2B 63			sta XINC2
  4823 3CAC			l_124B
  4824
  4825 				; optimize OK (test\tools\artur\artur.pas), line = 530
  4826
  4827 3CAC AD C0 61			lda P2Y
  4828 3CAF CD BF 61			cmp P1Y
  4829 3CB2 B0 12			jcs l_1274
  4830
  4831 				; optimize OK (test\tools\artur\artur.pas), line = 531
  4832
  4833 3CB4 A9 00			lda #$00
  4834 3CB6 38 ED 2C 63			sub YINC1
  4835 3CBA 8D 2C 63			sta YINC1
  4836
  4837 				; optimize OK (test\tools\artur\artur.pas), line = 532
  4838
  4839 3CBD A9 00			lda #$00
  4840 3CBF 38 ED 2D 63			sub YINC2
  4841 3CC3 8D 2D 63			sta YINC2
  4842 3CC6			l_1274
  4843
  4844 				; optimize OK (test\tools\artur\artur.pas), line = 535
  4845
  4846 3CC6 AD BD 61			lda P1X
  4847 3CC9 8D 2F 63			sta X
  4848
  4849 				; optimize OK (test\tools\artur\artur.pas), line = 536
  4850
  4851 3CCC AD BF 61			lda P1Y
  4852 3CCF 8D 30 63			sta Y
  4853
  4854 				; optimize OK (test\tools\artur\artur.pas), line = 538
  4855
  4856 3CD2 A9 01			lda #$01
  4857 3CD4 8D 31 63			sta I
  4858
  4859 3CD7			l_12A0
  4860 				; --- ForToDoCondition
  4861 3CD7 AD 31 63			lda I
  4862 3CDA CD 2E 63			cmp NUMPIXELS
  4863 3CDD 90 05			scc
  4864 3CDF F0 03 4C 68 3D		jne l_12AE
  4865
  4866 				; optimize OK (test\tools\artur\artur.pas), line = 539
  4867
  4868 3CE4 AD 32 63			lda CUR
  4869 3CE7 F0 1A			jeq l_12BA
  4870
  4871 				; optimize OK (test\tools\artur\artur.pas), line = 540
  4872
  4873 3CE9 AD 31 63			lda I
  4874 3CEC CD 2E 63			cmp NUMPIXELS
  4875 3CEF B0 0F			jcs l_12CF
  4876 3CF1 AD 2F 63			lda X
  4877 3CF4 8D 18 63			sta XORCURSOR.X
  4878 3CF7 AD 30 63			lda Y
  4879 3CFA 8D 19 63			sta XORCURSOR.Y
  4880 3CFD 20 5F 3A			jsr XORCURSOR
  4881 3D00			l_12CF
  4882 3D00 4C 1F 3D			jmp l_12E2
  4883 3D03			l_12BA
  4884
  4885 				; optimize OK (test\tools\artur\artur.pas), line = 541
  4886
  4887 3D03 AD 30 63			lda Y
  4888 3D06 0A				asl @
  4889 3D07 A8				tay
  4890 3D08 B9 A8 62			lda adr.LINEOFFSET,y
  4891 3D0B 18 6D 2F 63			add X
  4892 3D0F 85 9E			sta :STACKORIGIN+10
  4893 3D11 B9 A9 62			lda adr.LINEOFFSET+1,y
  4894 3D14 69 7C			adc #$7C
  4895 3D16 85 81			sta :bp+1
  4896 3D18 A4 9E			ldy :STACKORIGIN+10
  4897 3D1A AD AA 61			lda BRUSH
  4898 3D1D 91 80			sta (:bp),y
  4899 3D1F			l_12E2
  4900
  4901 				; optimize OK (test\tools\artur\artur.pas), line = 542
  4902
  4903 3D1F AD 27 63			lda D
  4904 3D22 10 1E			jpl l_1307
  4905
  4906 				; optimize OK (test\tools\artur\artur.pas), line = 543
  4907
  4908 3D24 18 6D 28 63			add DINC1
  4909 3D28 8D 27 63			sta D
  4910
  4911 				; optimize OK (test\tools\artur\artur.pas), line = 544
  4912
  4913 3D2B AD 2F 63			lda X
  4914 3D2E 18 6D 2A 63			add XINC1
  4915 3D32 8D 2F 63			sta X
  4916
  4917 				; optimize OK (test\tools\artur\artur.pas), line = 545
  4918
  4919 3D35 AD 30 63			lda Y
  4920 3D38 18 6D 2C 63			add YINC1
  4921 3D3C 8D 30 63			sta Y
  4922 3D3F 4C 60 3D			jmp l_1335
  4923 3D42			l_1307
  4924
  4925 				; optimize OK (test\tools\artur\artur.pas), line = 548
  4926
  4927 3D42 AD 27 63			lda D
  4928 3D45 18 6D 29 63			add DINC2
  4929 3D49 8D 27 63			sta D
  4930
  4931 				; optimize OK (test\tools\artur\artur.pas), line = 549
  4932
  4933 3D4C AD 2F 63			lda X
  4934 3D4F 18 6D 2B 63			add XINC2
  4935 3D53 8D 2F 63			sta X
  4936
  4937 				; optimize OK (test\tools\artur\artur.pas), line = 550
  4938
  4939 3D56 AD 30 63			lda Y
  4940 3D59 18 6D 2D 63			add YINC2
  4941 3D5D 8D 30 63			sta Y
  4942 3D60			l_1335
  4943
  4944 				; --- ForToDoEpilog
  4945 3D60 EE 31 63			inc I
  4946 3D63 F0 03 4C D7 3C		jne l_12A0
  4947 3D68			l_12AE
  4948
  4949 				; optimize OK (test\tools\artur\artur.pas), line = 553
  4950
  4951 3D68 AD 32 63			lda CUR
  4952 3D6B F0 05			jeq l_136A
  4953 3D6D A9 FF			lda #$FF
  4954 3D6F 8D BE 61			sta P2X
  4955 3D72			l_136A
  4956
  4957 				; ------------------------------------------------------------
  4958
  4959 = 6325			DELTAX	= DATAORIGIN+$0A75
  4960 = 6326			DELTAY	= DATAORIGIN+$0A76
  4961 = 6327			D	= DATAORIGIN+$0A77
  4962 = 6328			DINC1	= DATAORIGIN+$0A78
  4963 = 6329			DINC2	= DATAORIGIN+$0A79
  4964 = 632A			XINC1	= DATAORIGIN+$0A7A
  4965 = 632B			XINC2	= DATAORIGIN+$0A7B
  4966 = 632C			YINC1	= DATAORIGIN+$0A7C
  4967 = 632D			YINC2	= DATAORIGIN+$0A7D
  4968 = 632E			NUMPIXELS	= DATAORIGIN+$0A7E
  4969 = 632F			X	= DATAORIGIN+$0A7F
  4970 = 6330			Y	= DATAORIGIN+$0A80
  4971 = 6331			I	= DATAORIGIN+$0A81
  4972 = 6332			CUR	= DATAORIGIN+$0A82
  4973
  4974 = 6325			@VarData	= DELTAX
  4975 = 000E			@VarDataSize	= 14
  4976
  4977 3D72			@exit
  4978 					.ifdef @new
  4979 					lda <@VarData
  4980 					sta :ztmp
  4981 					lda >@VarData
  4982 					ldy #@VarDataSize-1
  4983 					jmp @FreeMem
  4984 					els
  4985 3D72 60				rts						; ret
  4986 					eif
  4987 				.endl
  4988
  4989 3D73			.local	MOVECURSOR					; PROCEDURE
  4990
  4991 				; optimize FAIL ('SYSTEM.PAUSE_0479', test\tools\artur\artur.pas), line = 559
  4992
  4993 3D73 20 A0 2A			jsr SYSTEM.PAUSE_0479
  4994
  4995 				; optimize OK (test\tools\artur\artur.pas), line = 560
  4996
  4997 3D76 A9 00			lda #$00
  4998 3D78 8D 35 63			sta SELECTIONMODE
  4999
  5000 				; optimize OK (test\tools\artur\artur.pas), line = 561
  5001
  5002 3D7B AD B2 61			lda CURSORX
  5003 3D7E 8D 18 63			sta XORCURSOR.X
  5004 3D81 AD B3 61			lda CURSORY
  5005 3D84 8D 19 63			sta XORCURSOR.Y
  5006 3D87 20 5F 3A			jsr XORCURSOR
  5007
  5008 				; optimize OK (test\tools\artur\artur.pas), line = 563
  5009
  5010 3D8A AD B2 61			lda CURSORX
  5011 3D8D 18 6D 33 63			add DX
  5012 3D91 8D B2 61			sta CURSORX
  5013
  5014 				; optimize OK (test\tools\artur\artur.pas), line = 564
  5015
  5016 3D94 C9 FF			cmp #$FF
  5017 3D96 D0 05			jne l_139F
  5018 3D98 A9 27			lda #$27
  5019 3D9A 8D B2 61			sta CURSORX
  5020 3D9D			l_139F
  5021
  5022 				; optimize OK (test\tools\artur\artur.pas), line = 565
  5023
  5024 3D9D AD B2 61			lda CURSORX
  5025 3DA0 C9 28			cmp #$28
  5026 3DA2 D0 05			jne l_13B8
  5027 3DA4 A9 00			lda #$00
  5028 3DA6 8D B2 61			sta CURSORX
  5029 3DA9			l_13B8
  5030
  5031 				; optimize OK (test\tools\artur\artur.pas), line = 566
  5032
  5033 3DA9 AD B3 61			lda CURSORY
  5034 3DAC 18 6D 34 63			add DY
  5035 3DB0 8D B3 61			sta CURSORY
  5036
  5037 				; optimize OK (test\tools\artur\artur.pas), line = 567
  5038
  5039 3DB3 C9 FF			cmp #$FF
  5040 3DB5 D0 05			jne l_13DD
  5041 3DB7 A9 17			lda #$17
  5042 3DB9 8D B3 61			sta CURSORY
  5043 3DBC			l_13DD
  5044
  5045 				; optimize OK (test\tools\artur\artur.pas), line = 568
  5046
  5047 3DBC AD B3 61			lda CURSORY
  5048 3DBF C9 18			cmp #$18
  5049 3DC1 D0 05			jne l_13F6
  5050 3DC3 A9 00			lda #$00
  5051 3DC5 8D B3 61			sta CURSORY
  5052 3DC8			l_13F6
  5053
  5054 				; optimize OK (test\tools\artur\artur.pas), line = 569
  5055
  5056 3DC8 AD B3 61			lda CURSORY
  5057 3DCB 0A				asl @
  5058 3DCC A8				tay
  5059 3DCD B9 A8 62			lda adr.LINEOFFSET,y
  5060 3DD0 18 6D B2 61			add CURSORX
  5061 3DD4 8D B4 61			sta CURSOR
  5062 3DD7 B9 A9 62			lda adr.LINEOFFSET+1,y
  5063 3DDA 69 00			adc #$00
  5064 3DDC 8D B5 61			sta CURSOR+1
  5065
  5066 				; optimize OK (test\tools\artur\artur.pas), line = 573
  5067
  5068 3DDF AD B0 61			lda MODE
  5069 3DE2 C9 01			cmp #$01
  5070 3DE4 F0 04			jeq l_1429x
  5071 3DE6 C9 02			cmp #$02
  5072 3DE8 D0 45			jne l_1429
  5073 3DEA			l_1429x
  5074
  5075 				; optimize OK (test\tools\artur\artur.pas), line = 574
  5076
  5077 3DEA AD BD 61			lda P1X
  5078 3DED C9 FF			cmp #$FF
  5079 3DEF F0 3E			jeq l_1448
  5080 3DF1 AD BE 61			lda P2X
  5081 3DF4 C9 FF			cmp #$FF
  5082 3DF6 D0 37			jne l_1448
  5083
  5084 				; optimize FAIL ('ERASEALLCURSORS', test\tools\artur\artur.pas), line = 575
  5085
  5086 3DF8 20 DD 3A			jsr ERASEALLCURSORS
  5087
  5088 				; optimize OK (test\tools\artur\artur.pas), line = 576
  5089
  5090 3DFB AD B0 61			lda MODE
  5091 3DFE C9 01			cmp #$01
  5092 3E00 D0 0D			jne l_1468
  5093 3E02 AD B1 61			lda DRAWTOOL
  5094 3E05 C9 01			cmp #$01
  5095 3E07 D0 06			jne l_1468
  5096
  5097 				; optimize FAIL ('DRAWLINE', test\tools\artur\artur.pas), line = 577
  5098
  5099 3E09 20 CD 3B			jsr DRAWLINE
  5100 3E0C 4C 2F 3E			jmp l_1473
  5101 3E0F			l_1468
  5102
  5103 				; optimize OK (test\tools\artur\artur.pas), line = 578
  5104
  5105 3E0F AD BD 61			lda P1X
  5106 3E12 8D 1E 63			sta DRAWSELECTION.PC1X
  5107 3E15 AD BF 61			lda P1Y
  5108 3E18 8D 1F 63			sta DRAWSELECTION.PC1Y
  5109 3E1B AD B2 61			lda CURSORX
  5110 3E1E 8D 20 63			sta DRAWSELECTION.PC2X
  5111 3E21 AD B3 61			lda CURSORY
  5112 3E24 8D 21 63			sta DRAWSELECTION.PC2Y
  5113 3E27 20 13 3B			jsr DRAWSELECTION
  5114
  5115 				; optimize OK (test\tools\artur\artur.pas), line = 579
  5116
  5117 3E2A A9 01			lda #$01
  5118 3E2C 8D 35 63			sta SELECTIONMODE
  5119 3E2F			l_1473
  5120 3E2F			l_1448
  5121 3E2F			l_1429
  5122
  5123 				; optimize OK (test\tools\artur\artur.pas), line = 583
  5124
  5125 3E2F AD 35 63			lda SELECTIONMODE
  5126 3E32 D0 0F			jne l_1497
  5127 3E34 AD B2 61			lda CURSORX
  5128 3E37 8D 18 63			sta XORCURSOR.X
  5129 3E3A AD B3 61			lda CURSORY
  5130 3E3D 8D 19 63			sta XORCURSOR.Y
  5131 3E40 20 5F 3A			jsr XORCURSOR
  5132 3E43			l_1497
  5133
  5134 				; optimize FAIL ('READCURSORCHAR', test\tools\artur\artur.pas), line = 584
  5135
  5136 3E43 20 6D 36			jsr READCURSORCHAR
  5137
  5138 				; optimize FAIL ('UPDATEXYK', test\tools\artur\artur.pas), line = 585
  5139
  5140 3E46 20 91 36			jsr UPDATEXYK
  5141
  5142 				; optimize OK (test\tools\artur\artur.pas), line = 586
  5143
  5144 3E49 A9 00			lda #$00
  5145 3E4B 8D B7 61			sta KEYDOWN
  5146
  5147 				; ------------------------------------------------------------
  5148
  5149 = 6333			DX	= DATAORIGIN+$0A83
  5150 = 6334			DY	= DATAORIGIN+$0A84
  5151 = 6335			SELECTIONMODE	= DATAORIGIN+$0A85
  5152
  5153 = 6333			@VarData	= DX
  5154 = 0003			@VarDataSize	= 3
  5155
  5156 3E4E			@exit
  5157 					.ifdef @new
  5158 					lda <@VarData
  5159 					sta :ztmp
  5160 					lda >@VarData
  5161 					ldy #@VarDataSize-1
  5162 					jmp @FreeMem
  5163 					els
  5164 3E4E 60				rts						; ret
  5165 					eif
  5166 				.endl
  5167
  5168 3E4F			.local	CLEARSELECTION					; PROCEDURE
  5169
  5170 				; optimize FAIL ('ERASEALLCURSORS', test\tools\artur\artur.pas), line = 591
  5171
  5172 3E4F 20 DD 3A			jsr ERASEALLCURSORS
  5173
  5174 				; optimize OK (test\tools\artur\artur.pas), line = 592
  5175
  5176 3E52 A9 FF			lda #$FF
  5177 3E54 8D BD 61			sta P1X
  5178 3E57 8D BE 61			sta P2X
  5179
  5180 				; optimize OK (test\tools\artur\artur.pas), line = 593
  5181
  5182 3E5A AD B2 61			lda CURSORX
  5183 3E5D 8D 18 63			sta XORCURSOR.X
  5184 3E60 AD B3 61			lda CURSORY
  5185 3E63 8D 19 63			sta XORCURSOR.Y
  5186 3E66 20 5F 3A			jsr XORCURSOR
  5187 3E69			@exit
  5188 					.ifdef @new
  5189 					lda <@VarData
  5190 					sta :ztmp
  5191 					lda >@VarData
  5192 					ldy #@VarDataSize-1
  5193 					jmp @FreeMem
  5194 					els
  5195 3E69 60				rts						; ret
  5196 					eif
  5197 				.endl
  5198
  5199 3E6A			.local	CHECKCURSORKEYS					; PROCEDURE
  5200 3E6A 8D 36 63			sta OFFSET
  5201
  5202 				; optimize OK (test\tools\artur\artur.pas), line = 598
  5203
  5204 3E6D A9 06			lda #$06
  5205 3E6F 18 6D 36 63			add OFFSET
  5206 3E73 CD 9A 61			cmp KEY
  5207 3E76 D0 0D			jne l_14D7
  5208 3E78 A9 FF			lda #$FF
  5209 3E7A 8D 33 63			sta MOVECURSOR.DX
  5210 3E7D A9 00			lda #$00
  5211 3E7F 8D 34 63			sta MOVECURSOR.DY
  5212 3E82 20 73 3D			jsr MOVECURSOR
  5213 3E85			l_14D7
  5214
  5215 				; optimize OK (test\tools\artur\artur.pas), line = 599
  5216
  5217 3E85 A9 07			lda #$07
  5218 3E87 18 6D 36 63			add OFFSET
  5219 3E8B CD 9A 61			cmp KEY
  5220 3E8E D0 0D			jne l_14F5
  5221 3E90 A9 01			lda #$01
  5222 3E92 8D 33 63			sta MOVECURSOR.DX
  5223 3E95 A9 00			lda #$00
  5224 3E97 8D 34 63			sta MOVECURSOR.DY
  5225 3E9A 20 73 3D			jsr MOVECURSOR
  5226 3E9D			l_14F5
  5227
  5228 				; optimize OK (test\tools\artur\artur.pas), line = 600
  5229
  5230 3E9D A9 0E			lda #$0E
  5231 3E9F 18 6D 36 63			add OFFSET
  5232 3EA3 CD 9A 61			cmp KEY
  5233 3EA6 D0 0D			jne l_1513
  5234 3EA8 A9 00			lda #$00
  5235 3EAA 8D 33 63			sta MOVECURSOR.DX
  5236 3EAD A9 FF			lda #$FF
  5237 3EAF 8D 34 63			sta MOVECURSOR.DY
  5238 3EB2 20 73 3D			jsr MOVECURSOR
  5239 3EB5			l_1513
  5240
  5241 				; optimize OK (test\tools\artur\artur.pas), line = 601
  5242
  5243 3EB5 A9 0F			lda #$0F
  5244 3EB7 18 6D 36 63			add OFFSET
  5245 3EBB CD 9A 61			cmp KEY
  5246 3EBE D0 0D			jne l_1531
  5247 3EC0 A9 00			lda #$00
  5248 3EC2 8D 33 63			sta MOVECURSOR.DX
  5249 3EC5 A9 01			lda #$01
  5250 3EC7 8D 34 63			sta MOVECURSOR.DY
  5251 3ECA 20 73 3D			jsr MOVECURSOR
  5252 3ECD			l_1531
  5253
  5254 				; ------------------------------------------------------------
  5255
  5256 = 6336			OFFSET	= DATAORIGIN+$0A86
  5257
  5258 = 6336			@VarData	= OFFSET
  5259 = 0001			@VarDataSize	= 1
  5260
  5261 3ECD			@exit
  5262 					.ifdef @new
  5263 					lda <@VarData
  5264 					sta :ztmp
  5265 					lda >@VarData
  5266 					ldy #@VarDataSize-1
  5267 					jmp @FreeMem
  5268 					els
  5269 3ECD 60				rts						; ret
  5270 					eif
  5271 				.endl
  5272
  5273 3ECE			.local	WRITESXY					; PROCEDURE
  5274
  5275 				; optimize OK (test\tools\artur\artur.pas), line = 613
  5276
  5277 3ECE AD 38 63			lda Y
  5278 3ED1 0A				asl @
  5279 3ED2 A8				tay
  5280 3ED3 B9 A8 62			lda adr.LINEOFFSET,y
  5281 3ED6 18 6D 37 63			add X
  5282 3EDA 8D 39 63			sta CARRET
  5283 3EDD B9 A9 62			lda adr.LINEOFFSET+1,y
  5284 3EE0 69 7C			adc #$7C
  5285 3EE2 8D 3A 63			sta CARRET+1
  5286
  5287 				; optimize OK (test\tools\artur\artur.pas), line = 614
  5288
  5289 3EE5 AD 70 61			lda adr.S+$00
  5290 3EE8 85 84			sta SYSTEM.MOVE_045A.COUNT
  5291 3EEA A9 71			lda <adr.S+$01
  5292 3EEC 85 88			sta SYSTEM.MOVE_045A.SOURCE
  5293 3EEE A9 61			lda >adr.S+$01
  5294 3EF0 85 89			sta SYSTEM.MOVE_045A.SOURCE+1
  5295 3EF2 AD 39 63			lda CARRET
  5296 3EF5 85 8C			sta SYSTEM.MOVE_045A.DEST
  5297 3EF7 AD 3A 63			lda CARRET+1
  5298 3EFA 85 8D			sta SYSTEM.MOVE_045A.DEST+1
  5299 3EFC A9 00			lda #$00
  5300 3EFE 85 85			sta SYSTEM.MOVE_045A.COUNT+1
  5301 3F00				.local +MAIN.SYSTEM.MOVE_045A
  5302 3F00				m@INLINE
Macro: MAIN.SYSTEM.MOVE_045A.M@INLINE [Source: artur.a65]
     4 3F00 20 74 27			jsr @move
Source: artur.a65
  5303 					.endl
  5304
  5305 				; ------------------------------------------------------------
  5306
  5307 = 6337			X	= DATAORIGIN+$0A87
  5308 = 6338			Y	= DATAORIGIN+$0A88
  5309 = 6339			CARRET	= DATAORIGIN+$0A89
  5310
  5311 = 6337			@VarData	= X
  5312 = 0004			@VarDataSize	= 4
  5313
  5314 3F03			@exit
  5315 					.ifdef @new
  5316 					lda <@VarData
  5317 					sta :ztmp
  5318 					lda >@VarData
  5319 					ldy #@VarDataSize-1
  5320 					jmp @FreeMem
  5321 					els
  5322 3F03 60				rts						; ret
  5323 					eif
  5324 				.endl
  5325
  5326 3F04			.local	GETHEXVAL					; FUNCTION
  5327
  5328 				; optimize OK (test\tools\artur\artur.pas), line = 620
  5329
  5330 3F04 AD 3D 63			lda DEFAULT
  5331 3F07 8D 3E 63			sta RESULT
  5332
  5333 				; optimize OK (test\tools\artur\artur.pas), line = 621
  5334
  5335 3F0A AD 3B 63			lda X
  5336 3F0D 8D 45 5E			sta B_CRT.CRT_GOTOXY.X
  5337 3F10 AD 3C 63			lda Y
  5338 3F13 8D 46 5E			sta B_CRT.CRT_GOTOXY.Y
  5339 3F16 20 FC 2D			jsr B_CRT.CRT_GOTOXY
  5340
  5341 				; optimize FAIL ('B_CRT.CRT_WRITE_0604', test\tools\artur\artur.pas), line = 622
  5342
  5343 3F19 E8				inx
  5344 3F1A A9 00 95 94			mva #$00 :STACKORIGIN,x
  5345 3F1E A9 21 95 A4			mva #$21 :STACKORIGIN+STACKWIDTH,x
  5346 3F22 20 29 2E			jsr B_CRT.CRT_WRITE_0604
  5347
  5348 				; optimize OK (test\tools\artur\artur.pas), line = 623
  5349
  5350 3F25 AD 3B 63			lda X
  5351 3F28 8D 18 63			sta XORCURSOR.X
  5352 3F2B AD 3C 63			lda Y
  5353 3F2E 8D 19 63			sta XORCURSOR.Y
  5354 3F31 20 5F 3A			jsr XORCURSOR
  5355
  5356 				; optimize OK (test\tools\artur\artur.pas), line = 624
  5357
  5358 3F34 AD 3B 63			lda X
  5359 3F37 18 69 01			add #$01
  5360 3F3A 8D 18 63			sta XORCURSOR.X
  5361 3F3D AD 3C 63			lda Y
  5362 3F40 8D 19 63			sta XORCURSOR.Y
  5363 3F43 20 5F 3A			jsr XORCURSOR
  5364
  5365 				; optimize OK (test\tools\artur\artur.pas), line = 625
  5366
  5367 3F46 AD 3B 63			lda X
  5368 3F49 8D 45 5E			sta B_CRT.CRT_GOTOXY.X
  5369 3F4C AD 3C 63			lda Y
  5370 3F4F 8D 46 5E			sta B_CRT.CRT_GOTOXY.Y
  5371 3F52 20 FC 2D			jsr B_CRT.CRT_GOTOXY
  5372
  5373 				; optimize OK (test\tools\artur\artur.pas), line = 626
  5374
  5375 3F55 A9 02			lda #$02
  5376 3F57 20 F4 2E			jsr B_CRT.CRT_READSTRINGI_0699
  5377 3F5A E8				inx
  5378 3F5B AD 6A 2F			lda B_CRT.CRT_READSTRINGI_0699.RESULT
  5379 3F5E 85 88			sta @move.src
  5380 3F60 AD 6B 2F			lda B_CRT.CRT_READSTRINGI_0699.RESULT+1
  5381 3F63 85 89			sta @move.src+1
  5382 					@moveSTRING S #41
  5382 				 MWA S @MOVE.DST\ MWA #41 @MOVE.CNT\ JSR @MOVESTRING
  5382 3F65 AD A1 58 85 8C AD +  MWA S @MOVE.DST
  5382 3F6F A9 29 85 84 A9 00 +  MWA #41 @MOVE.CNT
  5382 3F77 20 11 28		 JSR @MOVESTRING
  5383 3F7A CA				dex
  5384
  5385 				; optimize OK (test\tools\artur\artur.pas), line = 627
  5386
  5387 3F7B A9 40			lda <I
  5388 3F7D 8D E1 62			sta PARSEHEX.I
  5389 3F80 A9 63			lda >I
  5390 3F82 8D E2 62			sta PARSEHEX.I+1
  5391 3F85 A9 3F			lda <ERR
  5392 3F87 8D E3 62			sta PARSEHEX.ERR
  5393 3F8A A9 63			lda >ERR
  5394 3F8C 8D E4 62			sta PARSEHEX.ERR+1
  5395 3F8F 20 FB 31			jsr PARSEHEX
  5396
  5397 				; optimize OK (test\tools\artur\artur.pas), line = 628
  5398
  5399 3F92 AD 3F 63			lda ERR
  5400 3F95 D0 06			jne l_1598
  5401 3F97 AD 40 63			lda I
  5402 3F9A 8D 3E 63			sta RESULT
  5403 3F9D			l_1598
  5404
  5405 				; optimize OK (test\tools\artur\artur.pas), line = 629
  5406
  5407 3F9D AD 3B 63			lda X
  5408 3FA0 8D 18 63			sta XORCURSOR.X
  5409 3FA3 AD 3C 63			lda Y
  5410 3FA6 8D 19 63			sta XORCURSOR.Y
  5411 3FA9 20 5F 3A			jsr XORCURSOR
  5412
  5413 				; optimize OK (test\tools\artur\artur.pas), line = 630
  5414
  5415 3FAC AD 3B 63			lda X
  5416 3FAF 18 69 01			add #$01
  5417 3FB2 8D 18 63			sta XORCURSOR.X
  5418 3FB5 AD 3C 63			lda Y
  5419 3FB8 8D 19 63			sta XORCURSOR.Y
  5420 3FBB 20 5F 3A			jsr XORCURSOR
  5421 3FBE			@exit
  5422
  5423 				; ------------------------------------------------------------
  5424
  5425 = 633B			X	= DATAORIGIN+$0A8B
  5426 = 633C			Y	= DATAORIGIN+$0A8C
  5427 = 633D			DEFAULT	= DATAORIGIN+$0A8D
  5428 = 633E			RESULT	= DATAORIGIN+$0A8E
  5429 = 633F			ERR	= DATAORIGIN+$0A8F
  5430 = 6340			I	= DATAORIGIN+$0A90
  5431
  5432 = 633B			@VarData	= X
  5433 = 0005			@VarDataSize	= 5
  5434
  5435 3FBE 60				rts						; ret
  5436 				.endl
  5437
  5438 3FBF			.local	GETFILENAME					; PROCEDURE
  5439
  5440 				; optimize OK (test\tools\artur\artur.pas), line = 639
  5441
  5442 3FBF AD 41 63			lda X
  5443 3FC2 8D 11 63			sta DRAWRECT.X
  5444 3FC5 AD 42 63			lda Y
  5445 3FC8 8D 12 63			sta DRAWRECT.Y
  5446 3FCB A9 17			lda #$17
  5447 3FCD 8D 13 63			sta DRAWRECT.W
  5448 3FD0 A9 06			lda #$06
  5449 3FD2 8D 14 63			sta DRAWRECT.H
  5450 3FD5 A9 00			lda #$00
  5451 3FD7 8D 15 63			sta DRAWRECT.C
  5452 3FDA 20 27 36			jsr DRAWRECT
  5453 3FDD A0 F0			ldy #256-16
  5454 3FDF B9 14 20 99 80 60 + 	mva:rne CODEORIGIN+$0104+16-256,y adr.S+16-256,y+
  5455
  5456 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 641
  5457
  5458 3FE8 EE 41 63			inc X
  5459 3FEB EE 41 63			inc X
  5460 3FEE EE 42 63			inc Y
  5461
  5462 				; optimize OK (test\tools\artur\artur.pas), line = 642
  5463
  5464 3FF1 AD 41 63			lda X
  5465 3FF4 8D 37 63			sta WRITESXY.X
  5466 3FF7 AD 42 63			lda Y
  5467 3FFA 8D 38 63			sta WRITESXY.Y
  5468 3FFD 20 CE 3E			jsr WRITESXY
  5469
  5470 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 643
  5471
  5472 4000 EE 42 63			inc Y
  5473 4003 EE 42 63			inc Y
  5474
  5475 				; optimize OK (test\tools\artur\artur.pas), line = 644
  5476
  5477 4006 AD 41 63			lda X
  5478 4009 8D 43 63			sta I
  5479 400C 18 69 0D			add #$0D
  5480 400F 8D 13 40			sta @FORTMP_15EA_0
  5481
  5482 4012			l_15ED
  5483 				; --- ForToDoCondition
  5484 4012 A9 00			lda @FORTMP_15EA_0:#$00
  5485 4014 CD 43 63			cmp I
  5486 4017 90 14			jcc l_15FB
  5487 4019 AD 43 63			lda I
  5488 401C 8D 18 63			sta XORCURSOR.X
  5489 401F AD 42 63			lda Y
  5490 4022 8D 19 63			sta XORCURSOR.Y
  5491 4025 20 5F 3A			jsr XORCURSOR
  5492
  5493 				; --- ForToDoEpilog
  5494 4028 EE 43 63			inc I
  5495 402B D0 E5			jne l_15ED
  5496 402D			l_15FB
  5497
  5498 				; optimize OK (test\tools\artur\artur.pas), line = 645
  5499
  5500 402D AD 41 63			lda X
  5501 4030 8D 45 5E			sta B_CRT.CRT_GOTOXY.X
  5502 4033 AD 42 63			lda Y
  5503 4036 8D 46 5E			sta B_CRT.CRT_GOTOXY.Y
  5504 4039 20 FC 2D			jsr B_CRT.CRT_GOTOXY
  5505 403C A0 F3			ldy #256-13
  5506 403E B9 22 20 99 7D 60 + 	mva:rne CODEORIGIN+$0115+13-256,y adr.S+13-256,y+
  5507
  5508 				; optimize OK (test\tools\artur\artur.pas), line = 647
  5509
  5510 4047 A9 0C			lda #$0C
  5511 4049 20 6C 2F			jsr B_CRT.CRT_READSTRING_0758
  5512 404C E8				inx
  5513 404D AD A0 2F			lda B_CRT.CRT_READSTRING_0758.RESULT
  5514 4050 85 88			sta @move.src
  5515 4052 AD A1 2F			lda B_CRT.CRT_READSTRING_0758.RESULT+1
  5516 4055 85 89			sta @move.src+1
  5517 					@moveSTRING S #41
  5517 				 MWA S @MOVE.DST\ MWA #41 @MOVE.CNT\ JSR @MOVESTRING
  5517 4057 AD A1 58 85 8C AD +  MWA S @MOVE.DST
  5517 4061 A9 29 85 84 A9 00 +  MWA #41 @MOVE.CNT
  5517 4069 20 11 28		 JSR @MOVESTRING
  5518 406C CA				dex
  5519
  5520 				; optimize OK (test\tools\artur\artur.pas), line = 648
  5521
  5522 406D AD 41 63			lda X
  5523 4070 8D 43 63			sta I
  5524 4073 18 69 0D			add #$0D
  5525 4076 8D 7A 40			sta @FORTMP_161E_0
  5526
  5527 4079			l_1621
  5528 				; --- ForToDoCondition
  5529 4079 A9 00			lda @FORTMP_161E_0:#$00
  5530 407B CD 43 63			cmp I
  5531 407E 90 14			jcc l_162F
  5532 4080 AD 43 63			lda I
  5533 4083 8D 18 63			sta XORCURSOR.X
  5534 4086 AD 42 63			lda Y
  5535 4089 8D 19 63			sta XORCURSOR.Y
  5536 408C 20 5F 3A			jsr XORCURSOR
  5537
  5538 				; --- ForToDoEpilog
  5539 408F EE 43 63			inc I
  5540 4092 D0 E5			jne l_1621
  5541 4094			l_162F
  5542
  5543 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 649
  5544
  5545 4094 EE 42 63			inc Y
  5546
  5547 				; optimize OK (test\tools\artur\artur.pas), line = 650
  5548
  5549 4097 AD 41 63			lda X
  5550 409A 8D 45 5E			sta B_CRT.CRT_GOTOXY.X
  5551 409D AD 42 63			lda Y
  5552 40A0 8D 46 5E			sta B_CRT.CRT_GOTOXY.Y
  5553 40A3 20 FC 2D			jsr B_CRT.CRT_GOTOXY
  5554
  5555 				; optimize FAIL ('CRT.KEYPRESSED', test\tools\artur\artur.pas), line = 651
  5556
  5557 40A6 20 B2 2A			jsr CRT.KEYPRESSED
  5558 40A9 AD E7 58			lda CRT.KEYPRESSED.RESULT
  5559 40AC F0 0A			jeq l_1650
  5560 40AE 20 AB 2A			jsr CRT.READKEY
  5561 40B1 E8				inx
  5562 40B2 AD E6 58 95 94		mva CRT.READKEY.RESULT :STACKORIGIN,x
  5563 40B7 CA				dex
  5564 40B8			l_1650
  5565
  5566 				; optimize OK (test\tools\artur\artur.pas), line = 652
  5567
  5568 40B8 AD A1 58			lda S
  5569 40BB 85 88			sta SYSUTILS.ANSIUPPERCASE.A
  5570 40BD AD A2 58			lda S+1
  5571 40C0 85 89			sta SYSUTILS.ANSIUPPERCASE.A+1
  5572 40C2 20 95 2C			jsr SYSUTILS.ANSIUPPERCASE
  5573 40C5 E8				inx
  5574 40C6 AD E0 2C			lda SYSUTILS.ANSIUPPERCASE.RESULT
  5575 40C9 85 88			sta @move.src
  5576 40CB AD E1 2C			lda SYSUTILS.ANSIUPPERCASE.RESULT+1
  5577 40CE 85 89			sta @move.src+1
  5578 					@moveSTRING S #41
  5578 				 MWA S @MOVE.DST\ MWA #41 @MOVE.CNT\ JSR @MOVESTRING
  5578 40D0 AD A1 58 85 8C AD +  MWA S @MOVE.DST
  5578 40DA A9 29 85 84 A9 00 +  MWA #41 @MOVE.CNT
  5578 40E2 20 11 28		 JSR @MOVESTRING
  5579 40E5 CA				dex
  5580
  5581 				; optimize FAIL ('ADDDRIVETOS', test\tools\artur\artur.pas), line = 653
  5582
  5583 40E6 20 7D 31			jsr ADDDRIVETOS
  5584
  5585 				; ------------------------------------------------------------
  5586
  5587 = 6341			X	= DATAORIGIN+$0A91
  5588 = 6342			Y	= DATAORIGIN+$0A92
  5589 = 0017			FIL_W	= $17
  5590 = 0006			FIL_H	= $06
  5591 = 6343			I	= DATAORIGIN+$0A93
  5592
  5593 = 6341			@VarData	= X
  5594 = 0003			@VarDataSize	= 3
  5595
  5596 40E9			@exit
  5597 					.ifdef @new
  5598 					lda <@VarData
  5599 					sta :ztmp
  5600 					lda >@VarData
  5601 					ldy #@VarDataSize-1
  5602 					jmp @FreeMem
  5603 					els
  5604 40E9 60				rts						; ret
  5605 					eif
  5606 				.endl
  5607
  5608 40EA			.local	SELECTTOOL					; PROCEDURE
  5609 40EA 8D 46 63			sta TOOL
  5610
  5611 				; optimize OK (test\tools\artur\artur.pas), line = 658
  5612
  5613 40ED 8D B1 61			sta DRAWTOOL
  5614
  5615 				; optimize FAIL ('SHOWMENUBAR', test\tools\artur\artur.pas), line = 659
  5616
  5617 40F0 20 87 38			jsr SHOWMENUBAR
  5618
  5619 				; optimize OK (test\tools\artur\artur.pas), line = 660
  5620
  5621 40F3 A9 00			lda #$00
  5622 40F5 8D B7 61			sta KEYDOWN
  5623
  5624 				; optimize FAIL ('CLEARSELECTION', test\tools\artur\artur.pas), line = 661
  5625
  5626 40F8 20 4F 3E			jsr CLEARSELECTION
  5627
  5628 				; ------------------------------------------------------------
  5629
  5630 = 6346			TOOL	= DATAORIGIN+$0A96
  5631
  5632 = 6346			@VarData	= TOOL
  5633 = 0001			@VarDataSize	= 1
  5634
  5635 40FB			@exit
  5636 					.ifdef @new
  5637 					lda <@VarData
  5638 					sta :ztmp
  5639 					lda >@VarData
  5640 					ldy #@VarDataSize-1
  5641 					jmp @FreeMem
  5642 					els
  5643 40FB 60				rts						; ret
  5644 					eif
  5645 				.endl
  5646
  5647 40FC			.local	NEXTMODE					; PROCEDURE
  5648
  5649 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 666
  5650
  5651 40FC EE B0 61			inc MODE
  5652
  5653 				; optimize OK (test\tools\artur\artur.pas), line = 667
  5654
  5655 40FF AD B0 61			lda MODE
  5656 4102 C9 03			cmp #$03
  5657 4104 D0 05			jne l_1682
  5658 4106 A9 00			lda #$00
  5659 4108 8D B0 61			sta MODE
  5660 410B			l_1682
  5661
  5662 				; optimize OK (test\tools\artur\artur.pas), line = 668
  5663
  5664 410B A9 0A			lda #$0A
  5665 410D 8D AB 61			sta KEYREPEATCOUNTER
  5666
  5667 				; optimize FAIL ('CLEARSELECTION', test\tools\artur\artur.pas), line = 669
  5668
  5669 4110 20 4F 3E			jsr CLEARSELECTION
  5670
  5671 				; optimize FAIL ('SHOWSTATUS', test\tools\artur\artur.pas), line = 670
  5672
  5673 4113 20 DB 37			jsr SHOWSTATUS
  5674
  5675 				; optimize FAIL ('SHOWMENUBAR', test\tools\artur\artur.pas), line = 671
  5676
  5677 4116 20 87 38			jsr SHOWMENUBAR
  5678 4119			@exit
  5679 					.ifdef @new
  5680 					lda <@VarData
  5681 					sta :ztmp
  5682 					lda >@VarData
  5683 					ldy #@VarDataSize-1
  5684 					jmp @FreeMem
  5685 					els
  5686 4119 60				rts						; ret
  5687 					eif
  5688 				.endl
  5689
  5690 411A			.local	OPENMODAL					; PROCEDURE
  5691
  5692 				; optimize OK (test\tools\artur\artur.pas), line = 676
  5693
  5694 411A A9 0A			lda #$0A
  5695 411C 8D AB 61			sta KEYREPEATCOUNTER
  5696
  5697 				; optimize FAIL ('ERASEALLCURSORS', test\tools\artur\artur.pas), line = 677
  5698
  5699 411F 20 DD 3A			jsr ERASEALLCURSORS
  5700
  5701 				; optimize OK (test\tools\artur\artur.pas), line = 678
  5702
  5703 4122 A9 E0			lda #$E0
  5704 4124 8D BC 61			sta EDITORCHARSET
  5705
  5706 				; optimize FAIL ('STOREEDITINBUFFER', test\tools\artur\artur.pas), line = 679
  5707
  5708 4127 20 EF 35			jsr STOREEDITINBUFFER
  5709 412A			@exit
  5710 					.ifdef @new
  5711 					lda <@VarData
  5712 					sta :ztmp
  5713 					lda >@VarData
  5714 					ldy #@VarDataSize-1
  5715 					jmp @FreeMem
  5716 					els
  5717 412A 60				rts						; ret
  5718 					eif
  5719 				.endl
  5720
  5721 412B			.local	CLOSEMODAL					; PROCEDURE
  5722
  5723 				; optimize FAIL ('RESTOREEDITFROMBUFFER', test\tools\artur\artur.pas), line = 684
  5724
  5725 412B 20 0B 36			jsr RESTOREEDITFROMBUFFER
  5726
  5727 				; optimize FAIL ('ERASEALLCURSORS', test\tools\artur\artur.pas), line = 685
  5728
  5729 412E 20 DD 3A			jsr ERASEALLCURSORS
  5730
  5731 				; optimize OK (test\tools\artur\artur.pas), line = 686
  5732
  5733 4131 A9 00			lda #$00
  5734 4133 8D 33 63			sta MOVECURSOR.DX
  5735 4136 8D 34 63			sta MOVECURSOR.DY
  5736 4139 20 73 3D			jsr MOVECURSOR
  5737
  5738 				; optimize OK (test\tools\artur\artur.pas), line = 687
  5739
  5740 413C AD BE 61			lda P2X
  5741 413F C9 FF			cmp #$FF
  5742 4141 F0 1B			jeq l_16B9
  5743 4143 AD BD 61			lda P1X
  5744 4146 8D 1E 63			sta DRAWSELECTION.PC1X
  5745 4149 AD BF 61			lda P1Y
  5746 414C 8D 1F 63			sta DRAWSELECTION.PC1Y
  5747 414F AD BE 61			lda P2X
  5748 4152 8D 20 63			sta DRAWSELECTION.PC2X
  5749 4155 AD C0 61			lda P2Y
  5750 4158 8D 21 63			sta DRAWSELECTION.PC2Y
  5751 415B 20 13 3B			jsr DRAWSELECTION
  5752 415E			l_16B9
  5753
  5754 				; optimize OK (test\tools\artur\artur.pas), line = 688
  5755
  5756 415E AD B2 61			lda CURSORX
  5757 4161 8D 18 63			sta XORCURSOR.X
  5758 4164 AD B3 61			lda CURSORY
  5759 4167 8D 19 63			sta XORCURSOR.Y
  5760 416A 20 5F 3A			jsr XORCURSOR
  5761
  5762 				; optimize OK (test\tools\artur\artur.pas), line = 689
  5763
  5764 416D A9 74			lda #$74
  5765 416F 8D BC 61			sta EDITORCHARSET
  5766
  5767 				; optimize OK (test\tools\artur\artur.pas), line = 690
  5768
  5769 4172 A9 0A			lda #$0A
  5770 4174 8D AB 61			sta KEYREPEATCOUNTER
  5771 4177			@exit
  5772 					.ifdef @new
  5773 					lda <@VarData
  5774 					sta :ztmp
  5775 					lda >@VarData
  5776 					ldy #@VarDataSize-1
  5777 					jmp @FreeMem
  5778 					els
  5779 4177 60				rts						; ret
  5780 					eif
  5781 				.endl
  5782
  5783 4178			.local	HISTORYBACK					; PROCEDURE
  5784
  5785 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 700
  5786
  5787 4178 EE D3 61			inc BRUSHINDEX
  5788
  5789 				; optimize OK (test\tools\artur\artur.pas), line = 701
  5790
  5791 417B AD D3 61			lda BRUSHINDEX
  5792 417E C9 12			cmp #$12
  5793 4180 90 05			jcc l_16F2
  5794 4182 A9 00			lda #$00
  5795 4184 8D D3 61			sta BRUSHINDEX
  5796 4187			l_16F2
  5797
  5798 				; optimize OK (test\tools\artur\artur.pas), line = 702
  5799
  5800 4187 AC D3 61			ldy BRUSHINDEX
  5801 418A B9 C1 61			lda adr.BRUSHHISTORY,y
  5802 418D 8D AA 61			sta BRUSH
  5803
  5804 				; optimize FAIL ('ADJUSTBRUSHFRAME', test\tools\artur\artur.pas), line = 703
  5805
  5806 4190 20 3C 31			jsr ADJUSTBRUSHFRAME
  5807 4193			@exit
  5808 					.ifdef @new
  5809 					lda <@VarData
  5810 					sta :ztmp
  5811 					lda >@VarData
  5812 					ldy #@VarDataSize-1
  5813 					jmp @FreeMem
  5814 					els
  5815 4193 60				rts						; ret
  5816 					eif
  5817 				.endl
  5818
  5819 4194			.local	HISTORYFWD					; PROCEDURE
  5820
  5821 				; optimize OK (test\tools\artur\artur.pas), line = 708
  5822
  5823 4194 AD D3 61			lda BRUSHINDEX
  5824 4197 D0 05			jne l_1719
  5825 4199 A9 12			lda #$12
  5826 419B 8D D3 61			sta BRUSHINDEX
  5827 419E			l_1719
  5828
  5829 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 709
  5830
  5831 419E CE D3 61			dec BRUSHINDEX
  5832
  5833 				; optimize OK (test\tools\artur\artur.pas), line = 710
  5834
  5835 41A1 AC D3 61			ldy BRUSHINDEX
  5836 41A4 B9 C1 61			lda adr.BRUSHHISTORY,y
  5837 41A7 8D AA 61			sta BRUSH
  5838
  5839 				; optimize FAIL ('ADJUSTBRUSHFRAME', test\tools\artur\artur.pas), line = 711
  5840
  5841 41AA 20 3C 31			jsr ADJUSTBRUSHFRAME
  5842 41AD			@exit
  5843 					.ifdef @new
  5844 					lda <@VarData
  5845 					sta :ztmp
  5846 					lda >@VarData
  5847 					ldy #@VarDataSize-1
  5848 					jmp @FreeMem
  5849 					els
  5850 41AD 60				rts						; ret
  5851 					eif
  5852 				.endl
  5853
  5854 41AE			.local	INJECTBRUSH					; PROCEDURE
  5855 41AE 8D 47 63			sta C
  5856
  5857 				; optimize OK (test\tools\artur\artur.pas), line = 717
  5858
  5859 41B1 A9 00			lda #$00
  5860 41B3 8D 48 63			sta I
  5861
  5862 				; optimize OK (test\tools\artur\artur.pas), line = 718
  5863
  5864 41B6 A8				tay
  5865 41B7 B9 C1 61			lda adr.BRUSHHISTORY,y
  5866 41BA 8D 49 63			sta PREV
  5867
  5868 				; optimize OK (test\tools\artur\artur.pas), line = 719
  5869
  5870 41BD AD 47 63			lda C
  5871 41C0 99 C1 61			sta adr.BRUSHHISTORY,y
  5872
  5873 				; --- RepeatUntilProlog
  5874 41C3			l_1749
  5875
  5876 				; optimize OK (test\tools\artur\artur.pas), line = 721
  5877
  5878 41C3 AD 49 63			lda PREV
  5879 41C6 CD 47 63			cmp C
  5880 41C9 D0 03			jne l_175D
  5881 41CB 4C ED 41			jmp @exit					; exit
  5882 41CE			l_175D
  5883
  5884 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 722
  5885
  5886 41CE EE 48 63			inc I
  5887
  5888 				; optimize OK (test\tools\artur\artur.pas), line = 723
  5889
  5890 41D1 AC 48 63			ldy I
  5891 41D4 B9 C1 61			lda adr.BRUSHHISTORY,y
  5892 41D7 8D 6D 61			sta B
  5893
  5894 				; optimize OK (test\tools\artur\artur.pas), line = 724
  5895
  5896 41DA AD 49 63			lda PREV
  5897 41DD 99 C1 61			sta adr.BRUSHHISTORY,y
  5898
  5899 				; optimize OK (test\tools\artur\artur.pas), line = 725
  5900
  5901 41E0 AD 6D 61			lda B
  5902 41E3 8D 49 63			sta PREV
  5903
  5904 				; optimize OK (test\tools\artur\artur.pas), line = 726
  5905
  5906 41E6 AD 48 63			lda I
  5907 41E9 C9 12			cmp #$12
  5908 41EB 90 D6			jcc l_1749
  5909
  5910 				; ------------------------------------------------------------
  5911
  5912 = 6347			C	= DATAORIGIN+$0A97
  5913 = 6348			I	= DATAORIGIN+$0A98
  5914 = 6349			PREV	= DATAORIGIN+$0A99
  5915
  5916 = 6347			@VarData	= C
  5917 = 0003			@VarDataSize	= 3
  5918
  5919 41ED			@exit
  5920 					.ifdef @new
  5921 					lda <@VarData
  5922 					sta :ztmp
  5923 					lda >@VarData
  5924 					ldy #@VarDataSize-1
  5925 					jmp @FreeMem
  5926 					els
  5927 41ED 60				rts						; ret
  5928 					eif
  5929 				.endl
  5930
  5931 41EE			.local	USEBRUSH					; PROCEDURE
  5932 41EE 8D 4A 63			sta C
  5933
  5934 				; optimize OK (test\tools\artur\artur.pas), line = 731
  5935
  5936 41F1 CD C1 61			cmp adr.BRUSHHISTORY+$00
  5937 41F4 D0 03			jne l_17A2
  5938 41F6 4C 10 42			jmp @exit					; exit
  5939 41F9			l_17A2
  5940
  5941 				; optimize OK (test\tools\artur\artur.pas), line = 732
  5942
  5943 41F9 AD 4A 63			lda C
  5944 41FC 20 AE 41			jsr INJECTBRUSH
  5945
  5946 				; optimize OK (test\tools\artur\artur.pas), line = 733
  5947
  5948 41FF A9 00			lda #$00
  5949 4201 8D D3 61			sta BRUSHINDEX
  5950
  5951 				; optimize OK (test\tools\artur\artur.pas), line = 734
  5952
  5953 4204 AD 4A 63			lda C
  5954 4207 8D AA 61			sta BRUSH
  5955
  5956 				; optimize FAIL ('ADJUSTBRUSHFRAME', test\tools\artur\artur.pas), line = 735
  5957
  5958 420A 20 3C 31			jsr ADJUSTBRUSHFRAME
  5959
  5960 				; optimize FAIL ('SHOWSTATUS', test\tools\artur\artur.pas), line = 736
  5961
  5962 420D 20 DB 37			jsr SHOWSTATUS
  5963
  5964 				; ------------------------------------------------------------
  5965
  5966 = 634A			C	= DATAORIGIN+$0A9A
  5967
  5968 = 634A			@VarData	= C
  5969 = 0001			@VarDataSize	= 1
  5970
  5971 4210			@exit
  5972 					.ifdef @new
  5973 					lda <@VarData
  5974 					sta :ztmp
  5975 					lda >@VarData
  5976 					ldy #@VarDataSize-1
  5977 					jmp @FreeMem
  5978 					els
  5979 4210 60				rts						; ret
  5980 					eif
  5981 				.endl
  5982
  5983 4211			.local	POKEBRUSH					; PROCEDURE
  5984
  5985 				; optimize OK (test\tools\artur\artur.pas), line = 741
  5986
  5987 4211 A9 00			lda #$00
  5988 4213 20 34 35			jsr STOREUNDOACTION
  5989
  5990 				; optimize OK (test\tools\artur\artur.pas), line = 742
  5991
  5992 4216 AC B4 61			ldy CURSOR
  5993 4219 A9 7C			lda #$7C
  5994 421B 18 6D B5 61			add CURSOR+1
  5995 421F 85 81			sta :bp+1
  5996 4221 AD AA 61			lda BRUSH
  5997 4224 91 80			sta (:bp),y
  5998
  5999 				; optimize FAIL ('READCURSORCHAR', test\tools\artur\artur.pas), line = 743
  6000
  6001 4226 20 6D 36			jsr READCURSORCHAR
  6002 4229			@exit
  6003 					.ifdef @new
  6004 					lda <@VarData
  6005 					sta :ztmp
  6006 					lda >@VarData
  6007 					ldy #@VarDataSize-1
  6008 					jmp @FreeMem
  6009 					els
  6010 4229 60				rts						; ret
  6011 					eif
  6012 				.endl
  6013
  6014 422A			.local	SETBRUSHFROMKEY					; PROCEDURE
  6015
  6016 				; optimize OK (test\tools\artur\artur.pas), line = 748
  6017
  6018 422A AC A7 58 84 82 AC + 	mwy KEYCHARS :bp2
  6019 4234 AC 9A 61			ldy KEY
  6020 4237 B1 82			lda (:bp2),y
  6021 4239 20 E2 2C			jsr B_CRT.ATASCII2ANTIC_0541
  6022 423C AD 3A 5A			lda B_CRT.ATASCII2ANTIC_0541.RESULT
  6023 423F 8D 6D 61			sta B
  6024
  6025 				; optimize OK (test\tools\artur\artur.pas), line = 749
  6026
  6027 4242 AD B9 61			lda INVERT
  6028 4245 F0 08			jeq l_17E0
  6029 4247 AD 6D 61			lda B
  6030 424A 49 80			eor #$80
  6031 424C 8D 6D 61			sta B
  6032 424F			l_17E0
  6033
  6034 				; optimize OK (test\tools\artur\artur.pas), line = 750
  6035
  6036 424F AD 6D 61			lda B
  6037 4252 8D AA 61			sta BRUSH
  6038 4255			@exit
  6039 					.ifdef @new
  6040 					lda <@VarData
  6041 					sta :ztmp
  6042 					lda >@VarData
  6043 					ldy #@VarDataSize-1
  6044 					jmp @FreeMem
  6045 					els
  6046 4255 60				rts						; ret
  6047 					eif
  6048 				.endl
  6049
  6050 4256			.local	WRITESPACE					; PROCEDURE
  6051
  6052 				; optimize OK (test\tools\artur\artur.pas), line = 755
  6053
  6054 4256 AD AA 61			lda BRUSH
  6055 4259 8D 6D 61			sta B
  6056
  6057 				; optimize OK (test\tools\artur\artur.pas), line = 756
  6058
  6059 425C A9 00			lda #$00
  6060 425E 8D AA 61			sta BRUSH
  6061
  6062 				; optimize OK (test\tools\artur\artur.pas), line = 757
  6063
  6064 4261 AD B9 61			lda INVERT
  6065 4264 F0 05			jeq l_180D
  6066 4266 A9 80			lda #$80
  6067 4268 8D AA 61			sta BRUSH
  6068 426B			l_180D
  6069
  6070 				; optimize OK (test\tools\artur\artur.pas), line = 758
  6071
  6072 426B A9 00			lda #$00
  6073 426D 20 34 35			jsr STOREUNDOACTION
  6074
  6075 				; optimize FAIL ('POKEBRUSH', test\tools\artur\artur.pas), line = 759
  6076
  6077 4270 20 11 42			jsr POKEBRUSH
  6078
  6079 				; optimize OK (test\tools\artur\artur.pas), line = 760
  6080
  6081 4273 AD 6D 61			lda B
  6082 4276 8D AA 61			sta BRUSH
  6083
  6084 				; optimize OK (test\tools\artur\artur.pas), line = 761
  6085
  6086 4279 A9 00			lda #$00
  6087 427B 8D B7 61			sta KEYDOWN
  6088 427E			@exit
  6089 					.ifdef @new
  6090 					lda <@VarData
  6091 					sta :ztmp
  6092 					lda >@VarData
  6093 					ldy #@VarDataSize-1
  6094 					jmp @FreeMem
  6095 					els
  6096 427E 60				rts						; ret
  6097 					eif
  6098 				.endl
  6099
  6100 427F			.local	BRUSHSELECTOR					; FUNCTION
  6101
  6102 427F 4C B9 42			jmp l_1825
  6103
  6104 4282			.local	UPDATEBRUSHCURSOR				; PROCEDURE
  6105
  6106 				; optimize OK (test\tools\artur\artur.pas), line = 777
  6107
  6108 4282 AD 4F 63			lda CX
  6109 4285 8D 18 63			sta XORCURSOR.X
  6110 4288 AD 50 63			lda CY
  6111 428B 8D 19 63			sta XORCURSOR.Y
  6112 428E 20 5F 3A			jsr XORCURSOR
  6113
  6114 				; optimize OK (test\tools\artur\artur.pas), line = 778
  6115
  6116 4291 AD 4E 63			lda CBRUSH
  6117 4294 29 0F			and #$0F
  6118 4296 18 69 0C			add #$0C
  6119 4299 8D 4F 63			sta CX
  6120
  6121 				; optimize OK (test\tools\artur\artur.pas), line = 779
  6122
  6123 429C AD 4E 63			lda CBRUSH
  6124 429F 4A				lsr @
  6125 42A0 4A				lsr @
  6126 42A1 4A				lsr @
  6127 42A2 4A				lsr @
  6128 42A3 18 69 05			add #$05
  6129 42A6 8D 50 63			sta CY
  6130
  6131 				; optimize OK (test\tools\artur\artur.pas), line = 780
  6132
  6133 42A9 AD 4F 63			lda CX
  6134 42AC 8D 18 63			sta XORCURSOR.X
  6135 42AF AD 50 63			lda CY
  6136 42B2 8D 19 63			sta XORCURSOR.Y
  6137 42B5 20 5F 3A			jsr XORCURSOR
  6138 42B8			@exit
  6139 					.ifdef @new
  6140 					lda <@VarData
  6141 					sta :ztmp
  6142 					lda >@VarData
  6143 					ldy #@VarDataSize-1
  6144 					jmp @FreeMem
  6145 					els
  6146 42B8 60				rts						; ret
  6147 					eif
  6148 				.endl
  6149 42B9			l_1825
  6150
  6151 				; optimize FAIL ('ERASEALLCURSORS', test\tools\artur\artur.pas), line = 784
  6152
  6153 42B9 20 DD 3A			jsr ERASEALLCURSORS
  6154
  6155 				; optimize OK (test\tools\artur\artur.pas), line = 785
  6156
  6157 42BC AD AA 61			lda BRUSH
  6158 42BF 8D 4B 63			sta RESULT
  6159
  6160 				; optimize OK (test\tools\artur\artur.pas), line = 786
  6161
  6162 42C2 8D 4E 63			sta CBRUSH
  6163
  6164 				; optimize OK (test\tools\artur\artur.pas), line = 787
  6165
  6166 42C5 A9 0A			lda #$0A
  6167 42C7 8D AB 61			sta KEYREPEATCOUNTER
  6168
  6169 				; optimize FAIL ('STOREEDITINBUFFER', test\tools\artur\artur.pas), line = 788
  6170
  6171 42CA 20 EF 35			jsr STOREEDITINBUFFER
  6172
  6173 				; optimize OK (test\tools\artur\artur.pas), line = 789
  6174
  6175 42CD A9 0B			lda #$0B
  6176 42CF 8D 11 63			sta DRAWRECT.X
  6177 42D2 A9 02			lda #$02
  6178 42D4 8D 12 63			sta DRAWRECT.Y
  6179 42D7 A9 12			lda #$12
  6180 42D9 8D 13 63			sta DRAWRECT.W
  6181 42DC A9 14			lda #$14
  6182 42DE 8D 14 63			sta DRAWRECT.H
  6183 42E1 A9 80			lda #$80
  6184 42E3 8D 15 63			sta DRAWRECT.C
  6185 42E6 20 27 36			jsr DRAWRECT
  6186 42E9 A0 F3			ldy #256-13
  6187 42EB B9 30 20 99 7D 60 + 	mva:rne CODEORIGIN+$0123+13-256,y adr.S+13-256,y+
  6188
  6189 				; optimize OK (test\tools\artur\artur.pas), line = 791
  6190
  6191 42F4 A9 0C			lda #$0C
  6192 42F6 8D 37 63			sta WRITESXY.X
  6193 42F9 A9 03			lda #$03
  6194 42FB 8D 38 63			sta WRITESXY.Y
  6195 42FE 20 CE 3E			jsr WRITESXY
  6196
  6197 				; optimize OK (test\tools\artur\artur.pas), line = 794
  6198
  6199 4301 A9 0C			lda #$0C
  6200 4303 18 6D B2 62			add adr.LINEOFFSET+$0A
  6201 4307 8D 4C 63			sta VRAM
  6202 430A A9 7C			lda #$7C
  6203 430C 6D B3 62			adc adr.LINEOFFSET+1+$0A
  6204 430F 8D 4D 63			sta VRAM+1
  6205
  6206 				; optimize OK (test\tools\artur\artur.pas), line = 795
  6207
  6208 4312 A9 00			lda #$00
  6209 4314 8D 6D 61			sta B
  6210
  6211 				; --- RepeatUntilProlog
  6212 4317			l_188D
  6213
  6214 				; optimize OK (test\tools\artur\artur.pas), line = 797
  6215
  6216 4317 AC 4D 63			ldy VRAM+1
  6217 431A 84 81			sty :bp+1
  6218 431C AC 4C 63			ldy VRAM
  6219 431F AD 6D 61			lda B
  6220 4322 91 80			sta (:bp),y
  6221
  6222 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 798
  6223
  6224 4324 EE 6D 61			inc B
  6225
  6226 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 799
  6227
  6228 4327 EE 4C 63			inc VRAM
  6229 432A D0 03			sne
  6230 432C EE 4D 63			inc VRAM+1
  6231
  6232 				; optimize OK (test\tools\artur\artur.pas), line = 800
  6233
  6234 432F AD 6D 61			lda B
  6235 4332 29 0F			and #$0F
  6236 4334 D0 0E			jne l_18B1
  6237 4336 AD 4C 63			lda VRAM
  6238 4339 18 69 18			add #$18
  6239 433C 8D 4C 63			sta VRAM
  6240 433F 90 03			scc
  6241 4341 EE 4D 63			inc VRAM+1
  6242 4344			l_18B1
  6243
  6244 				; optimize OK (test\tools\artur\artur.pas), line = 801
  6245
  6246 4344 AD 6D 61			lda B
  6247 4347 D0 CE			jne l_188D
  6248
  6249 				; optimize OK (test\tools\artur\artur.pas), line = 803
  6250
  6251 4349 AD AA 61			lda BRUSH
  6252 434C 8D 4E 63			sta CBRUSH
  6253
  6254 				; optimize OK (test\tools\artur\artur.pas), line = 804
  6255
  6256 434F 29 0F			and #$0F
  6257 4351 18 69 0C			add #$0C
  6258 4354 8D 4F 63			sta CX
  6259
  6260 				; optimize OK (test\tools\artur\artur.pas), line = 805
  6261
  6262 4357 AD 4E 63			lda CBRUSH
  6263 435A 4A				lsr @
  6264 435B 4A				lsr @
  6265 435C 4A				lsr @
  6266 435D 4A				lsr @
  6267 435E 18 69 05			add #$05
  6268 4361 8D 50 63			sta CY
  6269
  6270 				; optimize OK (test\tools\artur\artur.pas), line = 806
  6271
  6272 4364 AD 4F 63			lda CX
  6273 4367 8D 18 63			sta XORCURSOR.X
  6274 436A AD 50 63			lda CY
  6275 436D 8D 19 63			sta XORCURSOR.Y
  6276 4370 20 5F 3A			jsr XORCURSOR
  6277
  6278 				; optimize OK (test\tools\artur\artur.pas), line = 808
  6279
  6280 4373 A9 00			lda #$00
  6281 4375 8D 53 63			sta DONE
  6282
  6283 				; --- RepeatUntilProlog
  6284 4378			l_18F8
  6285
  6286 				; optimize FAIL ('READJOYSTICK', test\tools\artur\artur.pas), line = 811
  6287
  6288 4378 20 83 32			jsr READJOYSTICK
  6289
  6290 				; optimize OK (test\tools\artur\artur.pas), line = 813
  6291
  6292 437B AD AB 61			lda KEYREPEATCOUNTER
  6293 437E F0 03 4C D9 44		jne l_190B
  6294
  6295 				; optimize FAIL ('CRT.KEYPRESSED', test\tools\artur\artur.pas), line = 814
  6296
  6297 4383 20 B2 2A			jsr CRT.KEYPRESSED
  6298 4386 AD E7 58			lda CRT.KEYPRESSED.RESULT
  6299 4389 D0 03 4C 82 44		jeq l_1916
  6300
  6301 				; optimize FAIL ('CRT.READKEY', test\tools\artur\artur.pas), line = 815
  6302
  6303 438E 20 AB 2A			jsr CRT.READKEY
  6304 4391 AD E6 58			lda CRT.READKEY.RESULT
  6305 4394 8D 99 61			sta C
  6306
  6307 				; optimize OK (test\tools\artur\artur.pas), line = 816
  6308
  6309 4397 C9 1B			cmp #$1B
  6310 4399 D0 05			jne l_192D
  6311 439B A9 01			lda #$01
  6312 439D 8D 53 63			sta DONE
  6313 43A0			l_192D
  6314
  6315 				; optimize OK (test\tools\artur\artur.pas), line = 817
  6316
  6317 43A0 AD 09 D2			lda ATARI.KBCODE
  6318 43A3 C9 0C			cmp #$0C
  6319 43A5 F0 04			jeq l_1952x
  6320 43A7 C9 3C			cmp #$3C
  6321 43A9 D0 1B			jne l_1952
  6322 43AB			l_1952x
  6323
  6324 				; optimize OK (test\tools\artur\artur.pas), line = 818
  6325
  6326 43AB AD 4E 63			lda CBRUSH
  6327 43AE 10 05			jpl l_1965
  6328 43B0 A9 01			lda #$01
  6329 43B2 8D B9 61			sta INVERT
  6330 43B5			l_1965
  6331
  6332 				; optimize OK (test\tools\artur\artur.pas), line = 819
  6333
  6334 43B5 AD 4E 63			lda CBRUSH
  6335 43B8 20 EE 41			jsr USEBRUSH
  6336
  6337 				; optimize OK (test\tools\artur\artur.pas), line = 820
  6338
  6339 43BB AD 4E 63			lda CBRUSH
  6340 43BE 8D 4B 63			sta RESULT
  6341
  6342 				; optimize OK (test\tools\artur\artur.pas), line = 821
  6343
  6344 43C1 A9 01			lda #$01
  6345 43C3 8D 53 63			sta DONE
  6346 43C6			l_1952
  6347
  6348 				; optimize OK (test\tools\artur\artur.pas), line = 823
  6349
  6350 43C6 A9 00			lda #$00
  6351 43C8 8D 52 63			sta MOVED
  6352
  6353 				; optimize OK (test\tools\artur\artur.pas), line = 824
  6354
  6355 43CB AD 09 D2			lda ATARI.KBCODE
  6356 43CE C9 21			cmp #$21
  6357 43D0 D0 0B			jne l_1992
  6358
  6359 				; optimize OK (test\tools\artur\artur.pas), line = 825
  6360
  6361 43D2 AD 4E 63			lda CBRUSH
  6362 43D5 20 EE 41			jsr USEBRUSH
  6363
  6364 				; optimize OK (test\tools\artur\artur.pas), line = 826
  6365
  6366 43D8 A9 01			lda #$01
  6367 43DA 8D 52 63			sta MOVED
  6368 43DD			l_1992
  6369
  6370 				; optimize OK (test\tools\artur\artur.pas), line = 828
  6371
  6372 43DD A9 80			lda #$80
  6373 43DF 8D 51 63			sta KOFFSET
  6374
  6375 				; optimize OK (test\tools\artur\artur.pas), line = 829
  6376
  6377 43E2 AD 6B 61			lda CONFIG.ARROWSRAW
  6378 43E5 F0 05			jeq l_19AD
  6379 43E7 A9 00			lda #$00
  6380 43E9 8D 51 63			sta KOFFSET
  6381 43EC			l_19AD
  6382
  6383 				; optimize OK (test\tools\artur\artur.pas), line = 830
  6384
  6385 43EC A9 06			lda #$06
  6386 43EE 18 6D 51 63			add KOFFSET
  6387 43F2 CD 09 D2			cmp ATARI.KBCODE
  6388 43F5 D0 08			jne l_19CC
  6389
  6390 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 831
  6391
  6392 43F7 CE 4E 63			dec CBRUSH
  6393
  6394 				; optimize OK (test\tools\artur\artur.pas), line = 832
  6395
  6396 43FA A9 01			lda #$01
  6397 43FC 8D 52 63			sta MOVED
  6398 43FF			l_19CC
  6399
  6400 				; optimize OK (test\tools\artur\artur.pas), line = 834
  6401
  6402 43FF A9 07			lda #$07
  6403 4401 18 6D 51 63			add KOFFSET
  6404 4405 CD 09 D2			cmp ATARI.KBCODE
  6405 4408 D0 08			jne l_19EF
  6406
  6407 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 835
  6408
  6409 440A EE 4E 63			inc CBRUSH
  6410
  6411 				; optimize OK (test\tools\artur\artur.pas), line = 836
  6412
  6413 440D A9 01			lda #$01
  6414 440F 8D 52 63			sta MOVED
  6415 4412			l_19EF
  6416
  6417 				; optimize OK (test\tools\artur\artur.pas), line = 838
  6418
  6419 4412 A9 0E			lda #$0E
  6420 4414 18 6D 51 63			add KOFFSET
  6421 4418 CD 09 D2			cmp ATARI.KBCODE
  6422 441B D0 0E			jne l_1A12
  6423
  6424 				; optimize OK (test\tools\artur\artur.pas), line = 839
  6425
  6426 441D AD 4E 63			lda CBRUSH
  6427 4420 38 E9 10			sub #$10
  6428 4423 8D 4E 63			sta CBRUSH
  6429
  6430 				; optimize OK (test\tools\artur\artur.pas), line = 840
  6431
  6432 4426 A9 01			lda #$01
  6433 4428 8D 52 63			sta MOVED
  6434 442B			l_1A12
  6435
  6436 				; optimize OK (test\tools\artur\artur.pas), line = 842
  6437
  6438 442B A9 0F			lda #$0F
  6439 442D 18 6D 51 63			add KOFFSET
  6440 4431 CD 09 D2			cmp ATARI.KBCODE
  6441 4434 D0 0E			jne l_1A32
  6442
  6443 				; optimize OK (test\tools\artur\artur.pas), line = 843
  6444
  6445 4436 AD 4E 63			lda CBRUSH
  6446 4439 18 69 10			add #$10
  6447 443C 8D 4E 63			sta CBRUSH
  6448
  6449 				; optimize OK (test\tools\artur\artur.pas), line = 844
  6450
  6451 443F A9 01			lda #$01
  6452 4441 8D 52 63			sta MOVED
  6453 4444			l_1A32
  6454
  6455 				; optimize OK (test\tools\artur\artur.pas), line = 846
  6456
  6457 4444 AD 52 63			lda MOVED
  6458 4447 F0 06			jeq l_1A46
  6459
  6460 				; optimize FAIL ('UPDATEBRUSHCURSOR', test\tools\artur\artur.pas), line = 847
  6461
  6462 4449 20 82 42			jsr UPDATEBRUSHCURSOR
  6463 444C 4C 7D 44			jmp l_1A51
  6464 444F			l_1A46
  6465
  6466 				; optimize OK (test\tools\artur\artur.pas), line = 848
  6467
  6468 444F AC A7 58 84 82 AC + 	mwy KEYCHARS :bp2
  6469 4459 AC 09 D2			ldy ATARI.KBCODE
  6470 445C B1 82			lda (:bp2),y
  6471 445E 20 E2 2C			jsr B_CRT.ATASCII2ANTIC_0541
  6472 4461 AD 3A 5A			lda B_CRT.ATASCII2ANTIC_0541.RESULT
  6473 4464 8D 6D 61			sta B
  6474
  6475 				; optimize OK (test\tools\artur\artur.pas), line = 849
  6476
  6477 4467 AD B9 61			lda INVERT
  6478 446A F0 08			jeq l_1A67
  6479 446C AD 6D 61			lda B
  6480 446F 49 80			eor #$80
  6481 4471 8D 6D 61			sta B
  6482 4474			l_1A67
  6483
  6484 				; optimize OK (test\tools\artur\artur.pas), line = 850
  6485
  6486 4474 AD 6D 61			lda B
  6487 4477 8D AA 61			sta BRUSH
  6488
  6489 				; optimize FAIL ('SHOWSTATUS', test\tools\artur\artur.pas), line = 851
  6490
  6491 447A 20 DB 37			jsr SHOWSTATUS
  6492 447D			l_1A51
  6493
  6494 				; optimize OK (test\tools\artur\artur.pas), line = 853
  6495
  6496 447D A9 0A			lda #$0A
  6497 447F 8D AB 61			sta KEYREPEATCOUNTER
  6498 4482			l_1916
  6499
  6500 				; optimize OK (test\tools\artur\artur.pas), line = 856
  6501
  6502 4482 AD A7 61			lda JOYX
  6503 4485 D0 05			jne l_1A9Fx
  6504 4487 AD A8 61			lda JOYY
  6505 448A F0 2E			jeq l_1A9F
  6506 448C			l_1A9Fx
  6507
  6508 				; optimize OK (test\tools\artur\artur.pas), line = 857
  6509
  6510 448C A9 10			lda #$10
  6511 448E 85 8C			sta :ecx
  6512 4490 85 90			sta :ztmp8
  6513 4492 AD A8 61			lda JOYY
  6514 4495 85 84			sta :eax
  6515 4497 85 92			sta :ztmp10
  6516 					.ifdef fmulinit
  6517 					fmulu_8
  6518 					els
  6519 4499 20 21 28			imulCL
  6520 					eif
  6521 449C A5 84			lda :eax
  6522 449E 8D A8 61			sta JOYY
  6523
  6524 				; optimize OK (test\tools\artur\artur.pas), line = 858
  6525
  6526 44A1 AD 4E 63			lda CBRUSH
  6527 44A4 18 6D A8 61			add JOYY
  6528 44A8 8D 4E 63			sta CBRUSH
  6529
  6530 				; optimize OK (test\tools\artur\artur.pas), line = 859
  6531
  6532 44AB 18 6D A7 61			add JOYX
  6533 44AF 8D 4E 63			sta CBRUSH
  6534
  6535 				; optimize FAIL ('UPDATEBRUSHCURSOR', test\tools\artur\artur.pas), line = 860
  6536
  6537 44B2 20 82 42			jsr UPDATEBRUSHCURSOR
  6538
  6539 				; optimize OK (test\tools\artur\artur.pas), line = 861
  6540
  6541 44B5 A9 04			lda #$04
  6542 44B7 8D AB 61			sta KEYREPEATCOUNTER
  6543 44BA			l_1A9F
  6544
  6545 				; optimize OK (test\tools\artur\artur.pas), line = 863
  6546
  6547 44BA AD A9 61			lda JOYFIRE
  6548 44BD D0 1A			jne l_1ADB
  6549
  6550 				; optimize OK (test\tools\artur\artur.pas), line = 864
  6551
  6552 44BF AD 4E 63			lda CBRUSH
  6553 44C2 10 05			jpl l_1AEE
  6554 44C4 A9 01			lda #$01
  6555 44C6 8D B9 61			sta INVERT
  6556 44C9			l_1AEE
  6557
  6558 				; optimize OK (test\tools\artur\artur.pas), line = 865
  6559
  6560 44C9 AD 4E 63			lda CBRUSH
  6561 44CC 8D 4B 63			sta RESULT
  6562
  6563 				; optimize OK (test\tools\artur\artur.pas), line = 866
  6564
  6565 44CF A9 14			lda #$14
  6566 44D1 8D AB 61			sta KEYREPEATCOUNTER
  6567
  6568 				; optimize OK (test\tools\artur\artur.pas), line = 867
  6569
  6570 44D4 A9 01			lda #$01
  6571 44D6 8D 53 63			sta DONE
  6572 44D9			l_1ADB
  6573 44D9			l_190B
  6574
  6575 				; optimize OK (test\tools\artur\artur.pas), line = 873
  6576
  6577 44D9 AD 53 63			lda DONE
  6578 44DC D0 03 4C 78 43		jeq l_18F8
  6579
  6580 				; optimize OK (test\tools\artur\artur.pas), line = 875
  6581
  6582 44E1 AD 4F 63			lda CX
  6583 44E4 8D 18 63			sta XORCURSOR.X
  6584 44E7 AD 50 63			lda CY
  6585 44EA 8D 19 63			sta XORCURSOR.Y
  6586 44ED 20 5F 3A			jsr XORCURSOR
  6587
  6588 				; optimize FAIL ('CLOSEMODAL', test\tools\artur\artur.pas), line = 876
  6589
  6590 44F0 20 2B 41			jsr CLOSEMODAL
  6591 44F3			@exit
  6592
  6593 				; ------------------------------------------------------------
  6594
  6595 = 634B			RESULT	= DATAORIGIN+$0A9B
  6596 = 000B			BRS_X	= $0B
  6597 = 0002			BRS_Y	= $02
  6598 = 0012			BRS_W	= $12
  6599 = 0014			BRS_H	= $14
  6600 = 634C			VRAM	= DATAORIGIN+$0A9C
  6601 = 634E			CBRUSH	= DATAORIGIN+$0A9E
  6602 = 634F			CX	= DATAORIGIN+$0A9F
  6603 = 6350			CY	= DATAORIGIN+$0AA0
  6604 = 6351			KOFFSET	= DATAORIGIN+$0AA1
  6605 = 6352			MOVED	= DATAORIGIN+$0AA2
  6606 = 6353			DONE	= DATAORIGIN+$0AA3
  6607
  6608 = 634C			@VarData	= VRAM
  6609 = 0008			@VarDataSize	= 8
  6610
  6611 44F3 60				rts						; ret
  6612 				.endl
  6613
  6614 44F4			.local	SORTPOINTSANDGETCORNER				; FUNCTION
  6615
  6616 				; optimize OK (test\tools\artur\artur.pas), line = 886
  6617
  6618 44F4 AD BE 61			lda P2X
  6619 44F7 CD BD 61			cmp P1X
  6620 44FA B0 17			jcs l_1B2E
  6621 44FC A9 BD			lda <P1X
  6622 44FE 8D D8 62			sta SWAP.A
  6623 4501 A9 61			lda >P1X
  6624 4503 8D D9 62			sta SWAP.A+1
  6625 4506 A9 BE			lda <P2X
  6626 4508 8D DA 62			sta SWAP.B
  6627 450B A9 61			lda >P2X
  6628 450D 8D DB 62			sta SWAP.B+1
  6629 4510 20 4C 31			jsr SWAP
  6630 4513			l_1B2E
  6631
  6632 				; optimize OK (test\tools\artur\artur.pas), line = 887
  6633
  6634 4513 AD C0 61			lda P2Y
  6635 4516 CD BF 61			cmp P1Y
  6636 4519 B0 17			jcs l_1B48
  6637 451B A9 BF			lda <P1Y
  6638 451D 8D D8 62			sta SWAP.A
  6639 4520 A9 61			lda >P1Y
  6640 4522 8D D9 62			sta SWAP.A+1
  6641 4525 A9 C0			lda <P2Y
  6642 4527 8D DA 62			sta SWAP.B
  6643 452A A9 61			lda >P2Y
  6644 452C 8D DB 62			sta SWAP.B+1
  6645 452F 20 4C 31			jsr SWAP
  6646 4532			l_1B48
  6647
  6648 				; optimize OK (test\tools\artur\artur.pas), line = 888
  6649
  6650 4532 AD BF 61			lda P1Y
  6651 4535 0A				asl @
  6652 4536 A8				tay
  6653 4537 B9 A8 62			lda adr.LINEOFFSET,y
  6654 453A 18 6D BD 61			add P1X
  6655 453E 8D 54 63			sta RESULT
  6656 4541 B9 A9 62			lda adr.LINEOFFSET+1,y
  6657 4544 69 7C			adc #$7C
  6658 4546 8D 55 63			sta RESULT+1
  6659 4549			@exit
  6660
  6661 				; ------------------------------------------------------------
  6662
  6663 = 6354			RESULT	= DATAORIGIN+$0AA4
  6664 4549 60				rts						; ret
  6665 				.endl
  6666
  6667 454A			.local	INVERTBLOCK					; PROCEDURE
  6668
  6669 				; optimize OK (test\tools\artur\artur.pas), line = 895
  6670
  6671 454A A9 01			lda #$01
  6672 454C 20 34 35			jsr STOREUNDOACTION
  6673
  6674 				; optimize FAIL ('SORTPOINTSANDGETCORNER', test\tools\artur\artur.pas), line = 896
  6675
  6676 454F 20 F4 44			jsr SORTPOINTSANDGETCORNER
  6677 4552 E8				inx
  6678 4553 AD 54 63			lda SORTPOINTSANDGETCORNER.RESULT
  6679 4556 38 ED BD 61			sub P1X
  6680 455A 8D 58 63			sta VRAM
  6681 455D AD 55 63			lda SORTPOINTSANDGETCORNER.RESULT+1
  6682 4560 E9 00			sbc #$00
  6683 4562 8D 59 63			sta VRAM+1
  6684 4565 CA				dex
  6685
  6686 				; optimize OK (test\tools\artur\artur.pas), line = 897
  6687
  6688 4566 AD BF 61			lda P1Y
  6689 4569 8D 57 63			sta Y
  6690
  6691 456C			l_1B7D
  6692 				; --- ForToDoCondition
  6693 456C AD 57 63			lda Y
  6694 456F CD C0 61			cmp P2Y
  6695 4572 90 02			scc
  6696 4574 D0 3B			jne l_1B8B
  6697
  6698 				; optimize OK (test\tools\artur\artur.pas), line = 898
  6699
  6700 4576 AD BD 61			lda P1X
  6701 4579 8D 56 63			sta X
  6702
  6703 457C			l_1B98
  6704 				; --- ForToDoCondition
  6705 457C AD 56 63			lda X
  6706 457F CD BE 61			cmp P2X
  6707 4582 90 02			scc
  6708 4584 D0 18			jne l_1BA6
  6709
  6710 				; optimize OK (test\tools\artur\artur.pas), line = 899
  6711
  6712 4586 AC 58 63 84 82 AC + 	mwy VRAM :bp2
  6713 4590 AC 56 63			ldy X
  6714 4593 B1 82			lda (:bp2),y
  6715 4595 49 80			eor #$80
  6716 4597 91 82			sta (:bp2),y
  6717
  6718 				; --- ForToDoEpilog
  6719 4599 EE 56 63			inc X
  6720 459C D0 DE			jne l_1B98
  6721 459E			l_1BA6
  6722
  6723 				; optimize OK (test\tools\artur\artur.pas), line = 901
  6724
  6725 459E AD 58 63			lda VRAM
  6726 45A1 18 69 28			add #$28
  6727 45A4 8D 58 63			sta VRAM
  6728 45A7 90 03			scc
  6729 45A9 EE 59 63			inc VRAM+1
  6730
  6731 				; --- ForToDoEpilog
  6732 45AC EE 57 63			inc Y
  6733 45AF D0 BB			jne l_1B7D
  6734 45B1			l_1B8B
  6735
  6736 				; ------------------------------------------------------------
  6737
  6738 = 6356			X	= DATAORIGIN+$0AA6
  6739 = 6357			Y	= DATAORIGIN+$0AA7
  6740 = 6358			VRAM	= DATAORIGIN+$0AA8
  6741
  6742 = 6356			@VarData	= X
  6743 = 0004			@VarDataSize	= 4
  6744
  6745 45B1			@exit
  6746 					.ifdef @new
  6747 					lda <@VarData
  6748 					sta :ztmp
  6749 					lda >@VarData
  6750 					ldy #@VarDataSize-1
  6751 					jmp @FreeMem
  6752 					els
  6753 45B1 60				rts						; ret
  6754 					eif
  6755 				.endl
  6756
  6757 45B2			.local	CALCULATEWIDTHANDHEIGHT				; PROCEDURE
  6758
  6759 				; optimize OK (test\tools\artur\artur.pas), line = 907
  6760
  6761 45B2 AD BE 61			lda P2X
  6762 45B5 38 ED BD 61			sub P1X
  6763 45B9 18 69 01			add #$01
  6764 45BC 8D 6F 61			sta W
  6765
  6766 				; optimize OK (test\tools\artur\artur.pas), line = 908
  6767
  6768 45BF AD C0 61			lda P2Y
  6769 45C2 38 ED BF 61			sub P1Y
  6770 45C6 18 69 01			add #$01
  6771 45C9 8D 6E 61			sta H
  6772 45CC			@exit
  6773 					.ifdef @new
  6774 					lda <@VarData
  6775 					sta :ztmp
  6776 					lda >@VarData
  6777 					ldy #@VarDataSize-1
  6778 					jmp @FreeMem
  6779 					els
  6780 45CC 60				rts						; ret
  6781 					eif
  6782 				.endl
  6783
  6784 45CD			.local	DRAWBLOCK					; PROCEDURE
  6785
  6786 				; optimize OK (test\tools\artur\artur.pas), line = 914
  6787
  6788 45CD A9 01			lda #$01
  6789 45CF 20 34 35			jsr STOREUNDOACTION
  6790
  6791 				; optimize FAIL ('SORTPOINTSANDGETCORNER', test\tools\artur\artur.pas), line = 915
  6792
  6793 45D2 20 F4 44			jsr SORTPOINTSANDGETCORNER
  6794 45D5 AD 54 63			lda SORTPOINTSANDGETCORNER.RESULT
  6795 45D8 8D 5A 63			sta VRAM
  6796 45DB AD 55 63			lda SORTPOINTSANDGETCORNER.RESULT+1
  6797 45DE 8D 5B 63			sta VRAM+1
  6798
  6799 				; optimize FAIL ('CALCULATEWIDTHANDHEIGHT', test\tools\artur\artur.pas), line = 916
  6800
  6801 45E1 20 B2 45			jsr CALCULATEWIDTHANDHEIGHT
  6802
  6803 				; optimize OK (test\tools\artur\artur.pas), line = 917
  6804
  6805 45E4 AD BD 61			lda P1X
  6806 45E7 8D 11 63			sta DRAWRECT.X
  6807 45EA AD BF 61			lda P1Y
  6808 45ED 8D 12 63			sta DRAWRECT.Y
  6809 45F0 AD 6F 61			lda W
  6810 45F3 8D 13 63			sta DRAWRECT.W
  6811 45F6 AD 6E 61			lda H
  6812 45F9 8D 14 63			sta DRAWRECT.H
  6813 45FC AD AA 61			lda BRUSH
  6814 45FF 8D 15 63			sta DRAWRECT.C
  6815 4602 20 27 36			jsr DRAWRECT
  6816
  6817 				; ------------------------------------------------------------
  6818
  6819 = 635A			VRAM	= DATAORIGIN+$0AAA
  6820
  6821 = 635A			@VarData	= VRAM
  6822 = 0002			@VarDataSize	= 2
  6823
  6824 4605			@exit
  6825 					.ifdef @new
  6826 					lda <@VarData
  6827 					sta :ztmp
  6828 					lda >@VarData
  6829 					ldy #@VarDataSize-1
  6830 					jmp @FreeMem
  6831 					els
  6832 4605 60				rts						; ret
  6833 					eif
  6834 				.endl
  6835
  6836 4606			.local	COPYBLOCK					; PROCEDURE
  6837 4606 8D 5C 63			sta MOVEBLOCK
  6838
  6839 				; optimize OK (test\tools\artur\artur.pas), line = 923
  6840
  6841 4609 A9 01			lda #$01
  6842 460B 20 34 35			jsr STOREUNDOACTION
  6843
  6844 				; optimize FAIL ('SORTPOINTSANDGETCORNER', test\tools\artur\artur.pas), line = 924
  6845
  6846 460E 20 F4 44			jsr SORTPOINTSANDGETCORNER
  6847 4611 E8				inx
  6848 4612 AD 54 63			lda SORTPOINTSANDGETCORNER.RESULT
  6849 4615 38 E9 00			sub #$00
  6850 4618 95 94			sta :STACKORIGIN,x
  6851 461A AD 55 63			lda SORTPOINTSANDGETCORNER.RESULT+1
  6852 461D E9 7C			sbc #$7C
  6853 461F 95 A4			sta :STACKORIGIN+STACKWIDTH,x
  6854 4621 E8				inx
  6855 4622 B5 93			lda :STACKORIGIN-1,x
  6856 4624 8D 5F 63			sta BRAM
  6857 4627 B5 A3			lda :STACKORIGIN-1+STACKWIDTH,x
  6858 4629 18 69 78			add #$78
  6859 462C 8D 60 63			sta BRAM+1
  6860 462F CA				dex
  6861 4630 CA				dex
  6862
  6863 				; optimize OK (test\tools\artur\artur.pas), line = 925
  6864
  6865 4631 AD B4 61			lda CURSOR
  6866 4634 8D 5D 63			sta VRAM
  6867 4637 A9 7C			lda #$7C
  6868 4639 18 6D B5 61			add CURSOR+1
  6869 463D 8D 5E 63			sta VRAM+1
  6870
  6871 				; optimize FAIL ('CALCULATEWIDTHANDHEIGHT', test\tools\artur\artur.pas), line = 926
  6872
  6873 4640 20 B2 45			jsr CALCULATEWIDTHANDHEIGHT
  6874
  6875 				; optimize OK (test\tools\artur\artur.pas), line = 927
  6876
  6877 4643 AD B2 61			lda CURSORX
  6878 4646 18 6D 6F 61			add W
  6879 464A C9 28			cmp #$28
  6880 464C 90 09			jcc l_1C3A
  6881 464E A9 28			lda #$28
  6882 4650 38 ED B2 61			sub CURSORX
  6883 4654 8D 6F 61			sta W
  6884 4657			l_1C3A
  6885
  6886 				; optimize OK (test\tools\artur\artur.pas), line = 928
  6887
  6888 4657 AD B3 61			lda CURSORY
  6889 465A 18 6D 6E 61			add H
  6890 465E C9 18			cmp #$18
  6891 4660 90 09			jcc l_1C5F
  6892 4662 A9 18			lda #$18
  6893 4664 38 ED B3 61			sub CURSORY
  6894 4668 8D 6E 61			sta H
  6895 466B			l_1C5F
  6896
  6897 				; optimize FAIL ('STOREEDITINBUFFER', test\tools\artur\artur.pas), line = 929
  6898
  6899 466B 20 EF 35			jsr STOREEDITINBUFFER
  6900
  6901 				; optimize OK (test\tools\artur\artur.pas), line = 930
  6902
  6903 466E AD 5C 63			lda MOVEBLOCK
  6904 4671 F0 70			jeq l_1C79
  6905
  6906 				; optimize OK (test\tools\artur\artur.pas), line = 931
  6907
  6908 4673 AD BD 61			lda P1X
  6909 4676 8D 11 63			sta DRAWRECT.X
  6910 4679 AD BF 61			lda P1Y
  6911 467C 8D 12 63			sta DRAWRECT.Y
  6912 467F AD 6F 61			lda W
  6913 4682 8D 13 63			sta DRAWRECT.W
  6914 4685 AD 6E 61			lda H
  6915 4688 8D 14 63			sta DRAWRECT.H
  6916 468B A9 00			lda #$00
  6917 468D 8D 15 63			sta DRAWRECT.C
  6918 4690 20 27 36			jsr DRAWRECT
  6919
  6920 				; optimize OK (test\tools\artur\artur.pas), line = 932
  6921
  6922 4693 AD B2 61			lda CURSORX
  6923 4696 8D BD 61			sta P1X
  6924
  6925 				; optimize OK (test\tools\artur\artur.pas), line = 933
  6926
  6927 4699 AD B3 61			lda CURSORY
  6928 469C 8D BF 61			sta P1Y
  6929
  6930 				; optimize OK (test\tools\artur\artur.pas), line = 934
  6931
  6932 469F AD B2 61			lda CURSORX
  6933 46A2 18 6D 6F 61			add W
  6934 46A6 38 E9 01			sub #$01
  6935 46A9 8D BE 61			sta P2X
  6936
  6937 				; optimize OK (test\tools\artur\artur.pas), line = 935
  6938
  6939 46AC AD B3 61			lda CURSORY
  6940 46AF 18 6D 6E 61			add H
  6941 46B3 38 E9 01			sub #$01
  6942 46B6 8D C0 61			sta P2Y
  6943
  6944 				; optimize OK (test\tools\artur\artur.pas), line = 936
  6945
  6946 46B9 AD BD 61			lda P1X
  6947 46BC 8D 1E 63			sta DRAWSELECTION.PC1X
  6948 46BF AD BF 61			lda P1Y
  6949 46C2 8D 1F 63			sta DRAWSELECTION.PC1Y
  6950 46C5 AD BE 61			lda P2X
  6951 46C8 8D 20 63			sta DRAWSELECTION.PC2X
  6952 46CB AD C0 61			lda P2Y
  6953 46CE 8D 21 63			sta DRAWSELECTION.PC2Y
  6954 46D1 20 13 3B			jsr DRAWSELECTION
  6955
  6956 				; optimize OK (test\tools\artur\artur.pas), line = 937
  6957
  6958 46D4 AD B2 61			lda CURSORX
  6959 46D7 8D 18 63			sta XORCURSOR.X
  6960 46DA AD B3 61			lda CURSORY
  6961 46DD 8D 19 63			sta XORCURSOR.Y
  6962 46E0 20 5F 3A			jsr XORCURSOR
  6963 46E3			l_1C79
  6964
  6965 				; --- RepeatUntilProlog
  6966 46E3			l_1CCB
  6967
  6968 				; optimize OK (test\tools\artur\artur.pas), line = 940
  6969
  6970 46E3 AD 5F 63			lda BRAM
  6971 46E6 85 88			sta SYSTEM.MOVE_0458.SOURCE
  6972 46E8 AD 60 63			lda BRAM+1
  6973 46EB 85 89			sta SYSTEM.MOVE_0458.SOURCE+1
  6974 46ED AD 5D 63			lda VRAM
  6975 46F0 85 8C			sta SYSTEM.MOVE_0458.DEST
  6976 46F2 AD 5E 63			lda VRAM+1
  6977 46F5 85 8D			sta SYSTEM.MOVE_0458.DEST+1
  6978 46F7 AD 6F 61			lda W
  6979 46FA 85 84			sta SYSTEM.MOVE_0458.COUNT
  6980 46FC A9 00			lda #$00
  6981 46FE 85 85			sta SYSTEM.MOVE_0458.COUNT+1
  6982 4700				.local +MAIN.SYSTEM.MOVE_0458
  6983 4700				m@INLINE
Macro: MAIN.SYSTEM.MOVE_0458.M@INLINE [Source: artur.a65]
     4 4700 20 74 27			jsr @move
Source: artur.a65
  6984 					.endl
  6985
  6986 				; optimize OK (test\tools\artur\artur.pas), line = 941
  6987
  6988 4703 AD 5D 63			lda VRAM
  6989 4706 18 69 28			add #$28
  6990 4709 8D 5D 63			sta VRAM
  6991 470C 90 03			scc
  6992 470E EE 5E 63			inc VRAM+1
  6993
  6994 				; optimize OK (test\tools\artur\artur.pas), line = 942
  6995
  6996 4711 AD 5F 63			lda BRAM
  6997 4714 18 69 28			add #$28
  6998 4717 8D 5F 63			sta BRAM
  6999 471A 90 03			scc
  7000 471C EE 60 63			inc BRAM+1
  7001
  7002 				; optimize OK (test\tools\artur\artur.pas), line = 943
  7003
  7004 471F AD 5E 63			lda VRAM+1
  7005 4722 C9 7F			cmp #$7F
  7006 4724 D0 05			bne @+
  7007 4726 AD 5D 63			lda VRAM
  7008 4729 C9 C0			cmp #$C0
  7009 				@
  7010 472B 90 11			jcc l_1CE6
  7011 472D AD 5D 63			lda VRAM
  7012 4730 38 E9 C0			sub #$C0
  7013 4733 8D 5D 63			sta VRAM
  7014 4736 AD 5E 63			lda VRAM+1
  7015 4739 E9 03			sbc #$03
  7016 473B 8D 5E 63			sta VRAM+1
  7017 473E			l_1CE6
  7018
  7019 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 944
  7020
  7021 473E CE 6E 61			dec H
  7022
  7023 				; optimize OK (test\tools\artur\artur.pas), line = 945
  7024
  7025 4741 D0 A0			jne l_1CCB
  7026
  7027 				; ------------------------------------------------------------
  7028
  7029 = 635C			MOVEBLOCK	= DATAORIGIN+$0AAC
  7030 = 635D			VRAM	= DATAORIGIN+$0AAD
  7031 = 635F			BRAM	= DATAORIGIN+$0AAF
  7032
  7033 = 635C			@VarData	= MOVEBLOCK
  7034 = 0005			@VarDataSize	= 5
  7035
  7036 4743			@exit
  7037 					.ifdef @new
  7038 					lda <@VarData
  7039 					sta :ztmp
  7040 					lda >@VarData
  7041 					ldy #@VarDataSize-1
  7042 					jmp @FreeMem
  7043 					els
  7044 4743 60				rts						; ret
  7045 					eif
  7046 				.endl
  7047
  7048 4744			.local	DRAWFRAME					; PROCEDURE
  7049
  7050 				; optimize OK (test\tools\artur\artur.pas), line = 951
  7051
  7052 4744 A9 01			lda #$01
  7053 4746 20 34 35			jsr STOREUNDOACTION
  7054
  7055 				; optimize FAIL ('SORTPOINTSANDGETCORNER', test\tools\artur\artur.pas), line = 952
  7056
  7057 4749 20 F4 44			jsr SORTPOINTSANDGETCORNER
  7058 474C AD 54 63			lda SORTPOINTSANDGETCORNER.RESULT
  7059 474F 8D 61 63			sta VRAM
  7060 4752 AD 55 63			lda SORTPOINTSANDGETCORNER.RESULT+1
  7061 4755 8D 62 63			sta VRAM+1
  7062
  7063 				; optimize FAIL ('CALCULATEWIDTHANDHEIGHT', test\tools\artur\artur.pas), line = 953
  7064
  7065 4758 20 B2 45			jsr CALCULATEWIDTHANDHEIGHT
  7066
  7067 				; optimize OK (test\tools\artur\artur.pas), line = 954
  7068
  7069 475B AD 61 63			lda VRAM
  7070 475E 85 88			sta SYSTEM.FILLBYTE.A
  7071 4760 AD 62 63			lda VRAM+1
  7072 4763 85 89			sta SYSTEM.FILLBYTE.A+1
  7073 4765 AD 6F 61			lda W
  7074 4768 85 8C			sta SYSTEM.FILLBYTE.COUNT
  7075 476A A9 00			lda #$00
  7076 476C 85 8D			sta SYSTEM.FILLBYTE.COUNT+1
  7077 476E AD AA 61			lda BRUSH
  7078 4771 85 84			sta SYSTEM.FILLBYTE.VALUE
  7079 4773				.local +MAIN.SYSTEM.FILLBYTE
  7080 4773				m@INLINE
Macro: MAIN.SYSTEM.FILLBYTE.M@INLINE [Source: artur.a65]
     4 4773 20 C9 27			jsr @fill
Source: artur.a65
  7081 					.endl
  7082
  7083 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 955
  7084
  7085 4776 CE 6E 61			dec H
  7086
  7087 				; --- WhileProlog
  7088 4779 4C B2 47			jmp l_1D15
  7089 477C			l_1D16
  7090
  7091 				; optimize OK (test\tools\artur\artur.pas), line = 957
  7092
  7093 477C AC 62 63			ldy VRAM+1
  7094 477F 84 81			sty :bp+1
  7095 4781 AC 61 63			ldy VRAM
  7096 4784 AD AA 61			lda BRUSH
  7097 4787 91 80			sta (:bp),y
  7098
  7099 				; optimize OK (test\tools\artur\artur.pas), line = 958
  7100
  7101 4789 98				tya
  7102 478A 18 6D 6F 61			add W
  7103 478E A8				tay
  7104 478F AD 62 63			lda VRAM+1
  7105 4792 69 00			adc #$00
  7106 4794 85 81			sta :bp+1
  7107 4796 98				tya
  7108 4797 D0 02			sne
  7109 4799 C6 81			dec :bp+1
  7110 479B 88				dey
  7111 479C AD AA 61			lda BRUSH
  7112 479F 91 80			sta (:bp),y
  7113
  7114 				; optimize OK (test\tools\artur\artur.pas), line = 959
  7115
  7116 47A1 AD 61 63			lda VRAM
  7117 47A4 18 69 28			add #$28
  7118 47A7 8D 61 63			sta VRAM
  7119 47AA 90 03			scc
  7120 47AC EE 62 63			inc VRAM+1
  7121
  7122 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 960
  7123
  7124 47AF CE 6E 61			dec H
  7125 47B2			l_1D15
  7126
  7127 				; optimize OK (test\tools\artur\artur.pas), line = 956
  7128
  7129 47B2 AD 6E 61			lda H
  7130 47B5 D0 C5			jne l_1D16
  7131
  7132 				; optimize OK (test\tools\artur\artur.pas), line = 962
  7133
  7134 47B7 AD 61 63			lda VRAM
  7135 47BA 85 88			sta SYSTEM.FILLBYTE.A
  7136 47BC AD 62 63			lda VRAM+1
  7137 47BF 85 89			sta SYSTEM.FILLBYTE.A+1
  7138 47C1 AD 6F 61			lda W
  7139 47C4 85 8C			sta SYSTEM.FILLBYTE.COUNT
  7140 47C6 A9 00			lda #$00
  7141 47C8 85 8D			sta SYSTEM.FILLBYTE.COUNT+1
  7142 47CA AD AA 61			lda BRUSH
  7143 47CD 85 84			sta SYSTEM.FILLBYTE.VALUE
  7144 47CF				.local +MAIN.SYSTEM.FILLBYTE
  7145 47CF				m@INLINE
Macro: MAIN.SYSTEM.FILLBYTE.M@INLINE [Source: artur.a65]
     4 47CF 20 C9 27			jsr @fill
Source: artur.a65
  7146 					.endl
  7147
  7148 				; ------------------------------------------------------------
  7149
  7150 = 6361			VRAM	= DATAORIGIN+$0AB1
  7151
  7152 = 6361			@VarData	= VRAM
  7153 = 0002			@VarDataSize	= 2
  7154
  7155 47D2			@exit
  7156 					.ifdef @new
  7157 					lda <@VarData
  7158 					sta :ztmp
  7159 					lda >@VarData
  7160 					ldy #@VarDataSize-1
  7161 					jmp @FreeMem
  7162 					els
  7163 47D2 60				rts						; ret
  7164 					eif
  7165 				.endl
  7166
  7167 47D3			.local	IOSTATUS					; PROCEDURE
  7168
  7169 47D3 A9 00 8D 70 61		mva #$00 adr.S
  7170
  7171 				; optimize OK (test\tools\artur\artur.pas), line = 973
  7172
  7173 47D8 AD B7 58			lda SYSTEM.IORESULT
  7174 47DB 8D 63 63			sta @CASETMP_0006
  7175 47DE C9 85			cmp #$85
  7176 47E0 D0 0E			jne l_1D55
  7177 				@
  7178 47E2 A0 F2			ldy #256-14
  7179 47E4 B9 3F 20 99 7E 60 + 	mva:rne CODEORIGIN+$0131+14-256,y adr.S+14-256,y+
  7180
  7181 47ED 4C 2B 48			jmp a_0006
  7182 47F0			l_1D55
  7183 47F0 C9 88			cmp #$88
  7184 47F2 F0 04			beq @+
  7185 47F4 C9 8B			cmp #$8B
  7186 47F6 D0 0E			jne l_1D60
  7187 				@
  7188 47F8 A0 F2			ldy #256-14
  7189 47FA B9 4E 20 99 7E 60 + 	mva:rne CODEORIGIN+$0140+14-256,y adr.S+14-256,y+
  7190
  7191 4803 4C 2B 48			jmp a_0006
  7192 4806			l_1D60
  7193 4806 C9 A8			cmp #$A8
  7194 4808 D0 0E			jne l_1D69
  7195 				@
  7196 480A A0 F2			ldy #256-14
  7197 480C B9 4E 20 99 7E 60 + 	mva:rne CODEORIGIN+$0140+14-256,y adr.S+14-256,y+
  7198
  7199 4815 4C 2B 48			jmp a_0006
  7200 4818			l_1D69
  7201 4818 C9 01			cmp #$01
  7202 481A F0 04			beq @+
  7203 481C C9 03			cmp #$03
  7204 481E D0 0B			jne l_1D74
  7205 				@
  7206 4820 A0 F7			ldy #256-9
  7207 4822 B9 58 20 99 79 60 + 	mva:rne CODEORIGIN+$014F+9-256,y adr.S+9-256,y+
  7208
  7209 482B			l_1D74
  7210 482B			a_0006
  7211
  7212 				; optimize FAIL ('B_CRT.CRT_WRITE_0604', test\tools\artur\artur.pas), line = 982
  7213
  7214 482B E8				inx
  7215 482C AD A1 58 95 94		mva S :STACKORIGIN,x
  7216 4831 AD A2 58 95 A4		mva S+1 :STACKORIGIN+STACKWIDTH,x
  7217 4836 20 29 2E			jsr B_CRT.CRT_WRITE_0604
  7218
  7219 				; optimize FAIL ('CRT.READKEY', test\tools\artur\artur.pas), line = 983
  7220
  7221 4839 20 AB 2A			jsr CRT.READKEY
  7222 483C AD E6 58 95 95		mva CRT.READKEY.RESULT :STACKORIGIN+1,x
  7223 				; CloseFile
  7224
  7225 4841 8A 48			txa:pha
  7226 4843 18				clc
  7227 					@closefile AFILE
  7227 				 LDY AFILE+1\ LDA AFILE\ JSR @CLOSEFILE
  7227 4844 AC A4 58		 LDY AFILE+1
  7227 4847 AD A3 58		 LDA AFILE
  7227 484A 20 70 25		 JSR @CLOSEFILE
  7228 484D 68 AA			pla:tax
  7229
  7230 				; ------------------------------------------------------------
  7231
  7232 = 6363			@CASETMP_0006	= DATAORIGIN+$0AB3
  7233
  7234 = 6363			@VarData	= @CASETMP_0006
  7235 = 0001			@VarDataSize	= 1
  7236
  7237 484F			@exit
  7238 					.ifdef @new
  7239 					lda <@VarData
  7240 					sta :ztmp
  7241 					lda >@VarData
  7242 					ldy #@VarDataSize-1
  7243 					jmp @FreeMem
  7244 					els
  7245 484F 60				rts						; ret
  7246 					eif
  7247 				.endl
  7248
  7249 4850			.local	LOADDATA					; PROCEDURE
  7250
  7251 				; AssignFile
  7252
  7253 				; optimize OK (test\tools\artur\artur.pas), line = 989
  7254
  7255 4850 AC A3 58 84 82 AC + 	mwy AFILE :bp2
  7256 485A A0 00			ldy #s@file.pfname
  7257 485C AD A1 58			lda S
  7258 485F 91 82			sta (:bp2),y
  7259 4861 C8				iny
  7260 4862 AD A2 58			lda S+1
  7261 4865 91 82			sta (:bp2),y
  7262 4867 A0 05			ldy #s@file.status
  7263 4869 A9 00			lda #$00
  7264 486B 91 82			sta (:bp2),y
  7265 				; Reset
  7266
  7267 				; optimize OK (test\tools\artur\artur.pas), line = 990
  7268
  7269 486D A0 02			ldy #s@file.record
  7270 486F A9 01			lda #$01
  7271 4871 91 82			sta (:bp2),y
  7272 4873 C8				iny
  7273 4874 A9 00			lda #$00
  7274 4876 91 82			sta (:bp2),y
  7275
  7276 4878 8A 48			txa:pha
  7277 487A 18				clc
  7278 					@openfile AFILE, MAIN.SYSTEM.FileMode
  7278 				 LDY AFILE+1\ LDA AFILE\ LDX MAIN.SYSTEM.FILEMODE\ JSR @OPENFILE
  7278 487B AC A4 58		 LDY AFILE+1
  7278 487E AD A3 58		 LDA AFILE
  7278 4881 AE B5 58		 LDX MAIN.SYSTEM.FILEMODE
  7278 4884 20 DA 24		 JSR @OPENFILE
  7279 4887 68 AA			pla:tax
  7280
  7281 				; BlockRead
  7282
  7283 				; optimize OK (test\tools\artur\artur.pas), line = 991
  7284
  7285 4889 AC A3 58 84 82 AC + 	mwy AFILE :bp2
  7286 4893 A0 06			ldy #s@file.buffer
  7287 4895 A9 64			lda <BUF
  7288 4897 91 82			sta (:bp2),y
  7289 4899 C8				iny
  7290 489A A9 63			lda >BUF
  7291 489C 91 82			sta (:bp2),y
  7292 489E A0 08			ldy #s@file.nrecord
  7293 48A0 AD 66 63			lda SIZE
  7294 48A3 91 82			sta (:bp2),y
  7295 48A5 C8				iny
  7296 48A6 AD 67 63			lda SIZE+1
  7297 48A9 91 82			sta (:bp2),y
  7298
  7299 48AB 8A 48			txa:pha
  7300 48AD 18				clc
  7301 					@readfile AFILE, #7
  7301 				 LDY AFILE+1\ LDA AFILE\ LDX# 7\ JSR @READFILE
  7301 48AE AC A4 58		 LDY AFILE+1
  7301 48B1 AD A3 58		 LDA AFILE
  7301 48B4 A2 07		 LDX# 7
  7301 48B6 20 9D 25		 JSR @READFILE
  7302 48B9 68 AA			pla:tax
  7303
  7304 				; optimize FAIL ('IOSTATUS', test\tools\artur\artur.pas), line = 992
  7305
  7306 48BB 20 D3 47			jsr IOSTATUS
  7307
  7308 				; ------------------------------------------------------------
  7309
  7310 = 6364			BUF	= DATAORIGIN+$0AB4
  7311 = 6366			SIZE	= DATAORIGIN+$0AB6
  7312
  7313 = 6364			@VarData	= BUF
  7314 = 0004			@VarDataSize	= 4
  7315
  7316 48BE			@exit
  7317 					.ifdef @new
  7318 					lda <@VarData
  7319 					sta :ztmp
  7320 					lda >@VarData
  7321 					ldy #@VarDataSize-1
  7322 					jmp @FreeMem
  7323 					els
  7324 48BE 60				rts						; ret
  7325 					eif
  7326 				.endl
  7327
  7328 48BF			.local	SAVEDATA					; PROCEDURE
  7329
  7330 				; AssignFile
  7331
  7332 				; optimize OK (test\tools\artur\artur.pas), line = 997
  7333
  7334 48BF AC A3 58 84 82 AC + 	mwy AFILE :bp2
  7335 48C9 A0 00			ldy #s@file.pfname
  7336 48CB AD A1 58			lda S
  7337 48CE 91 82			sta (:bp2),y
  7338 48D0 C8				iny
  7339 48D1 AD A2 58			lda S+1
  7340 48D4 91 82			sta (:bp2),y
  7341 48D6 A0 05			ldy #s@file.status
  7342 48D8 A9 00			lda #$00
  7343 48DA 91 82			sta (:bp2),y
  7344 				; Rewrite
  7345
  7346 				; optimize OK (test\tools\artur\artur.pas), line = 998
  7347
  7348 48DC A0 02			ldy #s@file.record
  7349 48DE A9 01			lda #$01
  7350 48E0 91 82			sta (:bp2),y
  7351 48E2 C8				iny
  7352 48E3 A9 00			lda #$00
  7353 48E5 91 82			sta (:bp2),y
  7354
  7355 48E7 8A 48			txa:pha
  7356 48E9 18				clc
  7357 					@openfile AFILE, #8
  7357 				 LDY AFILE+1\ LDA AFILE\ LDX# 8\ JSR @OPENFILE
  7357 48EA AC A4 58		 LDY AFILE+1
  7357 48ED AD A3 58		 LDA AFILE
  7357 48F0 A2 08		 LDX# 8
  7357 48F2 20 DA 24		 JSR @OPENFILE
  7358 48F5 68 AA			pla:tax
  7359
  7360 				; BlockWrite
  7361
  7362 				; optimize OK (test\tools\artur\artur.pas), line = 999
  7363
  7364 48F7 AC A3 58 84 82 AC + 	mwy AFILE :bp2
  7365 4901 A0 06			ldy #s@file.buffer
  7366 4903 A9 68			lda <BUF
  7367 4905 91 82			sta (:bp2),y
  7368 4907 C8				iny
  7369 4908 A9 63			lda >BUF
  7370 490A 91 82			sta (:bp2),y
  7371 490C A0 08			ldy #s@file.nrecord
  7372 490E AD 6A 63			lda SIZE
  7373 4911 91 82			sta (:bp2),y
  7374 4913 C8				iny
  7375 4914 AD 6B 63			lda SIZE+1
  7376 4917 91 82			sta (:bp2),y
  7377
  7378 4919 8A 48			txa:pha
  7379 491B 18				clc
  7380 					@readfile AFILE, #11
  7380 				 LDY AFILE+1\ LDA AFILE\ LDX# 11\ JSR @READFILE
  7380 491C AC A4 58		 LDY AFILE+1
  7380 491F AD A3 58		 LDA AFILE
  7380 4922 A2 0B		 LDX# 11
  7380 4924 20 9D 25		 JSR @READFILE
  7381 4927 68 AA			pla:tax
  7382
  7383 				; optimize FAIL ('IOSTATUS', test\tools\artur\artur.pas), line = 1000
  7384
  7385 4929 20 D3 47			jsr IOSTATUS
  7386
  7387 				; ------------------------------------------------------------
  7388
  7389 = 6368			BUF	= DATAORIGIN+$0AB8
  7390 = 636A			SIZE	= DATAORIGIN+$0ABA
  7391
  7392 = 6368			@VarData	= BUF
  7393 = 0004			@VarDataSize	= 4
  7394
  7395 492C			@exit
  7396 					.ifdef @new
  7397 					lda <@VarData
  7398 					sta :ztmp
  7399 					lda >@VarData
  7400 					ldy #@VarDataSize-1
  7401 					jmp @FreeMem
  7402 					els
  7403 492C 60				rts						; ret
  7404 					eif
  7405 				.endl
  7406
  7407 492D			.local	LOADCONFIG					; PROCEDURE
  7408
  7409 492D A0 F3			ldy #256-13
  7410 492F B9 66 20 99 7D 60 + 	mva:rne CODEORIGIN+$0159+13-256,y adr.S+13-256,y+
  7411
  7412 				; optimize FAIL ('ADDDRIVETOS', test\tools\artur\artur.pas), line = 1006
  7413
  7414 4938 20 7D 31			jsr ADDDRIVETOS
  7415
  7416 				; optimize OK (test\tools\artur\artur.pas), line = 1007
  7417
  7418 493B AD A1 58			lda S
  7419 493E 8D 1F 59			sta SYSUTILS.FILEEXISTS.NAME
  7420 4941 AD A2 58			lda S+1
  7421 4944 8D 20 59			sta SYSUTILS.FILEEXISTS.NAME+1
  7422 4947 20 1D 2C			jsr SYSUTILS.FILEEXISTS
  7423 494A AD 21 59			lda SYSUTILS.FILEEXISTS.RESULT
  7424 494D F0 79			jeq l_1DC7
  7425 				; AssignFile
  7426
  7427 				; optimize OK (test\tools\artur\artur.pas), line = 1008
  7428
  7429 494F AC A3 58 84 82 AC + 	mwy AFILE :bp2
  7430 4959 A0 00			ldy #s@file.pfname
  7431 495B AD A1 58			lda S
  7432 495E 91 82			sta (:bp2),y
  7433 4960 C8				iny
  7434 4961 AD A2 58			lda S+1
  7435 4964 91 82			sta (:bp2),y
  7436 4966 A0 05			ldy #s@file.status
  7437 4968 A9 00			lda #$00
  7438 496A 91 82			sta (:bp2),y
  7439 				; Reset
  7440
  7441 				; optimize OK (test\tools\artur\artur.pas), line = 1009
  7442
  7443 496C A0 02			ldy #s@file.record
  7444 496E A9 01			lda #$01
  7445 4970 91 82			sta (:bp2),y
  7446 4972 C8				iny
  7447 4973 A9 00			lda #$00
  7448 4975 91 82			sta (:bp2),y
  7449
  7450 4977 8A 48			txa:pha
  7451 4979 18				clc
  7452 					@openfile AFILE, MAIN.SYSTEM.FileMode
  7452 				 LDY AFILE+1\ LDA AFILE\ LDX MAIN.SYSTEM.FILEMODE\ JSR @OPENFILE
  7452 497A AC A4 58		 LDY AFILE+1
  7452 497D AD A3 58		 LDA AFILE
  7452 4980 AE B5 58		 LDX MAIN.SYSTEM.FILEMODE
  7452 4983 20 DA 24		 JSR @OPENFILE
  7453 4986 68 AA			pla:tax
  7454
  7455 				; BlockRead
  7456
  7457 				; optimize OK (test\tools\artur\artur.pas), line = 1010
  7458
  7459 4988 AC A3 58 84 82 AC + 	mwy AFILE :bp2
  7460 4992 A0 06			ldy #s@file.buffer
  7461 4994 AD 9F 58			lda CONFIG
  7462 4997 91 82			sta (:bp2),y
  7463 4999 C8				iny
  7464 499A AD A0 58			lda CONFIG+1
  7465 499D 91 82			sta (:bp2),y
  7466 499F A0 08			ldy #s@file.nrecord
  7467 49A1 A9 04			lda #$04
  7468 49A3 91 82			sta (:bp2),y
  7469 49A5 C8				iny
  7470 49A6 A9 00			lda #$00
  7471 49A8 91 82			sta (:bp2),y
  7472
  7473 49AA 8A 48			txa:pha
  7474 49AC 18				clc
  7475 					@readfile AFILE, #7
  7475 				 LDY AFILE+1\ LDA AFILE\ LDX# 7\ JSR @READFILE
  7475 49AD AC A4 58		 LDY AFILE+1
  7475 49B0 AD A3 58		 LDA AFILE
  7475 49B3 A2 07		 LDX# 7
  7475 49B5 20 9D 25		 JSR @READFILE
  7476 49B8 68 AA			pla:tax
  7477
  7478 				; CloseFile
  7479
  7480 49BA 8A 48			txa:pha
  7481 49BC 18				clc
  7482 					@closefile AFILE
  7482 				 LDY AFILE+1\ LDA AFILE\ JSR @CLOSEFILE
  7482 49BD AC A4 58		 LDY AFILE+1
  7482 49C0 AD A3 58		 LDA AFILE
  7482 49C3 20 70 25		 JSR @CLOSEFILE
  7483 49C6 68 AA			pla:tax
  7484
  7485 49C8			l_1DC7
  7486 49C8			@exit
  7487 					.ifdef @new
  7488 					lda <@VarData
  7489 					sta :ztmp
  7490 					lda >@VarData
  7491 					ldy #@VarDataSize-1
  7492 					jmp @FreeMem
  7493 					els
  7494 49C8 60				rts						; ret
  7495 					eif
  7496 				.endl
  7497
  7498 49C9			.local	SAVECONFIG					; PROCEDURE
  7499
  7500 49C9 A0 F3			ldy #256-13
  7501 49CB B9 66 20 99 7D 60 + 	mva:rne CODEORIGIN+$0159+13-256,y adr.S+13-256,y+
  7502
  7503 				; optimize FAIL ('ADDDRIVETOS', test\tools\artur\artur.pas), line = 1018
  7504
  7505 49D4 20 7D 31			jsr ADDDRIVETOS
  7506
  7507 				; optimize OK (test\tools\artur\artur.pas), line = 1019
  7508
  7509 49D7 AD 9F 58			lda CONFIG
  7510 49DA 8D 68 63			sta SAVEDATA.BUF
  7511 49DD AD A0 58			lda CONFIG+1
  7512 49E0 8D 69 63			sta SAVEDATA.BUF+1
  7513 49E3 A9 04			lda #$04
  7514 49E5 8D 6A 63			sta SAVEDATA.SIZE
  7515 49E8 A9 00			lda #$00
  7516 49EA 8D 6B 63			sta SAVEDATA.SIZE+1
  7517 49ED 20 BF 48			jsr SAVEDATA
  7518 49F0			@exit
  7519 					.ifdef @new
  7520 					lda <@VarData
  7521 					sta :ztmp
  7522 					lda >@VarData
  7523 					ldy #@VarDataSize-1
  7524 					jmp @FreeMem
  7525 					els
  7526 49F0 60				rts						; ret
  7527 					eif
  7528 				.endl
  7529
  7530 49F1			.local	SAVEBLOCK					; PROCEDURE
  7531
  7532 				; optimize FAIL ('OPENMODAL', test\tools\artur\artur.pas), line = 1031
  7533
  7534 49F1 20 1A 41			jsr OPENMODAL
  7535
  7536 				; optimize OK (test\tools\artur\artur.pas), line = 1032
  7537
  7538 49F4 A9 05			lda #$05
  7539 49F6 8D 11 63			sta DRAWRECT.X
  7540 49F9 A9 02			lda #$02
  7541 49FB 8D 12 63			sta DRAWRECT.Y
  7542 49FE A9 1E			lda #$1E
  7543 4A00 8D 13 63			sta DRAWRECT.W
  7544 4A03 A9 0C			lda #$0C
  7545 4A05 8D 14 63			sta DRAWRECT.H
  7546 4A08 A9 80			lda #$80
  7547 4A0A 8D 15 63			sta DRAWRECT.C
  7548 4A0D 20 27 36			jsr DRAWRECT
  7549 4A10 A0 EE			ldy #256-18
  7550 4A12 B9 79 20 99 82 60 + 	mva:rne CODEORIGIN+$0167+18-256,y adr.S+18-256,y+
  7551
  7552 				; optimize OK (test\tools\artur\artur.pas), line = 1034
  7553
  7554 4A1B A9 06			lda #$06
  7555 4A1D 8D 37 63			sta WRITESXY.X
  7556 4A20 A9 03			lda #$03
  7557 4A22 8D 38 63			sta WRITESXY.Y
  7558 4A25 20 CE 3E			jsr WRITESXY
  7559 4A28 A0 E3			ldy #256-29
  7560 4A2A B9 97 20 99 8D 60 + 	mva:rne CODEORIGIN+$017A+29-256,y adr.S+29-256,y+
  7561
  7562 				; optimize OK (test\tools\artur\artur.pas), line = 1036
  7563
  7564 4A33 A9 06			lda #$06
  7565 4A35 8D 37 63			sta WRITESXY.X
  7566 4A38 A9 04			lda #$04
  7567 4A3A 8D 38 63			sta WRITESXY.Y
  7568 4A3D 20 CE 3E			jsr WRITESXY
  7569
  7570 				; optimize OK (test\tools\artur\artur.pas), line = 1037
  7571
  7572 4A40 A9 06			lda #$06
  7573 4A42 8D 45 5E			sta B_CRT.CRT_GOTOXY.X
  7574 4A45 8D 46 5E			sta B_CRT.CRT_GOTOXY.Y
  7575 4A48 20 FC 2D			jsr B_CRT.CRT_GOTOXY
  7576
  7577 				; optimize OK (test\tools\artur\artur.pas), line = 1038
  7578
  7579 4A4B A9 06			lda #$06
  7580 4A4D 8D 41 63			sta GETFILENAME.X
  7581 4A50 8D 42 63			sta GETFILENAME.Y
  7582 4A53 20 BF 3F			jsr GETFILENAME
  7583 				; AssignFile
  7584
  7585 				; optimize OK (test\tools\artur\artur.pas), line = 1040
  7586
  7587 4A56 AC A3 58 84 82 AC + 	mwy AFILE :bp2
  7588 4A60 A0 00			ldy #s@file.pfname
  7589 4A62 AD A1 58			lda S
  7590 4A65 91 82			sta (:bp2),y
  7591 4A67 C8				iny
  7592 4A68 AD A2 58			lda S+1
  7593 4A6B 91 82			sta (:bp2),y
  7594 4A6D A0 05			ldy #s@file.status
  7595 4A6F A9 00			lda #$00
  7596 4A71 91 82			sta (:bp2),y
  7597 				; Rewrite
  7598
  7599 				; optimize OK (test\tools\artur\artur.pas), line = 1041
  7600
  7601 4A73 A0 02			ldy #s@file.record
  7602 4A75 A9 01			lda #$01
  7603 4A77 91 82			sta (:bp2),y
  7604 4A79 C8				iny
  7605 4A7A A9 00			lda #$00
  7606 4A7C 91 82			sta (:bp2),y
  7607
  7608 4A7E 8A 48			txa:pha
  7609 4A80 18				clc
  7610 					@openfile AFILE, #8
  7610 				 LDY AFILE+1\ LDA AFILE\ LDX# 8\ JSR @OPENFILE
  7610 4A81 AC A4 58		 LDY AFILE+1
  7610 4A84 AD A3 58		 LDA AFILE
  7610 4A87 A2 08		 LDX# 8
  7610 4A89 20 DA 24		 JSR @OPENFILE
  7611 4A8C 68 AA			pla:tax
  7612
  7613 				; optimize FAIL ('SORTPOINTSANDGETCORNER', test\tools\artur\artur.pas), line = 1043
  7614
  7615 4A8E 20 F4 44			jsr SORTPOINTSANDGETCORNER
  7616 4A91 E8				inx
  7617 4A92 AD 54 63			lda SORTPOINTSANDGETCORNER.RESULT
  7618 4A95 38 E9 00			sub #$00
  7619 4A98 8D 6C 63			sta PTR
  7620 4A9B AD 55 63			lda SORTPOINTSANDGETCORNER.RESULT+1
  7621 4A9E E9 7C			sbc #$7C
  7622 4AA0 8D 6D 63			sta PTR+1
  7623 4AA3 CA				dex
  7624
  7625 				; optimize FAIL ('CALCULATEWIDTHANDHEIGHT', test\tools\artur\artur.pas), line = 1044
  7626
  7627 4AA4 20 B2 45			jsr CALCULATEWIDTHANDHEIGHT
  7628
  7629 				; --- RepeatUntilProlog
  7630 4AA7			l_1E17
  7631 				; BlockWrite
  7632
  7633 				; optimize OK (test\tools\artur\artur.pas), line = 1046
  7634
  7635 4AA7 AC A3 58 84 82 AC + 	mwy AFILE :bp2
  7636 4AB1 A0 06			ldy #s@file.buffer
  7637 4AB3 AD FE 4A			lda VRAM
  7638 4AB6 18 6D 6C 63			add PTR
  7639 4ABA 91 82			sta (:bp2),y
  7640 4ABC C8				iny
  7641 4ABD AD FF 4A			lda VRAM+1
  7642 4AC0 6D 6D 63			adc PTR+1
  7643 4AC3 91 82			sta (:bp2),y
  7644 4AC5 A0 08			ldy #s@file.nrecord
  7645 4AC7 AD 6F 61			lda W
  7646 4ACA 91 82			sta (:bp2),y
  7647 4ACC C8				iny
  7648 4ACD A9 00			lda #$00
  7649 4ACF 91 82			sta (:bp2),y
  7650
  7651 4AD1 8A 48			txa:pha
  7652 4AD3 18				clc
  7653 					@readfile AFILE, #11
  7653 				 LDY AFILE+1\ LDA AFILE\ LDX# 11\ JSR @READFILE
  7653 4AD4 AC A4 58		 LDY AFILE+1
  7653 4AD7 AD A3 58		 LDA AFILE
  7653 4ADA A2 0B		 LDX# 11
  7653 4ADC 20 9D 25		 JSR @READFILE
  7654 4ADF 68 AA			pla:tax
  7655
  7656 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 1047
  7657
  7658 4AE1 CE 6E 61			dec H
  7659
  7660 				; optimize OK (test\tools\artur\artur.pas), line = 1048
  7661
  7662 4AE4 AD 6C 63			lda PTR
  7663 4AE7 18 69 28			add #$28
  7664 4AEA 8D 6C 63			sta PTR
  7665 4AED 90 03			scc
  7666 4AEF EE 6D 63			inc PTR+1
  7667
  7668 				; optimize OK (test\tools\artur\artur.pas), line = 1049
  7669
  7670 4AF2 AD 6E 61			lda H
  7671 4AF5 D0 B0			jne l_1E17
  7672
  7673 				; optimize FAIL ('IOSTATUS', test\tools\artur\artur.pas), line = 1051
  7674
  7675 4AF7 20 D3 47			jsr IOSTATUS
  7676
  7677 				; optimize FAIL ('CLOSEMODAL', test\tools\artur\artur.pas), line = 1052
  7678
  7679 4AFA 20 2B 41			jsr CLOSEMODAL
  7680
  7681 				; ------------------------------------------------------------
  7682
  7683 = 7800			adr.VRAM	= $7800
  7684 4AFD			.var VRAM	= adr.VRAM .word
  7685 = 636C			PTR	= DATAORIGIN+$0ABC
  7686 = 0005			SVB_X	= $05
  7687 = 0002			SVB_Y	= $02
  7688 = 001E			SVB_W	= $1E
  7689 = 000C			SVB_H	= $0C
  7690
  7691 = 4AFE			@VarData	= VRAM
  7692 = 0003			@VarDataSize	= 3
  7693
  7694 4AFD			@exit
  7695 					.ifdef @new
  7696 					lda <@VarData
  7697 					sta :ztmp
  7698 					lda >@VarData
  7699 					ldy #@VarDataSize-1
  7700 					jmp @FreeMem
  7701 					els
  7702 4AFD 60				rts						; ret
  7703 					eif
  7704 = 4AFE 00 78		VRAM
  7704 				.endl
  7705
  7706 4B00			.local	SAVEBINARY					; PROCEDURE
  7707
  7708 				; AssignFile
  7709
  7710 				; optimize OK (test\tools\artur\artur.pas), line = 1060
  7711
  7712 4B00 AC A3 58 84 82 AC + 	mwy AFILE :bp2
  7713 4B0A A0 00			ldy #s@file.pfname
  7714 4B0C AD A1 58			lda S
  7715 4B0F 91 82			sta (:bp2),y
  7716 4B11 C8				iny
  7717 4B12 AD A2 58			lda S+1
  7718 4B15 91 82			sta (:bp2),y
  7719 4B17 A0 05			ldy #s@file.status
  7720 4B19 A9 00			lda #$00
  7721 4B1B 91 82			sta (:bp2),y
  7722 				; Rewrite
  7723
  7724 				; optimize OK (test\tools\artur\artur.pas), line = 1061
  7725
  7726 4B1D A0 02			ldy #s@file.record
  7727 4B1F A9 01			lda #$01
  7728 4B21 91 82			sta (:bp2),y
  7729 4B23 C8				iny
  7730 4B24 A9 00			lda #$00
  7731 4B26 91 82			sta (:bp2),y
  7732
  7733 4B28 8A 48			txa:pha
  7734 4B2A 18				clc
  7735 					@openfile AFILE, #8
  7735 				 LDY AFILE+1\ LDA AFILE\ LDX# 8\ JSR @OPENFILE
  7735 4B2B AC A4 58		 LDY AFILE+1
  7735 4B2E AD A3 58		 LDA AFILE
  7735 4B31 A2 08		 LDX# 8
  7735 4B33 20 DA 24		 JSR @OPENFILE
  7736 4B36 68 AA			pla:tax
  7737
  7738 				; BlockWrite
  7739
  7740 				; optimize OK (test\tools\artur\artur.pas), line = 1063
  7741
  7742 4B38 AC A3 58 84 82 AC + 	mwy AFILE :bp2
  7743 4B42 A0 06			ldy #s@file.buffer
  7744 4B44 AD D3 4B			lda HEADER
  7745 4B47 91 82			sta (:bp2),y
  7746 4B49 C8				iny
  7747 4B4A AD D4 4B			lda HEADER+1
  7748 4B4D 91 82			sta (:bp2),y
  7749 4B4F A0 08			ldy #s@file.nrecord
  7750 4B51 A9 69			lda #$69
  7751 4B53 91 82			sta (:bp2),y
  7752 4B55 C8				iny
  7753 4B56 A9 00			lda #$00
  7754 4B58 91 82			sta (:bp2),y
  7755
  7756 4B5A 8A 48			txa:pha
  7757 4B5C 18				clc
  7758 					@readfile AFILE, #11
  7758 				 LDY AFILE+1\ LDA AFILE\ LDX# 11\ JSR @READFILE
  7758 4B5D AC A4 58		 LDY AFILE+1
  7758 4B60 AD A3 58		 LDA AFILE
  7758 4B63 A2 0B		 LDX# 11
  7758 4B65 20 9D 25		 JSR @READFILE
  7759 4B68 68 AA			pla:tax
  7760
  7761 				; BlockWrite
  7762
  7763 				; optimize OK (test\tools\artur\artur.pas), line = 1064
  7764
  7765 4B6A AC A3 58 84 82 AC + 	mwy AFILE :bp2
  7766 4B74 A0 06			ldy #s@file.buffer
  7767 4B76 AD D5 4B			lda CHARSET
  7768 4B79 91 82			sta (:bp2),y
  7769 4B7B C8				iny
  7770 4B7C AD D6 4B			lda CHARSET+1
  7771 4B7F 91 82			sta (:bp2),y
  7772 4B81 A0 08			ldy #s@file.nrecord
  7773 4B83 A9 C0			lda #$C0
  7774 4B85 91 82			sta (:bp2),y
  7775 4B87 C8				iny
  7776 4B88 A9 07			lda #$07
  7777 4B8A 91 82			sta (:bp2),y
  7778
  7779 4B8C 8A 48			txa:pha
  7780 4B8E 18				clc
  7781 					@readfile AFILE, #11
  7781 				 LDY AFILE+1\ LDA AFILE\ LDX# 11\ JSR @READFILE
  7781 4B8F AC A4 58		 LDY AFILE+1
  7781 4B92 AD A3 58		 LDA AFILE
  7781 4B95 A2 0B		 LDX# 11
  7781 4B97 20 9D 25		 JSR @READFILE
  7782 4B9A 68 AA			pla:tax
  7783
  7784 				; BlockWrite
  7785
  7786 				; optimize OK (test\tools\artur\artur.pas), line = 1065
  7787
  7788 4B9C AC A3 58 84 82 AC + 	mwy AFILE :bp2
  7789 4BA6 A0 06			ldy #s@file.buffer
  7790 4BA8 A9 69			lda <CONFIG.EDITORBACKGROUNDCOLOR
  7791 4BAA 91 82			sta (:bp2),y
  7792 4BAC C8				iny
  7793 4BAD A9 61			lda >CONFIG.EDITORBACKGROUNDCOLOR
  7794 4BAF 91 82			sta (:bp2),y
  7795 4BB1 A0 08			ldy #s@file.nrecord
  7796 4BB3 A9 02			lda #$02
  7797 4BB5 91 82			sta (:bp2),y
  7798 4BB7 C8				iny
  7799 4BB8 A9 00			lda #$00
  7800 4BBA 91 82			sta (:bp2),y
  7801
  7802 4BBC 8A 48			txa:pha
  7803 4BBE 18				clc
  7804 					@readfile AFILE, #11
  7804 				 LDY AFILE+1\ LDA AFILE\ LDX# 11\ JSR @READFILE
  7804 4BBF AC A4 58		 LDY AFILE+1
  7804 4BC2 AD A3 58		 LDA AFILE
  7804 4BC5 A2 0B		 LDX# 11
  7804 4BC7 20 9D 25		 JSR @READFILE
  7805 4BCA 68 AA			pla:tax
  7806
  7807 				; optimize FAIL ('IOSTATUS', test\tools\artur\artur.pas), line = 1067
  7808
  7809 4BCC 20 D3 47			jsr IOSTATUS
  7810
  7811 				; optimize FAIL ('CLOSEMODAL', test\tools\artur\artur.pas), line = 1069
  7812
  7813 4BCF 20 2B 41			jsr CLOSEMODAL
  7814
  7815 				; ------------------------------------------------------------
  7816
  7817 = 7100			adr.HEADER	= $7100
  7818 4BD2			.var HEADER	= adr.HEADER .word
  7819 = 7400			adr.CHARSET	= $7400
  7820 4BD2			.var CHARSET	= adr.CHARSET .word
  7821
  7822 = 4BD3			@VarData	= HEADER
  7823 = 0002			@VarDataSize	= 2
  7824
  7825 4BD2			@exit
  7826 					.ifdef @new
  7827 					lda <@VarData
  7828 					sta :ztmp
  7829 					lda >@VarData
  7830 					ldy #@VarDataSize-1
  7831 					jmp @FreeMem
  7832 					els
  7833 4BD2 60				rts						; ret
  7834 					eif
  7835 = 4BD3 00 71		HEADER
  7835 = 4BD5 00 74		CHARSET
  7835 				.endl
  7836
  7837 4BD7			.local	SHOWHELP					; PROCEDURE
  7838
  7839 				; optimize FAIL ('OPENMODAL', test\tools\artur\artur.pas), line = 1084
  7840
  7841 4BD7 20 1A 41			jsr OPENMODAL
  7842
  7843 				; optimize OK (test\tools\artur\artur.pas), line = 1085
  7844
  7845 4BDA A9 05			lda #$05
  7846 4BDC 8D 11 63			sta DRAWRECT.X
  7847 4BDF A9 02			lda #$02
  7848 4BE1 8D 12 63			sta DRAWRECT.Y
  7849 4BE4 A9 1E			lda #$1E
  7850 4BE6 8D 13 63			sta DRAWRECT.W
  7851 4BE9 A9 14			lda #$14
  7852 4BEB 8D 14 63			sta DRAWRECT.H
  7853 4BEE A9 80			lda #$80
  7854 4BF0 8D 15 63			sta DRAWRECT.C
  7855 4BF3 20 27 36			jsr DRAWRECT
  7856 4BF6 A0 E3			ldy #256-29
  7857 4BF8 B9 B5 20 99 8D 60 + 	mva:rne CODEORIGIN+$0198+29-256,y adr.S+29-256,y+
  7858
  7859 				; optimize OK (test\tools\artur\artur.pas), line = 1087
  7860
  7861 4C01 A9 06			lda #$06
  7862 4C03 8D 37 63			sta WRITESXY.X
  7863 4C06 A9 03			lda #$03
  7864 4C08 8D 38 63			sta WRITESXY.Y
  7865 4C0B 20 CE 3E			jsr WRITESXY
  7866
  7867 				; optimize OK (test\tools\artur\artur.pas), line = 1088
  7868
  7869 4C0E AD 9D 58			lda VERSION
  7870 4C11 85 88			sta SYSTEM.MOVE_0459.SOURCE
  7871 4C13 AD 9E 58			lda VERSION+1
  7872 4C16 85 89			sta SYSTEM.MOVE_0459.SOURCE+1
  7873 4C18 AD A1 58			lda S
  7874 4C1B 85 8C			sta SYSTEM.MOVE_0459.DEST
  7875 4C1D AD A2 58			lda S+1
  7876 4C20 85 8D			sta SYSTEM.MOVE_0459.DEST+1
  7877 4C22 A9 0A			lda #$0A
  7878 4C24 85 84			sta SYSTEM.MOVE_0459.COUNT
  7879 4C26 A9 00			lda #$00
  7880 4C28 85 85			sta SYSTEM.MOVE_0459.COUNT+1
  7881 4C2A				.local +MAIN.SYSTEM.MOVE_0459
  7882 4C2A				m@INLINE
Macro: MAIN.SYSTEM.MOVE_0459.M@INLINE [Source: artur.a65]
     4 4C2A 20 74 27			jsr @move
Source: artur.a65
  7883 					.endl
  7884
  7885 				; optimize OK (test\tools\artur\artur.pas), line = 1089
  7886
  7887 4C2D A9 10			lda #$10
  7888 4C2F 8D 37 63			sta WRITESXY.X
  7889 4C32 A9 03			lda #$03
  7890 4C34 8D 38 63			sta WRITESXY.Y
  7891 4C37 20 CE 3E			jsr WRITESXY
  7892 4C3A A0 E3			ldy #256-29
  7893 4C3C B9 97 20 99 8D 60 + 	mva:rne CODEORIGIN+$017A+29-256,y adr.S+29-256,y+
  7894
  7895 				; optimize OK (test\tools\artur\artur.pas), line = 1091
  7896
  7897 4C45 A9 06			lda #$06
  7898 4C47 8D 37 63			sta WRITESXY.X
  7899 4C4A A9 04			lda #$04
  7900 4C4C 8D 38 63			sta WRITESXY.Y
  7901 4C4F 20 CE 3E			jsr WRITESXY
  7902 4C52 A0 ED			ldy #256-19
  7903 4C54 B9 C9 20 99 83 60 + 	mva:rne CODEORIGIN+$01B6+19-256,y adr.S+19-256,y+
  7904
  7905 				; optimize OK (test\tools\artur\artur.pas), line = 1093
  7906
  7907 4C5D A9 06			lda #$06
  7908 4C5F 8D 37 63			sta WRITESXY.X
  7909 4C62 A9 05			lda #$05
  7910 4C64 8D 38 63			sta WRITESXY.Y
  7911 4C67 20 CE 3E			jsr WRITESXY
  7912 4C6A A0 EE			ldy #256-18
  7913 4C6C B9 DC 20 99 82 60 + 	mva:rne CODEORIGIN+$01CA+18-256,y adr.S+18-256,y+
  7914
  7915 				; optimize OK (test\tools\artur\artur.pas), line = 1095
  7916
  7917 4C75 A9 06			lda #$06
  7918 4C77 8D 37 63			sta WRITESXY.X
  7919 4C7A A9 08			lda #$08
  7920 4C7C 8D 38 63			sta WRITESXY.Y
  7921 4C7F 20 CE 3E			jsr WRITESXY
  7922 4C82 A0 EB			ldy #256-21
  7923 4C84 B9 F2 20 99 85 60 + 	mva:rne CODEORIGIN+$01DD+21-256,y adr.S+21-256,y+
  7924
  7925 				; optimize OK (test\tools\artur\artur.pas), line = 1097
  7926
  7927 4C8D A9 06			lda #$06
  7928 4C8F 8D 37 63			sta WRITESXY.X
  7929 4C92 A9 0A			lda #$0A
  7930 4C94 8D 38 63			sta WRITESXY.Y
  7931 4C97 20 CE 3E			jsr WRITESXY
  7932 4C9A A0 EE			ldy #256-18
  7933 4C9C B9 05 21 99 82 60 + 	mva:rne CODEORIGIN+$01F3+18-256,y adr.S+18-256,y+
  7934
  7935 				; optimize OK (test\tools\artur\artur.pas), line = 1099
  7936
  7937 4CA5 A9 06			lda #$06
  7938 4CA7 8D 37 63			sta WRITESXY.X
  7939 4CAA A9 0C			lda #$0C
  7940 4CAC 8D 38 63			sta WRITESXY.Y
  7941 4CAF 20 CE 3E			jsr WRITESXY
  7942 4CB2 A0 EB			ldy #256-21
  7943 4CB4 B9 1B 21 99 85 60 + 	mva:rne CODEORIGIN+$0206+21-256,y adr.S+21-256,y+
  7944
  7945 				; optimize OK (test\tools\artur\artur.pas), line = 1101
  7946
  7947 4CBD A9 06			lda #$06
  7948 4CBF 8D 37 63			sta WRITESXY.X
  7949 4CC2 A9 0E			lda #$0E
  7950 4CC4 8D 38 63			sta WRITESXY.Y
  7951 4CC7 20 CE 3E			jsr WRITESXY
  7952 4CCA A0 F2			ldy #256-14
  7953 4CCC B9 2A 21 99 7E 60 + 	mva:rne CODEORIGIN+$021C+14-256,y adr.S+14-256,y+
  7954
  7955 				; optimize OK (test\tools\artur\artur.pas), line = 1104
  7956
  7957 4CD5 A9 06			lda #$06
  7958 4CD7 8D 37 63			sta WRITESXY.X
  7959 4CDA A9 14			lda #$14
  7960 4CDC 8D 38 63			sta WRITESXY.Y
  7961 4CDF 20 CE 3E			jsr WRITESXY
  7962
  7963 				; --- RepeatUntilProlog
  7964 4CE2			l_1E90
  7965
  7966 				; optimize FAIL ('B_CRT.CRT_HELPPRESSED', test\tools\artur\artur.pas), line = 1107
  7967
  7968 4CE2 20 CF 2F			jsr B_CRT.CRT_HELPPRESSED
  7969 4CE5 E8				inx
  7970 4CE6 AD 52 61 95 94		mva B_CRT.CRT_HELPPRESSED.RESULT :STACKORIGIN,x
  7971 4CEB CA				dex
  7972 4CEC A0 01			ldy #1
  7973 4CEE AD AB 61			lda KEYREPEATCOUNTER
  7974 4CF1 F0 01			beq @+
  7975 4CF3 88				dey
  7976 				@
  7977 4CF4 98				tya
  7978 4CF5 35 95			and :STACKORIGIN+1,x
  7979 4CF7 95 95			sta :STACKORIGIN+1,x
  7980 4CF9 F0 03			jeq l_1EA6
  7981 4CFB 4C 06 4D			jmp b_1E90					; break
  7982 4CFE			l_1EA6
  7983
  7984 				; optimize FAIL ('CRT.KEYPRESSED', test\tools\artur\artur.pas), line = 1108
  7985
  7986 4CFE 20 B2 2A			jsr CRT.KEYPRESSED
  7987 4D01 AD E7 58			lda CRT.KEYPRESSED.RESULT
  7988 4D04 F0 DC			jeq l_1E90
  7989 4D06			b_1E90
  7990
  7991 				; optimize FAIL ('CLOSEMODAL', test\tools\artur\artur.pas), line = 1109
  7992
  7993 4D06 20 2B 41			jsr CLOSEMODAL
  7994
  7995 				; optimize FAIL ('CRT.KEYPRESSED', test\tools\artur\artur.pas), line = 1110
  7996
  7997 4D09 20 B2 2A			jsr CRT.KEYPRESSED
  7998 4D0C AD E7 58			lda CRT.KEYPRESSED.RESULT
  7999 4D0F F0 0A			jeq l_1EB9
  8000 4D11 20 AB 2A			jsr CRT.READKEY
  8001 4D14 E8				inx
  8002 4D15 AD E6 58 95 94		mva CRT.READKEY.RESULT :STACKORIGIN,x
  8003 4D1A CA				dex
  8004 4D1B			l_1EB9
  8005
  8006 				; ------------------------------------------------------------
  8007
  8008 = 0005			HLP_X	= $05
  8009 = 0002			HLP_Y	= $02
  8010 = 001E			HLP_W	= $1E
  8011 = 0014			HLP_H	= $14
  8012 4D1B			@exit
  8013 					.ifdef @new
  8014 					lda <@VarData
  8015 					sta :ztmp
  8016 					lda >@VarData
  8017 					ldy #@VarDataSize-1
  8018 					jmp @FreeMem
  8019 					els
  8020 4D1B 60				rts						; ret
  8021 					eif
  8022 				.endl
  8023
  8024 4D1C			.local	HASEXT						; FUNCTION
  8025
  8026 				; optimize OK (test\tools\artur\artur.pas), line = 1116
  8027
  8028 4D1C A9 00			lda #$00
  8029 4D1E 8D 72 63			sta RESULT
  8030
  8031 				; optimize OK (test\tools\artur\artur.pas), line = 1117
  8032
  8033 4D21 A9 01			lda #$01
  8034 4D23 8D 73 63			sta I
  8035
  8036 				; optimize OK (test\tools\artur\artur.pas), line = 1118
  8037
  8038 4D26 8D 74 63			sta EI
  8039
  8040 				; --- RepeatUntilProlog
  8041 4D29			l_1ECE
  8042
  8043 				; optimize OK (test\tools\artur\artur.pas), line = 1120
  8044
  8045 4D29 AC 6E 63 84 82 AC + 	mwy S :bp2
  8046 4D33 AC 73 63			ldy I
  8047 4D36 B1 82			lda (:bp2),y
  8048 4D38 C9 0E			cmp #$0E
  8049 4D3A D0 05			jne l_1EE3
  8050 4D3C A9 01			lda #$01
  8051 4D3E 8D 72 63			sta RESULT
  8052 4D41			l_1EE3
  8053
  8054 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 1121
  8055
  8056 4D41 EE 73 63			inc I
  8057
  8058 				; optimize OK (test\tools\artur\artur.pas), line = 1122
  8059
  8060 4D44 AD 73 63			lda I
  8061 4D47 C9 0A			cmp #$0A
  8062 4D49 F0 08			jeq l_1ECEx
  8063 4D4B AD 72 63 D0 03		lda:sne RESULT
  8064 4D50 4C 29 4D			jmp l_1ECE
  8065 4D53			l_1ECEx
  8066
  8067 				; optimize OK (test\tools\artur\artur.pas), line = 1123
  8068
  8069 4D53 AD 72 63			lda RESULT
  8070 4D56 F0 37			jeq l_1F0D
  8071
  8072 				; --- RepeatUntilProlog
  8073 4D58			l_1F0F
  8074
  8075 				; optimize OK (test\tools\artur\artur.pas), line = 1125
  8076
  8077 4D58 AC 6E 63 84 82 AC + 	mwy S :bp2
  8078 4D62 AC 73 63			ldy I
  8079 4D65 B1 82			lda (:bp2),y
  8080 4D67 AC 70 63 84 82 AC + 	mwy E :bp2
  8081 4D71 AC 74 63			ldy EI
  8082 4D74 D1 82			cmp (:bp2),y
  8083 4D76 F0 05			jeq l_1F29
  8084 4D78 A9 00			lda #$00
  8085 4D7A 8D 72 63			sta RESULT
  8086 4D7D			l_1F29
  8087
  8088 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 1126
  8089
  8090 4D7D EE 73 63			inc I
  8091
  8092 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 1127
  8093
  8094 4D80 EE 74 63			inc EI
  8095
  8096 				; optimize OK (test\tools\artur\artur.pas), line = 1128
  8097
  8098 4D83 AD 72 63			lda RESULT
  8099 4D86 F0 07			jeq l_1F0Fx
  8100 4D88 AD 74 63			lda EI
  8101 4D8B C9 04			cmp #$04
  8102 4D8D D0 C9			jne l_1F0F
  8103 4D8F			l_1F0Fx
  8104 4D8F			l_1F0D
  8105 4D8F			@exit
  8106
  8107 				; ------------------------------------------------------------
  8108
  8109 = 636E			S	= DATAORIGIN+$0ABE
  8110 = 6370			E	= DATAORIGIN+$0AC0
  8111 = 6372			RESULT	= DATAORIGIN+$0AC2
  8112 = 6373			I	= DATAORIGIN+$0AC3
  8113 = 6374			EI	= DATAORIGIN+$0AC4
  8114
  8115 = 636E			@VarData	= S
  8116 = 0006			@VarDataSize	= 6
  8117
  8118 4D8F 60				rts						; ret
  8119 				.endl
  8120
  8121 4D90			.local	SHOWIOMENU					; PROCEDURE
  8122
  8123 4D90 4C DE 4E			jmp l_1F54
  8124
  8125 4D93			.local	SHOWDIR						; PROCEDURE
  8126 4D93 8D 9D 63			sta PAGE
  8127
  8128 				; optimize OK (test\tools\artur\artur.pas), line = 1150
  8129
  8130 4D96 0A				asl @
  8131 4D97 0A				asl @
  8132 4D98 0A				asl @
  8133 4D99 0A				asl @
  8134 4D9A 8D A3 63			sta SKIP
  8135
  8136 				; optimize OK (test\tools\artur\artur.pas), line = 1151
  8137
  8138 4D9D A9 1A			lda #$1A
  8139 4D9F 8D 11 63			sta DRAWRECT.X
  8140 4DA2 A9 04			lda #$04
  8141 4DA4 8D 12 63			sta DRAWRECT.Y
  8142 4DA7 A9 0C			lda #$0C
  8143 4DA9 8D 13 63			sta DRAWRECT.W
  8144 4DAC A9 10			lda #$10
  8145 4DAE 8D 14 63			sta DRAWRECT.H
  8146 4DB1 A9 00			lda #$00
  8147 4DB3 8D 15 63			sta DRAWRECT.C
  8148 4DB6 20 27 36			jsr DRAWRECT
  8149 4DB9 A0 F3			ldy #256-13
  8150 4DBB B9 38 21 99 7D 60 + 	mva:rne CODEORIGIN+$022B+13-256,y adr.S+13-256,y+
  8151
  8152 				; optimize OK (test\tools\artur\artur.pas), line = 1153
  8153
  8154 4DC4 A9 1A			lda #$1A
  8155 4DC6 8D 37 63			sta WRITESXY.X
  8156 4DC9 A9 15			lda #$15
  8157 4DCB 8D 38 63			sta WRITESXY.Y
  8158 4DCE 20 CE 3E			jsr WRITESXY
  8159
  8160 				; optimize FAIL ('SYSUTILS.FINDFIRST', test\tools\artur\artur.pas), line = 1154
  8161
  8162 4DD1 E8				inx
  8163 4DD2 AD 38 51 95 94		mva INFO :STACKORIGIN,x
  8164 4DD7 AD 39 51 95 A4		mva INFO+1 :STACKORIGIN+STACKWIDTH,x
  8165 4DDC E8				inx
  8166 4DDD A9 3F 95 94			mva #$3F :STACKORIGIN,x
  8167 4DE1 E8				inx
  8168 4DE2 A9 39 95 94			mva #$39 :STACKORIGIN,x
  8169 4DE6 A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  8170 4DEA 20 CB 2A			jsr SYSUTILS.FINDFIRST
  8171 4DED AD 0D 59			lda SYSUTILS.FINDFIRST.RESULT
  8172 4DF0 F0 03 4C A3 4E		jne l_1F7E
  8173 				@
  8174
  8175 				; optimize OK (test\tools\artur\artur.pas), line = 1155
  8176
  8177 4DF5 A9 00			lda #$00
  8178 4DF7 8D 9E 63			sta ROW
  8179 4DFA A0 FC			ldy #256-4
  8180 4DFC B9 44 21 99 A3 62 + 	mva:rne CODEORIGIN+$0240+4-256,y adr.EXT+4-256,y+
  8181
  8182 				; --- RepeatUntilProlog
  8183 4E05			l_1F84
  8184
  8185 				; optimize FAIL ('B_CRT.ATASCII2ANTIC_0549', test\tools\artur\artur.pas), line = 1158
  8186
  8187 4E05 E8				inx
  8188 4E06 AD 3A 51 95 94		mva INFO.NAME :STACKORIGIN,x
  8189 4E0B AD 3B 51 95 A4		mva INFO.NAME+1 :STACKORIGIN+STACKWIDTH,x
  8190 4E10 20 12 2D			jsr B_CRT.ATASCII2ANTIC_0549
  8191 4E13 E8				inx
  8192 4E14 AD 67 2D			lda B_CRT.ATASCII2ANTIC_0549.RESULT
  8193 4E17 85 88			sta @move.src
  8194 4E19 AD 68 2D			lda B_CRT.ATASCII2ANTIC_0549.RESULT+1
  8195 4E1C 85 89			sta @move.src+1
  8196 					@moveSTRING S #41
  8196 				 MWA S @MOVE.DST\ MWA #41 @MOVE.CNT\ JSR @MOVESTRING
  8196 4E1E AD A1 58 85 8C AD +  MWA S @MOVE.DST
  8196 4E28 A9 29 85 84 A9 00 +  MWA #41 @MOVE.CNT
  8196 4E30 20 11 28		 JSR @MOVESTRING
  8197 4E33 CA				dex
  8198
  8199 				; optimize OK (test\tools\artur\artur.pas), line = 1159
  8200
  8201 4E34 AD A1 58			lda S
  8202 4E37 8D 6E 63			sta HASEXT.S
  8203 4E3A AD A2 58			lda S+1
  8204 4E3D 8D 6F 63			sta HASEXT.S+1
  8205 4E40 AD DC 4E			lda EXT
  8206 4E43 8D 70 63			sta HASEXT.E
  8207 4E46 AD DD 4E			lda EXT+1
  8208 4E49 8D 71 63			sta HASEXT.E+1
  8209 4E4C 20 1C 4D			jsr HASEXT
  8210 4E4F AD 72 63			lda HASEXT.RESULT
  8211 4E52 D0 1F			jne l_1F98
  8212
  8213 				; optimize OK (test\tools\artur\artur.pas), line = 1160
  8214
  8215 4E54 AD A3 63			lda SKIP
  8216 4E57 D0 17			jne l_1FAB
  8217
  8218 				; optimize OK (test\tools\artur\artur.pas), line = 1161
  8219
  8220 4E59 A9 04			lda #$04
  8221 4E5B 18 6D 9E 63			add ROW
  8222 4E5F 8D 38 63			sta WRITESXY.Y
  8223 4E62 A9 1A			lda #$1A
  8224 4E64 8D 37 63			sta WRITESXY.X
  8225 4E67 20 CE 3E			jsr WRITESXY
  8226
  8227 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 1162
  8228
  8229 4E6A EE 9E 63			inc ROW
  8230 4E6D 4C 73 4E			jmp l_1FC6
  8231 4E70			l_1FAB
  8232
  8233 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 1163
  8234
  8235 4E70 CE A3 63			dec SKIP
  8236 4E73			l_1FC6
  8237 4E73			l_1F98
  8238
  8239 				; optimize OK (test\tools\artur\artur.pas), line = 1165
  8240
  8241 4E73 AD 38 51			lda INFO
  8242 4E76 8D 1A 59			sta SYSUTILS.FINDNEXT.F
  8243 4E79 AD 39 51			lda INFO+1
  8244 4E7C 8D 1B 59			sta SYSUTILS.FINDNEXT.F+1
  8245 4E7F 20 AD 2B			jsr SYSUTILS.FINDNEXT
  8246 4E82 AD 1C 59			lda SYSUTILS.FINDNEXT.RESULT
  8247 4E85 8D 9C 63			sta NEXT
  8248
  8249 				; optimize OK (test\tools\artur\artur.pas), line = 1166
  8250
  8251 4E88 D0 0A			jne l_1F84x
  8252 4E8A AD 9E 63			lda ROW
  8253 4E8D C9 10			cmp #$10
  8254 4E8F F0 03 4C 05 4E		jne l_1F84
  8255 4E94			l_1F84x
  8256
  8257 				; optimize OK (test\tools\artur\artur.pas), line = 1167
  8258
  8259 4E94 AD 38 51			lda INFO
  8260 4E97 8D 1D 59			sta SYSUTILS.FINDCLOSE.F
  8261 4E9A AD 39 51			lda INFO+1
  8262 4E9D 8D 1E 59			sta SYSUTILS.FINDCLOSE.F+1
  8263 4EA0 20 FB 2B			jsr SYSUTILS.FINDCLOSE
  8264 4EA3			l_1F7E
  8265
  8266 				; optimize OK (test\tools\artur\artur.pas), line = 1169
  8267
  8268 4EA3 AD 9C 63			lda NEXT
  8269 4EA6 D0 17			jne l_2002
  8270 4EA8 A9 01 8D 70 61		mva #$01 adr.S
  8271 4EAD A9 1E 8D 71 61		mva #$1E adr.S+1
  8272
  8273 				; optimize OK (test\tools\artur\artur.pas), line = 1171
  8274
  8275 4EB2 A9 25			lda #$25
  8276 4EB4 8D 37 63			sta WRITESXY.X
  8277 4EB7 A9 15			lda #$15
  8278 4EB9 8D 38 63			sta WRITESXY.Y
  8279 4EBC 20 CE 3E			jsr WRITESXY
  8280 4EBF			l_2002
  8281
  8282 				; optimize OK (test\tools\artur\artur.pas), line = 1173
  8283
  8284 4EBF AD 9D 63			lda PAGE
  8285 4EC2 F0 17			jeq l_201A
  8286 4EC4 A9 01 8D 70 61		mva #$01 adr.S
  8287 4EC9 A9 1C 8D 71 61		mva #$1C adr.S+1
  8288
  8289 				; optimize OK (test\tools\artur\artur.pas), line = 1175
  8290
  8291 4ECE A9 1A			lda #$1A
  8292 4ED0 8D 37 63			sta WRITESXY.X
  8293 4ED3 A9 15			lda #$15
  8294 4ED5 8D 38 63			sta WRITESXY.Y
  8295 4ED8 20 CE 3E			jsr WRITESXY
  8296 4EDB			l_201A
  8297
  8298 				; ------------------------------------------------------------
  8299
  8300 = 639D			PAGE	= DATAORIGIN+$0AED
  8301 = 639E			ROW	= DATAORIGIN+$0AEE
  8302 = 639F			adr.EXT	= [DATAORIGIN+$0AEF] .array [4]
  8303 4EDB			.var EXT	= adr.EXT .word
  8304 = 63A3			SKIP	= DATAORIGIN+$0AF3
  8305
  8306 = 639D			@VarData	= PAGE
  8307 = 0007			@VarDataSize	= 7
  8308
  8309 4EDB			@exit
  8310 					.ifdef @new
  8311 					lda <@VarData
  8312 					sta :ztmp
  8313 					lda >@VarData
  8314 					ldy #@VarDataSize-1
  8315 					jmp @FreeMem
  8316 					els
  8317 4EDB 60				rts						; ret
  8318 					eif
  8319 = 4EDC 9F 63		EXT
  8319 				.endl
  8320 4EDE			l_1F54
  8321
  8322 				; optimize FAIL ('OPENMODAL', test\tools\artur\artur.pas), line = 1182
  8323
  8324 4EDE 20 1A 41			jsr OPENMODAL
  8325
  8326 				; optimize OK (test\tools\artur\artur.pas), line = 1183
  8327
  8328 4EE1 A9 01			lda #$01
  8329 4EE3 8D 11 63			sta DRAWRECT.X
  8330 4EE6 8D 12 63			sta DRAWRECT.Y
  8331 4EE9 A9 26			lda #$26
  8332 4EEB 8D 13 63			sta DRAWRECT.W
  8333 4EEE A9 16			lda #$16
  8334 4EF0 8D 14 63			sta DRAWRECT.H
  8335 4EF3 A9 80			lda #$80
  8336 4EF5 8D 15 63			sta DRAWRECT.C
  8337 4EF8 20 27 36			jsr DRAWRECT
  8338 4EFB A0 E1			ldy #256-31
  8339 4EFD B9 64 21 99 8F 60 + 	mva:rne CODEORIGIN+$0245+31-256,y adr.S+31-256,y+
  8340
  8341 				; optimize OK (test\tools\artur\artur.pas), line = 1185
  8342
  8343 4F06 A9 02			lda #$02
  8344 4F08 8D 37 63			sta WRITESXY.X
  8345 4F0B 8D 38 63			sta WRITESXY.Y
  8346 4F0E 20 CE 3E			jsr WRITESXY
  8347 4F11 A0 DB			ldy #256-37
  8348 4F13 B9 8A 21 99 95 60 + 	mva:rne CODEORIGIN+$0265+37-256,y adr.S+37-256,y+
  8349
  8350 				; optimize OK (test\tools\artur\artur.pas), line = 1187
  8351
  8352 4F1C A9 02			lda #$02
  8353 4F1E 8D 37 63			sta WRITESXY.X
  8354 4F21 A9 03			lda #$03
  8355 4F23 8D 38 63			sta WRITESXY.Y
  8356 4F26 20 CE 3E			jsr WRITESXY
  8357 4F29 A0 EE			ldy #256-18
  8358 4F2B B9 9D 21 99 82 60 + 	mva:rne CODEORIGIN+$028B+18-256,y adr.S+18-256,y+
  8359
  8360 				; optimize OK (test\tools\artur\artur.pas), line = 1189
  8361
  8362 4F34 A9 02			lda #$02
  8363 4F36 8D 37 63			sta WRITESXY.X
  8364 4F39 A9 05			lda #$05
  8365 4F3B 8D 38 63			sta WRITESXY.Y
  8366 4F3E 20 CE 3E			jsr WRITESXY
  8367 4F41 A0 ED			ldy #256-19
  8368 4F43 B9 B1 21 99 83 60 + 	mva:rne CODEORIGIN+$029E+19-256,y adr.S+19-256,y+
  8369
  8370 				; optimize OK (test\tools\artur\artur.pas), line = 1191
  8371
  8372 4F4C A9 02			lda #$02
  8373 4F4E 8D 37 63			sta WRITESXY.X
  8374 4F51 A9 07			lda #$07
  8375 4F53 8D 38 63			sta WRITESXY.Y
  8376 4F56 20 CE 3E			jsr WRITESXY
  8377 4F59 A0 ED			ldy #256-19
  8378 4F5B B9 C5 21 99 83 60 + 	mva:rne CODEORIGIN+$02B2+19-256,y adr.S+19-256,y+
  8379
  8380 				; optimize OK (test\tools\artur\artur.pas), line = 1193
  8381
  8382 4F64 A9 02			lda #$02
  8383 4F66 8D 37 63			sta WRITESXY.X
  8384 4F69 A9 09			lda #$09
  8385 4F6B 8D 38 63			sta WRITESXY.Y
  8386 4F6E 20 CE 3E			jsr WRITESXY
  8387 4F71 A0 E9			ldy #256-23
  8388 4F73 B9 DD 21 99 87 60 + 	mva:rne CODEORIGIN+$02C6+23-256,y adr.S+23-256,y+
  8389
  8390 				; optimize OK (test\tools\artur\artur.pas), line = 1195
  8391
  8392 4F7C A9 02			lda #$02
  8393 4F7E 8D 37 63			sta WRITESXY.X
  8394 4F81 A9 0B			lda #$0B
  8395 4F83 8D 38 63			sta WRITESXY.Y
  8396 4F86 20 CE 3E			jsr WRITESXY
  8397 4F89 A0 EC			ldy #256-20
  8398 4F8B B9 F2 21 99 84 60 + 	mva:rne CODEORIGIN+$02DE+20-256,y adr.S+20-256,y+
  8399
  8400 				; optimize OK (test\tools\artur\artur.pas), line = 1197
  8401
  8402 4F94 A9 02			lda #$02
  8403 4F96 8D 37 63			sta WRITESXY.X
  8404 4F99 A9 0D			lda #$0D
  8405 4F9B 8D 38 63			sta WRITESXY.Y
  8406 4F9E 20 CE 3E			jsr WRITESXY
  8407 4FA1 A0 E8			ldy #256-24
  8408 4FA3 B9 0B 22 99 88 60 + 	mva:rne CODEORIGIN+$02F3+24-256,y adr.S+24-256,y+
  8409
  8410 				; optimize OK (test\tools\artur\artur.pas), line = 1199
  8411
  8412 4FAC A9 02			lda #$02
  8413 4FAE 8D 37 63			sta WRITESXY.X
  8414 4FB1 A9 0F			lda #$0F
  8415 4FB3 8D 38 63			sta WRITESXY.Y
  8416 4FB6 20 CE 3E			jsr WRITESXY
  8417 4FB9 A0 F4			ldy #256-12
  8418 4FBB B9 18 22 99 7C 60 + 	mva:rne CODEORIGIN+$030C+12-256,y adr.S+12-256,y+
  8419
  8420 				; optimize OK (test\tools\artur\artur.pas), line = 1201
  8421
  8422 4FC4 A9 02			lda #$02
  8423 4FC6 8D 37 63			sta WRITESXY.X
  8424 4FC9 A9 11			lda #$11
  8425 4FCB 8D 38 63			sta WRITESXY.Y
  8426 4FCE 20 CE 3E			jsr WRITESXY
  8427 4FD1 A0 EC			ldy #256-20
  8428 4FD3 B9 2D 22 99 84 60 + 	mva:rne CODEORIGIN+$0319+20-256,y adr.S+20-256,y+
  8429
  8430 				; optimize OK (test\tools\artur\artur.pas), line = 1203
  8431
  8432 4FDC A9 02			lda #$02
  8433 4FDE 8D 37 63			sta WRITESXY.X
  8434 4FE1 A9 15			lda #$15
  8435 4FE3 8D 38 63			sta WRITESXY.Y
  8436 4FE6 20 CE 3E			jsr WRITESXY
  8437
  8438 				; optimize OK (test\tools\artur\artur.pas), line = 1205
  8439
  8440 4FE9 A9 00			lda #$00
  8441 4FEB 8D 75 63			sta DONE
  8442
  8443 				; optimize OK (test\tools\artur\artur.pas), line = 1206
  8444
  8445 4FEE 8D 9B 63			sta DIRPAGE
  8446
  8447 				; optimize OK (test\tools\artur\artur.pas), line = 1207
  8448
  8449 4FF1 8D 9C 63			sta NEXT
  8450
  8451 				; optimize OK (test\tools\artur\artur.pas), line = 1208
  8452
  8453 4FF4 AD 9B 63			lda DIRPAGE
  8454 4FF7 20 93 4D			jsr SHOWDIR
  8455
  8456 				; --- RepeatUntilProlog
  8457 4FFA			l_2057
  8458
  8459 				; optimize FAIL ('CRT.READKEY', test\tools\artur\artur.pas), line = 1211
  8460
  8461 4FFA 20 AB 2A			jsr CRT.READKEY
  8462 4FFD AD E6 58			lda CRT.READKEY.RESULT
  8463 5000 8D 99 61			sta C
  8464
  8465 				; optimize OK (test\tools\artur\artur.pas), line = 1212
  8466
  8467 5003 C9 6E			cmp #$6E
  8468 5005 D0 08			jne l_206D
  8469
  8470 				; optimize FAIL ('CLEARBUFFER', test\tools\artur\artur.pas), line = 1213
  8471
  8472 5007 20 D7 35			jsr CLEARBUFFER
  8473
  8474 				; optimize OK (test\tools\artur\artur.pas), line = 1214
  8475
  8476 500A A9 01			lda #$01
  8477 500C 8D 75 63			sta DONE
  8478 500F			l_206D
  8479
  8480 				; optimize OK (test\tools\artur\artur.pas), line = 1216
  8481
  8482 500F AD 99 61			lda C
  8483 5012 C9 6C			cmp #$6C
  8484 5014 D0 2C			jne l_2087
  8485
  8486 				; optimize OK (test\tools\artur\artur.pas), line = 1217
  8487
  8488 5016 A9 02			lda #$02
  8489 5018 8D 41 63			sta GETFILENAME.X
  8490 501B A9 08			lda #$08
  8491 501D 8D 42 63			sta GETFILENAME.Y
  8492 5020 20 BF 3F			jsr GETFILENAME
  8493
  8494 				; optimize OK (test\tools\artur\artur.pas), line = 1218
  8495
  8496 5023 A9 00			lda #$00
  8497 5025 8D 64 63			sta LOADDATA.BUF
  8498 5028 A9 78			lda #$78
  8499 502A 8D 65 63			sta LOADDATA.BUF+1
  8500 502D A9 C0			lda #$C0
  8501 502F 8D 66 63			sta LOADDATA.SIZE
  8502 5032 A9 03			lda #$03
  8503 5034 8D 67 63			sta LOADDATA.SIZE+1
  8504 5037 20 50 48			jsr LOADDATA
  8505
  8506 				; optimize FAIL ('INITUNDOSTORAGE', test\tools\artur\artur.pas), line = 1219
  8507
  8508 503A 20 1E 33			jsr INITUNDOSTORAGE
  8509
  8510 				; optimize OK (test\tools\artur\artur.pas), line = 1220
  8511
  8512 503D A9 01			lda #$01
  8513 503F 8D 75 63			sta DONE
  8514 5042			l_2087
  8515
  8516 				; optimize OK (test\tools\artur\artur.pas), line = 1222
  8517
  8518 5042 AD 99 61			lda C
  8519 5045 C9 73			cmp #$73
  8520 5047 D0 29			jne l_20A7
  8521
  8522 				; optimize OK (test\tools\artur\artur.pas), line = 1223
  8523
  8524 5049 A9 02			lda #$02
  8525 504B 8D 41 63			sta GETFILENAME.X
  8526 504E A9 0A			lda #$0A
  8527 5050 8D 42 63			sta GETFILENAME.Y
  8528 5053 20 BF 3F			jsr GETFILENAME
  8529
  8530 				; optimize OK (test\tools\artur\artur.pas), line = 1224
  8531
  8532 5056 A9 00			lda #$00
  8533 5058 8D 68 63			sta SAVEDATA.BUF
  8534 505B A9 78			lda #$78
  8535 505D 8D 69 63			sta SAVEDATA.BUF+1
  8536 5060 A9 C0			lda #$C0
  8537 5062 8D 6A 63			sta SAVEDATA.SIZE
  8538 5065 A9 03			lda #$03
  8539 5067 8D 6B 63			sta SAVEDATA.SIZE+1
  8540 506A 20 BF 48			jsr SAVEDATA
  8541
  8542 				; optimize OK (test\tools\artur\artur.pas), line = 1225
  8543
  8544 506D A9 01			lda #$01
  8545 506F 8D 75 63			sta DONE
  8546 5072			l_20A7
  8547
  8548 				; optimize OK (test\tools\artur\artur.pas), line = 1227
  8549
  8550 5072 AD 99 61			lda C
  8551 5075 C9 78			cmp #$78
  8552 5077 D0 15			jne l_20C6
  8553
  8554 				; optimize OK (test\tools\artur\artur.pas), line = 1228
  8555
  8556 5079 A9 02			lda #$02
  8557 507B 8D 41 63			sta GETFILENAME.X
  8558 507E A9 0C			lda #$0C
  8559 5080 8D 42 63			sta GETFILENAME.Y
  8560 5083 20 BF 3F			jsr GETFILENAME
  8561
  8562 				; optimize FAIL ('SAVEBINARY', test\tools\artur\artur.pas), line = 1229
  8563
  8564 5086 20 00 4B			jsr SAVEBINARY
  8565
  8566 				; optimize OK (test\tools\artur\artur.pas), line = 1230
  8567
  8568 5089 A9 01			lda #$01
  8569 508B 8D 75 63			sta DONE
  8570 508E			l_20C6
  8571
  8572 				; optimize OK (test\tools\artur\artur.pas), line = 1232
  8573
  8574 508E AD 99 61			lda C
  8575 5091 C9 63			cmp #$63
  8576 5093 D0 29			jne l_20E3
  8577
  8578 				; optimize OK (test\tools\artur\artur.pas), line = 1233
  8579
  8580 5095 A9 02			lda #$02
  8581 5097 8D 41 63			sta GETFILENAME.X
  8582 509A A9 0E			lda #$0E
  8583 509C 8D 42 63			sta GETFILENAME.Y
  8584 509F 20 BF 3F			jsr GETFILENAME
  8585
  8586 				; optimize OK (test\tools\artur\artur.pas), line = 1234
  8587
  8588 50A2 A9 00			lda #$00
  8589 50A4 8D 64 63			sta LOADDATA.BUF
  8590 50A7 A9 74			lda #$74
  8591 50A9 8D 65 63			sta LOADDATA.BUF+1
  8592 50AC A9 00			lda #$00
  8593 50AE 8D 66 63			sta LOADDATA.SIZE
  8594 50B1 A9 04			lda #$04
  8595 50B3 8D 67 63			sta LOADDATA.SIZE+1
  8596 50B6 20 50 48			jsr LOADDATA
  8597
  8598 				; optimize OK (test\tools\artur\artur.pas), line = 1235
  8599
  8600 50B9 A9 01			lda #$01
  8601 50BB 8D 75 63			sta DONE
  8602 50BE			l_20E3
  8603
  8604 				; optimize OK (test\tools\artur\artur.pas), line = 1237
  8605
  8606 50BE AD 99 61			lda C
  8607 50C1 C9 64			cmp #$64
  8608 50C3 D0 20			jne l_2102
  8609
  8610 				; optimize OK (test\tools\artur\artur.pas), line = 1238
  8611
  8612 50C5 A9 00			lda #$00
  8613 50C7 85 88			sta SYSTEM.MOVE_0458.SOURCE
  8614 50C9 A9 E0			lda #$E0
  8615 50CB 85 89			sta SYSTEM.MOVE_0458.SOURCE+1
  8616 50CD A9 00			lda #$00
  8617 50CF 85 8C			sta SYSTEM.MOVE_0458.DEST
  8618 50D1 A9 74			lda #$74
  8619 50D3 85 8D			sta SYSTEM.MOVE_0458.DEST+1
  8620 50D5 A9 00			lda #$00
  8621 50D7 85 84			sta SYSTEM.MOVE_0458.COUNT
  8622 50D9 A9 04			lda #$04
  8623 50DB 85 85			sta SYSTEM.MOVE_0458.COUNT+1
  8624 50DD				.local +MAIN.SYSTEM.MOVE_0458
  8625 50DD				m@INLINE
Macro: MAIN.SYSTEM.MOVE_0458.M@INLINE [Source: artur.a65]
     4 50DD 20 74 27			jsr @move
Source: artur.a65
  8626 					.endl
  8627
  8628 				; optimize OK (test\tools\artur\artur.pas), line = 1239
  8629
  8630 50E0 A9 01			lda #$01
  8631 50E2 8D 75 63			sta DONE
  8632 50E5			l_2102
  8633
  8634 				; optimize OK (test\tools\artur\artur.pas), line = 1241
  8635
  8636 50E5 AD 99 61			lda C
  8637 50E8 C9 71			cmp #$71
  8638 50EA D0 0A			jne l_211F
  8639
  8640 				; optimize OK (test\tools\artur\artur.pas), line = 1242
  8641
  8642 50EC A9 FF			lda #$FF
  8643 50EE 8D B0 61			sta MODE
  8644
  8645 				; optimize OK (test\tools\artur\artur.pas), line = 1243
  8646
  8647 50F1 A9 01			lda #$01
  8648 50F3 8D 75 63			sta DONE
  8649 50F6			l_211F
  8650
  8651 				; optimize OK (test\tools\artur\artur.pas), line = 1245
  8652
  8653 50F6 AD 99 61			lda C
  8654 50F9 C9 3E			cmp #$3E
  8655 50FB D0 0E			jne l_213C
  8656 50FD AD 9C 63			lda NEXT
  8657 5100 D0 09			jne l_214F
  8658
  8659 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 1246
  8660
  8661 5102 EE 9B 63			inc DIRPAGE
  8662
  8663 				; optimize OK (test\tools\artur\artur.pas), line = 1247
  8664
  8665 5105 AD 9B 63			lda DIRPAGE
  8666 5108 20 93 4D			jsr SHOWDIR
  8667 510B			l_214F
  8668 510B			l_213C
  8669
  8670 				; optimize OK (test\tools\artur\artur.pas), line = 1249
  8671
  8672 510B AD 99 61			lda C
  8673 510E C9 3C			cmp #$3C
  8674 5110 D0 0E			jne l_216E
  8675 5112 AD 9B 63			lda DIRPAGE
  8676 5115 F0 09			jeq l_2181
  8677
  8678 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 1250
  8679
  8680 5117 CE 9B 63			dec DIRPAGE
  8681
  8682 				; optimize OK (test\tools\artur\artur.pas), line = 1251
  8683
  8684 511A AD 9B 63			lda DIRPAGE
  8685 511D 20 93 4D			jsr SHOWDIR
  8686 5120			l_2181
  8687 5120			l_216E
  8688
  8689 				; optimize OK (test\tools\artur\artur.pas), line = 1253
  8690
  8691 5120 AD 99 61			lda C
  8692 5123 C9 1B			cmp #$1B
  8693 5125 D0 05			jne l_21A0
  8694 5127 A9 01			lda #$01
  8695 5129 8D 75 63			sta DONE
  8696 512C			l_21A0
  8697
  8698 				; optimize OK (test\tools\artur\artur.pas), line = 1254
  8699
  8700 512C AD 75 63			lda DONE
  8701 512F D0 03 4C FA 4F		jeq l_2057
  8702
  8703 				; optimize FAIL ('CLOSEMODAL', test\tools\artur\artur.pas), line = 1255
  8704
  8705 5134 20 2B 41			jsr CLOSEMODAL
  8706
  8707 				; ------------------------------------------------------------
  8708
  8709 = 0001			IO_X	= $01
  8710 = 0001			IO_Y	= $01
  8711 = 0026			IO_W	= $26
  8712 = 0016			IO_H	= $16
  8713 = 6375			DONE	= DATAORIGIN+$0AC5
  8714 = 6376			adr.INFO	= DATAORIGIN+$0AC6	; [37] RECORD
  8715 5137			.var INFO	= adr.INFO .word
  8716 = 6376			INFO.ATTR	= DATAORIGIN+$0AC6
  8717 = 6377			INFO.EXCLUDEATTR	= DATAORIGIN+$0AC7
  8718 = 6378			adr.INFO.NAME	= [DATAORIGIN+$0AC8] .array [33]
  8719 5137			.var INFO.NAME	= adr.INFO.NAME .word
  8720 = 6399			INFO.FINDHANDLE	= DATAORIGIN+$0AE9
  8721 = 639B			DIRPAGE	= DATAORIGIN+$0AEB
  8722 = 639C			NEXT	= DATAORIGIN+$0AEC
  8723
  8724 = 6375			@VarData	= DONE
  8725 = 0028			@VarDataSize	= 40
  8726
  8727 5137			@exit
  8728 					.ifdef @new
  8729 					lda <@VarData
  8730 					sta :ztmp
  8731 					lda >@VarData
  8732 					ldy #@VarDataSize-1
  8733 					jmp @FreeMem
  8734 					els
  8735 5137 60				rts						; ret
  8736 					eif
  8737 = 5138 76 63		INFO
  8737 = 513A 78 63		INFO.NAME
  8737 				.endl
  8738
  8739 513C			.local	SHOWSETTINGS					; PROCEDURE
  8740
  8741 				; optimize FAIL ('OPENMODAL', test\tools\artur\artur.pas), line = 1265
  8742
  8743 513C 20 1A 41			jsr OPENMODAL
  8744
  8745 				; optimize OK (test\tools\artur\artur.pas), line = 1266
  8746
  8747 513F A9 05			lda #$05
  8748 5141 8D 11 63			sta DRAWRECT.X
  8749 5144 A9 02			lda #$02
  8750 5146 8D 12 63			sta DRAWRECT.Y
  8751 5149 A9 1E			lda #$1E
  8752 514B 8D 13 63			sta DRAWRECT.W
  8753 514E A9 14			lda #$14
  8754 5150 8D 14 63			sta DRAWRECT.H
  8755 5153 A9 80			lda #$80
  8756 5155 8D 15 63			sta DRAWRECT.C
  8757 5158 20 27 36			jsr DRAWRECT
  8758 515B A0 F0			ldy #256-16
  8759 515D B9 3E 22 99 80 60 + 	mva:rne CODEORIGIN+$032E+16-256,y adr.S+16-256,y+
  8760
  8761 				; optimize OK (test\tools\artur\artur.pas), line = 1268
  8762
  8763 5166 A9 06			lda #$06
  8764 5168 8D 37 63			sta WRITESXY.X
  8765 516B A9 03			lda #$03
  8766 516D 8D 38 63			sta WRITESXY.Y
  8767 5170 20 CE 3E			jsr WRITESXY
  8768 5173 A0 E3			ldy #256-29
  8769 5175 B9 97 20 99 8D 60 + 	mva:rne CODEORIGIN+$017A+29-256,y adr.S+29-256,y+
  8770
  8771 				; optimize OK (test\tools\artur\artur.pas), line = 1270
  8772
  8773 517E A9 06			lda #$06
  8774 5180 8D 37 63			sta WRITESXY.X
  8775 5183 A9 04			lda #$04
  8776 5185 8D 38 63			sta WRITESXY.Y
  8777 5188 20 CE 3E			jsr WRITESXY
  8778
  8779 				; --- RepeatUntilProlog
  8780 518B			l_21C1
  8781 518B A0 EC			ldy #256-20
  8782 518D B9 53 22 99 84 60 + 	mva:rne CODEORIGIN+$033F+20-256,y adr.S+20-256,y+
  8783
  8784 				; optimize OK (test\tools\artur\artur.pas), line = 1274
  8785
  8786 5196 A9 06			lda #$06
  8787 5198 8D 37 63			sta WRITESXY.X
  8788 519B 8D 38 63			sta WRITESXY.Y
  8789 519E 20 CE 3E			jsr WRITESXY
  8790
  8791 				; optimize OK (test\tools\artur\artur.pas), line = 1275
  8792
  8793 51A1 AD 69 61			lda CONFIG.EDITORBACKGROUNDCOLOR
  8794 51A4 85 88			sta SYSTEM.HEXSTR.VALUE
  8795 51A6 A9 00			lda #$00
  8796 51A8 85 89			sta SYSTEM.HEXSTR.VALUE+1
  8797 51AA 85 8A			sta SYSTEM.HEXSTR.VALUE+2
  8798 51AC 85 8B			sta SYSTEM.HEXSTR.VALUE+3
  8799 51AE A9 02			lda #$02
  8800 51B0 85 8C			sta SYSTEM.HEXSTR.DIGITS
  8801 51B2 20 F6 29			jsr SYSTEM.HEXSTR
  8802 51B5 E8				inx
  8803 51B6 AD 05 2A 95 94		mva SYSTEM.HEXSTR.RESULT :STACKORIGIN,x
  8804 51BB AD 06 2A 95 A4		mva SYSTEM.HEXSTR.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  8805 51C0 20 12 2D			jsr B_CRT.ATASCII2ANTIC_0549
  8806 51C3 E8				inx
  8807 51C4 AD 67 2D			lda B_CRT.ATASCII2ANTIC_0549.RESULT
  8808 51C7 85 88			sta @move.src
  8809 51C9 AD 68 2D			lda B_CRT.ATASCII2ANTIC_0549.RESULT+1
  8810 51CC 85 89			sta @move.src+1
  8811 					@moveSTRING S #41
  8811 				 MWA S @MOVE.DST\ MWA #41 @MOVE.CNT\ JSR @MOVESTRING
  8811 51CE AD A1 58 85 8C AD +  MWA S @MOVE.DST
  8811 51D8 A9 29 85 84 A9 00 +  MWA #41 @MOVE.CNT
  8811 51E0 20 11 28		 JSR @MOVESTRING
  8812 51E3 CA				dex
  8813
  8814 				; optimize OK (test\tools\artur\artur.pas), line = 1276
  8815
  8816 51E4 A9 19			lda #$19
  8817 51E6 8D 37 63			sta WRITESXY.X
  8818 51E9 A9 06			lda #$06
  8819 51EB 8D 38 63			sta WRITESXY.Y
  8820 51EE 20 CE 3E			jsr WRITESXY
  8821 51F1 A0 EC			ldy #256-20
  8822 51F3 B9 68 22 99 84 60 + 	mva:rne CODEORIGIN+$0354+20-256,y adr.S+20-256,y+
  8823
  8824 				; optimize OK (test\tools\artur\artur.pas), line = 1279
  8825
  8826 51FC A9 06			lda #$06
  8827 51FE 8D 37 63			sta WRITESXY.X
  8828 5201 A9 08			lda #$08
  8829 5203 8D 38 63			sta WRITESXY.Y
  8830 5206 20 CE 3E			jsr WRITESXY
  8831
  8832 				; optimize OK (test\tools\artur\artur.pas), line = 1280
  8833
  8834 5209 AD 6A 61			lda CONFIG.EDITORFOREGROUNDCOLOR
  8835 520C 85 88			sta SYSTEM.HEXSTR.VALUE
  8836 520E A9 00			lda #$00
  8837 5210 85 89			sta SYSTEM.HEXSTR.VALUE+1
  8838 5212 85 8A			sta SYSTEM.HEXSTR.VALUE+2
  8839 5214 85 8B			sta SYSTEM.HEXSTR.VALUE+3
  8840 5216 A9 02			lda #$02
  8841 5218 85 8C			sta SYSTEM.HEXSTR.DIGITS
  8842 521A 20 F6 29			jsr SYSTEM.HEXSTR
  8843 521D E8				inx
  8844 521E AD 05 2A 95 94		mva SYSTEM.HEXSTR.RESULT :STACKORIGIN,x
  8845 5223 AD 06 2A 95 A4		mva SYSTEM.HEXSTR.RESULT+1 :STACKORIGIN+STACKWIDTH,x
  8846 5228 20 12 2D			jsr B_CRT.ATASCII2ANTIC_0549
  8847 522B E8				inx
  8848 522C AD 67 2D			lda B_CRT.ATASCII2ANTIC_0549.RESULT
  8849 522F 85 88			sta @move.src
  8850 5231 AD 68 2D			lda B_CRT.ATASCII2ANTIC_0549.RESULT+1
  8851 5234 85 89			sta @move.src+1
  8852 					@moveSTRING S #41
  8852 				 MWA S @MOVE.DST\ MWA #41 @MOVE.CNT\ JSR @MOVESTRING
  8852 5236 AD A1 58 85 8C AD +  MWA S @MOVE.DST
  8852 5240 A9 29 85 84 A9 00 +  MWA #41 @MOVE.CNT
  8852 5248 20 11 28		 JSR @MOVESTRING
  8853 524B CA				dex
  8854
  8855 				; optimize OK (test\tools\artur\artur.pas), line = 1281
  8856
  8857 524C A9 19			lda #$19
  8858 524E 8D 37 63			sta WRITESXY.X
  8859 5251 A9 08			lda #$08
  8860 5253 8D 38 63			sta WRITESXY.Y
  8861 5256 20 CE 3E			jsr WRITESXY
  8862 5259 A0 EA			ldy #256-22
  8863 525B B9 7F 22 99 86 60 + 	mva:rne CODEORIGIN+$0369+22-256,y adr.S+22-256,y+
  8864
  8865 				; optimize OK (test\tools\artur\artur.pas), line = 1284
  8866
  8867 5264 A9 06			lda #$06
  8868 5266 8D 37 63			sta WRITESXY.X
  8869 5269 A9 0A			lda #$0A
  8870 526B 8D 38 63			sta WRITESXY.Y
  8871 526E 20 CE 3E			jsr WRITESXY
  8872
  8873 				; optimize OK (test\tools\artur\artur.pas), line = 1285
  8874
  8875 5271 AD 6B 61			lda CONFIG.ARROWSRAW
  8876 5274 F0 0E			jeq l_21E8
  8877 5276 A0 FC			ldy #256-4
  8878 5278 B9 84 22 99 74 60 + 	mva:rne CODEORIGIN+$0380+4-256,y adr.S+4-256,y+
  8879 5281 4C 8F 52			jmp l_21F2
  8880 5284			l_21E8
  8881 5284 A0 FC			ldy #256-4
  8882 5286 B9 89 22 99 74 60 + 	mva:rne CODEORIGIN+$0385+4-256,y adr.S+4-256,y+
  8883 528F			l_21F2
  8884
  8885 				; optimize OK (test\tools\artur\artur.pas), line = 1287
  8886
  8887 528F A9 1B			lda #$1B
  8888 5291 8D 37 63			sta WRITESXY.X
  8889 5294 A9 0A			lda #$0A
  8890 5296 8D 38 63			sta WRITESXY.Y
  8891 5299 20 CE 3E			jsr WRITESXY
  8892 529C A0 ED			ldy #256-19
  8893 529E B9 9D 22 99 83 60 + 	mva:rne CODEORIGIN+$038A+19-256,y adr.S+19-256,y+
  8894
  8895 				; optimize OK (test\tools\artur\artur.pas), line = 1290
  8896
  8897 52A7 A9 06			lda #$06
  8898 52A9 8D 37 63			sta WRITESXY.X
  8899 52AC A9 0C			lda #$0C
  8900 52AE 8D 38 63			sta WRITESXY.Y
  8901 52B1 20 CE 3E			jsr WRITESXY
  8902 52B4 A0 F8			ldy #256-8
  8903 52B6 B9 A6 22 99 78 60 + 	mva:rne CODEORIGIN+$039E+8-256,y adr.S+8-256,y+
  8904
  8905 				; optimize OK (test\tools\artur\artur.pas), line = 1292
  8906
  8907 52BF AD 6C 61			lda CONFIG.KEYCODEDISPLAY
  8908 52C2 C9 02			cmp #$02
  8909 52C4 D0 0B			jne l_220A
  8910 52C6 A0 F8			ldy #256-8
  8911 52C8 B9 AF 22 99 78 60 + 	mva:rne CODEORIGIN+$03A7+8-256,y adr.S+8-256,y+
  8912 52D1			l_220A
  8913
  8914 				; optimize OK (test\tools\artur\artur.pas), line = 1293
  8915
  8916 52D1 AD 6C 61			lda CONFIG.KEYCODEDISPLAY
  8917 52D4 C9 01			cmp #$01
  8918 52D6 D0 0B			jne l_221F
  8919 52D8 A0 F8			ldy #256-8
  8920 52DA B9 B8 22 99 78 60 + 	mva:rne CODEORIGIN+$03B0+8-256,y adr.S+8-256,y+
  8921 52E3			l_221F
  8922
  8923 				; optimize OK (test\tools\artur\artur.pas), line = 1294
  8924
  8925 52E3 A9 18			lda #$18
  8926 52E5 8D 37 63			sta WRITESXY.X
  8927 52E8 A9 0C			lda #$0C
  8928 52EA 8D 38 63			sta WRITESXY.Y
  8929 52ED 20 CE 3E			jsr WRITESXY
  8930 52F0 A0 F4			ldy #256-12
  8931 52F2 B9 C5 22 99 7C 60 + 	mva:rne CODEORIGIN+$03B9+12-256,y adr.S+12-256,y+
  8932
  8933 				; optimize OK (test\tools\artur\artur.pas), line = 1297
  8934
  8935 52FB A9 06			lda #$06
  8936 52FD 8D 37 63			sta WRITESXY.X
  8937 5300 A9 0E			lda #$0E
  8938 5302 8D 38 63			sta WRITESXY.Y
  8939 5305 20 CE 3E			jsr WRITESXY
  8940 5308 A0 ED			ldy #256-19
  8941 530A B9 D9 22 99 83 60 + 	mva:rne CODEORIGIN+$03C6+19-256,y adr.S+19-256,y+
  8942
  8943 				; optimize OK (test\tools\artur\artur.pas), line = 1300
  8944
  8945 5313 A9 06			lda #$06
  8946 5315 8D 37 63			sta WRITESXY.X
  8947 5318 A9 14			lda #$14
  8948 531A 8D 38 63			sta WRITESXY.Y
  8949 531D 20 CE 3E			jsr WRITESXY
  8950
  8951 				; optimize FAIL ('CRT.READKEY', test\tools\artur\artur.pas), line = 1302
  8952
  8953 5320 20 AB 2A			jsr CRT.READKEY
  8954 5323 AD E6 58			lda CRT.READKEY.RESULT
  8955 5326 8D 99 61			sta C
  8956
  8957 				; optimize OK (test\tools\artur\artur.pas), line = 1303
  8958
  8959 5329 C9 61			cmp #$61
  8960 532B D0 0C			jne l_2241
  8961 532D A0 01			ldy #1
  8962 532F AD 6B 61			lda CONFIG.ARROWSRAW
  8963 5332 F0 01			beq @+
  8964 5334 88				dey
  8965 				@
  8966 5335 98				tya
  8967 5336 8D 6B 61			sta CONFIG.ARROWSRAW
  8968 5339			l_2241
  8969
  8970 				; optimize OK (test\tools\artur\artur.pas), line = 1304
  8971
  8972 5339 AD 99 61			lda C
  8973 533C C9 62			cmp #$62
  8974 533E D0 19			jne l_225F
  8975 5340 A9 19			lda #$19
  8976 5342 8D 3B 63			sta GETHEXVAL.X
  8977 5345 A9 06			lda #$06
  8978 5347 8D 3C 63			sta GETHEXVAL.Y
  8979 534A AD 69 61			lda CONFIG.EDITORBACKGROUNDCOLOR
  8980 534D 8D 3D 63			sta GETHEXVAL.DEFAULT
  8981 5350 20 04 3F			jsr GETHEXVAL
  8982 5353 AD 3E 63			lda GETHEXVAL.RESULT
  8983 5356 8D 69 61			sta CONFIG.EDITORBACKGROUNDCOLOR
  8984 5359			l_225F
  8985
  8986 				; optimize OK (test\tools\artur\artur.pas), line = 1305
  8987
  8988 5359 AD 99 61			lda C
  8989 535C C9 66			cmp #$66
  8990 535E D0 19			jne l_227D
  8991 5360 A9 19			lda #$19
  8992 5362 8D 3B 63			sta GETHEXVAL.X
  8993 5365 A9 08			lda #$08
  8994 5367 8D 3C 63			sta GETHEXVAL.Y
  8995 536A AD 6A 61			lda CONFIG.EDITORFOREGROUNDCOLOR
  8996 536D 8D 3D 63			sta GETHEXVAL.DEFAULT
  8997 5370 20 04 3F			jsr GETHEXVAL
  8998 5373 AD 3E 63			lda GETHEXVAL.RESULT
  8999 5376 8D 6A 61			sta CONFIG.EDITORFOREGROUNDCOLOR
  9000 5379			l_227D
  9001
  9002 				; optimize OK (test\tools\artur\artur.pas), line = 1306
  9003
  9004 5379 AD 99 61			lda C
  9005 537C C9 63			cmp #$63
  9006 537E D0 0F			jne l_229B
  9007
  9008 				; optimize FAIL (0, test\tools\artur\artur.pas), line = 1307
  9009
  9010 5380 EE 6C 61			inc CONFIG.KEYCODEDISPLAY
  9011
  9012 				; optimize OK (test\tools\artur\artur.pas), line = 1308
  9013
  9014 5383 AD 6C 61			lda CONFIG.KEYCODEDISPLAY
  9015 5386 C9 03			cmp #$03
  9016 5388 D0 05			jne l_22B2
  9017 538A A9 00			lda #$00
  9018 538C 8D 6C 61			sta CONFIG.KEYCODEDISPLAY
  9019 538F			l_22B2
  9020 538F			l_229B
  9021
  9022 				; optimize OK (test\tools\artur\artur.pas), line = 1310
  9023
  9024 538F AD 99 61			lda C
  9025 5392 C9 73			cmp #$73
  9026 5394 D0 15			jne l_22CD
  9027
  9028 				; optimize OK (test\tools\artur\artur.pas), line = 1311
  9029
  9030 5396 A9 06			lda #$06
  9031 5398 8D 45 5E			sta B_CRT.CRT_GOTOXY.X
  9032 539B A9 0E			lda #$0E
  9033 539D 8D 46 5E			sta B_CRT.CRT_GOTOXY.Y
  9034 53A0 20 FC 2D			jsr B_CRT.CRT_GOTOXY
  9035
  9036 				; optimize FAIL ('SAVECONFIG', test\tools\artur\artur.pas), line = 1312
  9037
  9038 53A3 20 C9 49			jsr SAVECONFIG
  9039
  9040 				; optimize OK (test\tools\artur\artur.pas), line = 1313
  9041
  9042 53A6 A9 1B			lda #$1B
  9043 53A8 8D 99 61			sta C
  9044 53AB			l_22CD
  9045
  9046 				; optimize OK (test\tools\artur\artur.pas), line = 1315
  9047
  9048 53AB AD 99 61			lda C
  9049 53AE C9 1B			cmp #$1B
  9050 53B0 F0 03 4C 8B 51		jne l_21C1
  9051
  9052 				; optimize FAIL ('CLOSEMODAL', test\tools\artur\artur.pas), line = 1317
  9053
  9054 53B5 20 2B 41			jsr CLOSEMODAL
  9055
  9056 				; ------------------------------------------------------------
  9057
  9058 = 0005			OPT_X	= $05
  9059 = 0002			OPT_Y	= $02
  9060 = 001E			OPT_W	= $1E
  9061 = 0014			OPT_H	= $14
  9062 53B8			@exit
  9063 					.ifdef @new
  9064 					lda <@VarData
  9065 					sta :ztmp
  9066 					lda >@VarData
  9067 					ldy #@VarDataSize-1
  9068 					jmp @FreeMem
  9069 					els
  9070 53B8 60				rts						; ret
  9071 					eif
  9072 				.endl
  9073 53B9			l_03E1
  9074
  9075 				; optimize FAIL ('SYSTEM.PAUSE_0479', test\tools\artur\artur.pas), line = 1332
  9076
  9077 53B9 20 A0 2A			jsr SYSTEM.PAUSE_0479
  9078
  9079 53BC AD 24 02			lda VVBLKD
  9080 53BF 8D AC 61			sta OLDVBL
  9081 53C2 AD 25 02			lda VVBLKD+1
  9082 53C5 8D AD 61			sta OLDVBL+1
  9083
  9084 53C8 AD 00 02			lda VDSLST
  9085 53CB 8D AE 61			sta OLDDLI
  9086 53CE AD 01 02			lda VDSLST+1
  9087 53D1 8D AF 61			sta OLDDLI+1
  9088
  9089 				; optimize OK (test\tools\artur\artur.pas), line = 1335
  9090
  9091 53D4 A9 F7			lda <VBL
  9092 53D6 A0 05			ldy #5
  9093 53D8 8D 0A D4			sta wsync
  9094 53DB 88				dey
  9095 53DC D0 FD			rne
  9096 53DE 8D 24 02			sta VVBLKD
  9097 53E1 A9 30			lda >VBL
  9098 53E3 8D 25 02			sta VVBLKD+1
  9099
  9100 				; optimize OK (test\tools\artur\artur.pas), line = 1336
  9101
  9102 53E6 A9 8D 8D 00 02		mva <DLI VDSLST
  9103 53EB A9 30 8D 01 02		mva >DLI VDSLST+1
  9104
  9105 				; optimize OK (test\tools\artur\artur.pas), line = 1337
  9106
  9107 53F0 A9 00			lda #$00
  9108 53F2 8D 30 02			sta ATARI.SDLSTL
  9109 53F5 A9 70			lda #$70
  9110 53F7 8D 31 02			sta ATARI.SDLSTL+1
  9111
  9112 				; optimize OK (test\tools\artur\artur.pas), line = 1338
  9113
  9114 53FA A9 C0			lda #$C0
  9115 53FC 8D 0E D4			sta ATARI.NMIEN
  9116
  9117 				; optimize OK (test\tools\artur\artur.pas), line = 1339
  9118
  9119 53FF A9 00			lda #$00
  9120 5401 8D 41 5E			sta B_CRT.CRT_INIT_05BF.VRAM_ADDRESS
  9121 5404 A9 7C			lda #$7C
  9122 5406 8D 42 5E			sta B_CRT.CRT_INIT_05BF.VRAM_ADDRESS+1
  9123 5409 A9 28			lda #$28
  9124 540B 8D 43 5E			sta B_CRT.CRT_INIT_05BF.WIDTH
  9125 540E A9 18			lda #$18
  9126 5410 8D 44 5E			sta B_CRT.CRT_INIT_05BF.HEIGHT
  9127 5413 20 C0 2D			jsr B_CRT.CRT_INIT_05BF
  9128
  9129 				; optimize OK (test\tools\artur\artur.pas), line = 1341
  9130
  9131 5416 A9 00			lda #$00
  9132 5418 85 88			sta SYSTEM.MOVE_0458.SOURCE
  9133 541A A9 E0			lda #$E0
  9134 541C 85 89			sta SYSTEM.MOVE_0458.SOURCE+1
  9135 541E A9 00			lda #$00
  9136 5420 85 8C			sta SYSTEM.MOVE_0458.DEST
  9137 5422 A9 74			lda #$74
  9138 5424 85 8D			sta SYSTEM.MOVE_0458.DEST+1
  9139 5426 A9 00			lda #$00
  9140 5428 85 84			sta SYSTEM.MOVE_0458.COUNT
  9141 542A A9 04			lda #$04
  9142 542C 85 85			sta SYSTEM.MOVE_0458.COUNT+1
  9143 542E				.local +MAIN.SYSTEM.MOVE_0458
  9144 542E				m@INLINE
Macro: MAIN.SYSTEM.MOVE_0458.M@INLINE [Source: artur.a65]
     4 542E 20 74 27			jsr @move
Source: artur.a65
  9145 					.endl
  9146
  9147 				; optimize OK (test\tools\artur\artur.pas), line = 1342
  9148
  9149 5431 A9 74			lda #$74
  9150 5433 8D BC 61			sta EDITORCHARSET
  9151
  9152 				; optimize OK (test\tools\artur\artur.pas), line = 1343
  9153
  9154 5436 A9 0A			lda #$0A
  9155 5438 8D D9 02			sta $02D9
  9156
  9157 				; optimize OK (test\tools\artur\artur.pas), line = 1344
  9158
  9159 543B A9 05			lda #$05
  9160 543D 8D DA 02			sta $02DA
  9161
  9162 				; optimize OK (test\tools\artur\artur.pas), line = 1346
  9163
  9164 5440 A9 92			lda #$92
  9165 5442 8D 69 61			sta CONFIG.EDITORBACKGROUNDCOLOR
  9166
  9167 				; optimize OK (test\tools\artur\artur.pas), line = 1347
  9168
  9169 5445 A9 9A			lda #$9A
  9170 5447 8D 6A 61			sta CONFIG.EDITORFOREGROUNDCOLOR
  9171
  9172 				; optimize FAIL ('CLEAREDIT', test\tools\artur\artur.pas), line = 1349
  9173
  9174 544A 20 BF 35			jsr CLEAREDIT
  9175
  9176 				; optimize FAIL ('INITPMG', test\tools\artur\artur.pas), line = 1350
  9177
  9178 544D 20 C2 32			jsr INITPMG
  9179
  9180 				; optimize FAIL ('INITCURSOR', test\tools\artur\artur.pas), line = 1351
  9181
  9182 5450 20 F5 3A			jsr INITCURSOR
  9183
  9184 				; optimize FAIL ('INITUNDOSTORAGE', test\tools\artur\artur.pas), line = 1352
  9185
  9186 5453 20 1E 33			jsr INITUNDOSTORAGE
  9187
  9188 				; optimize FAIL ('LOADCONFIG', test\tools\artur\artur.pas), line = 1353
  9189
  9190 5456 20 2D 49			jsr LOADCONFIG
  9191
  9192 				; optimize FAIL ('SHOWMENUBAR', test\tools\artur\artur.pas), line = 1355
  9193
  9194 5459 20 87 38			jsr SHOWMENUBAR
  9195
  9196 				; optimize FAIL ('SHOWSTATUS', test\tools\artur\artur.pas), line = 1356
  9197
  9198 545C 20 DB 37			jsr SHOWSTATUS
  9199
  9200 				; optimize FAIL ('SHOWHELP', test\tools\artur\artur.pas), line = 1357
  9201
  9202 545F 20 D7 4B			jsr SHOWHELP
  9203
  9204 				; --- RepeatUntilProlog
  9205 5462			l_2313
  9206
  9207 				; optimize FAIL ('SYSTEM.PAUSE_0479', test\tools\artur\artur.pas), line = 1360
  9208
  9209 5462 20 A0 2A			jsr SYSTEM.PAUSE_0479
  9210
  9211 				; optimize OK (test\tools\artur\artur.pas), line = 1364
  9212
  9213 5465 AD AB 61			lda KEYREPEATCOUNTER
  9214 5468 F0 03 4C 8E 55		jne l_2326
  9215
  9216 				; optimize FAIL ('B_CRT.CRT_STARTPRESSED', test\tools\artur\artur.pas), line = 1365
  9217
  9218 546D 20 A2 2F			jsr B_CRT.CRT_STARTPRESSED
  9219 5470 AD 4F 61			lda B_CRT.CRT_STARTPRESSED.RESULT
  9220 5473 F0 03			jeq l_2331
  9221 5475 20 90 4D			jsr SHOWIOMENU
  9222 5478			l_2331
  9223
  9224 				; optimize FAIL ('B_CRT.CRT_SELECTPRESSED', test\tools\artur\artur.pas), line = 1366
  9225
  9226 5478 20 B1 2F			jsr B_CRT.CRT_SELECTPRESSED
  9227 547B AD 50 61			lda B_CRT.CRT_SELECTPRESSED.RESULT
  9228 547E F0 03			jeq l_233F
  9229 5480 20 FC 40			jsr NEXTMODE
  9230 5483			l_233F
  9231
  9232 				; optimize FAIL ('B_CRT.CRT_OPTIONPRESSED', test\tools\artur\artur.pas), line = 1367
  9233
  9234 5483 20 C0 2F			jsr B_CRT.CRT_OPTIONPRESSED
  9235 5486 AD 51 61			lda B_CRT.CRT_OPTIONPRESSED.RESULT
  9236 5489 F0 03			jeq l_234D
  9237 548B 20 3C 51			jsr SHOWSETTINGS
  9238 548E			l_234D
  9239
  9240 				; optimize FAIL ('B_CRT.CRT_HELPPRESSED', test\tools\artur\artur.pas), line = 1368
  9241
  9242 548E 20 CF 2F			jsr B_CRT.CRT_HELPPRESSED
  9243 5491 AD 52 61			lda B_CRT.CRT_HELPPRESSED.RESULT
  9244 5494 F0 03			jeq l_235B
  9245 5496 20 D7 4B			jsr SHOWHELP
  9246 5499			l_235B
  9247
  9248 				; optimize OK (test\tools\artur\artur.pas), line = 1370
  9249
  9250 5499 AD B7 61			lda KEYDOWN
  9251 549C D0 03 4C 6D 55		jeq l_236B
  9252
  9253 				; optimize OK (test\tools\artur\artur.pas), line = 1372
  9254
  9255 54A1 A9 80			lda #$80
  9256 54A3 20 6A 3E			jsr CHECKCURSORKEYS
  9257
  9258 				; optimize OK (test\tools\artur\artur.pas), line = 1373
  9259
  9260 54A6 AD 6B 61			lda CONFIG.ARROWSRAW
  9261 54A9 F0 05			jeq l_237A
  9262 54AB A9 00			lda #$00
  9263 54AD 20 6A 3E			jsr CHECKCURSORKEYS
  9264 54B0			l_237A
  9265
  9266 				; optimize OK (test\tools\artur\artur.pas), line = 1375
  9267
  9268 54B0 AD 9A 61			lda KEY
  9269 54B3 C9 27			cmp #$27
  9270 54B5 D0 1F			jne l_2391
  9271
  9272 				; optimize OK (test\tools\artur\artur.pas), line = 1376
  9273
  9274 54B7 A0 01			ldy #1
  9275 54B9 AD B9 61			lda INVERT
  9276 54BC F0 01			beq @+
  9277 54BE 88				dey
  9278 				@
  9279 54BF 98				tya
  9280 54C0 8D B9 61			sta INVERT
  9281
  9282 				; optimize OK (test\tools\artur\artur.pas), line = 1377
  9283
  9284 54C3 AD AA 61			lda BRUSH
  9285 54C6 49 80			eor #$80
  9286 54C8 8D AA 61			sta BRUSH
  9287
  9288 				; optimize FAIL ('SHOWMENUBAR', test\tools\artur\artur.pas), line = 1378
  9289
  9290 54CB 20 87 38			jsr SHOWMENUBAR
  9291
  9292 				; optimize FAIL ('SHOWSTATUS', test\tools\artur\artur.pas), line = 1379
  9293
  9294 54CE 20 DB 37			jsr SHOWSTATUS
  9295
  9296 				; optimize OK (test\tools\artur\artur.pas), line = 1380
  9297
  9298 54D1 A9 00			lda #$00
  9299 54D3 8D B7 61			sta KEYDOWN
  9300 54D6			l_2391
  9301
  9302 				; optimize OK (test\tools\artur\artur.pas), line = 1383
  9303
  9304 54D6 AD 9A 61			lda KEY
  9305 54D9 C9 3C			cmp #$3C
  9306 54DB D0 11			jne l_23BF
  9307
  9308 				; optimize FAIL ('BRUSHSELECTOR', test\tools\artur\artur.pas), line = 1384
  9309
  9310 54DD 20 7F 42			jsr BRUSHSELECTOR
  9311 54E0 AD 4B 63			lda BRUSHSELECTOR.RESULT
  9312 54E3 8D AA 61			sta BRUSH
  9313
  9314 				; optimize FAIL ('SHOWSTATUS', test\tools\artur\artur.pas), line = 1385
  9315
  9316 54E6 20 DB 37			jsr SHOWSTATUS
  9317
  9318 				; optimize OK (test\tools\artur\artur.pas), line = 1386
  9319
  9320 54E9 A9 00			lda #$00
  9321 54EB 8D B7 61			sta KEYDOWN
  9322 54EE			l_23BF
  9323
  9324 				; optimize OK (test\tools\artur\artur.pas), line = 1389
  9325
  9326 54EE AD 9A 61			lda KEY
  9327 54F1 C9 7C			cmp #$7C
  9328 54F3 D0 18			jne l_23DD
  9329
  9330 				; optimize OK (test\tools\artur\artur.pas), line = 1390
  9331
  9332 54F5 AC B4 61			ldy CURSOR
  9333 54F8 A9 7C			lda #$7C
  9334 54FA 18 6D B5 61			add CURSOR+1
  9335 54FE 85 81			sta :bp+1
  9336 5500 B1 80			lda (:bp),y
  9337 5502 8D AA 61			sta BRUSH
  9338
  9339 				; optimize FAIL ('SHOWSTATUS', test\tools\artur\artur.pas), line = 1391
  9340
  9341 5505 20 DB 37			jsr SHOWSTATUS
  9342
  9343 				; optimize OK (test\tools\artur\artur.pas), line = 1392
  9344
  9345 5508 A9 00			lda #$00
  9346 550A 8D B7 61			sta KEYDOWN
  9347 550D			l_23DD
  9348
  9349 				; optimize OK (test\tools\artur\artur.pas), line = 1395
  9350
  9351 550D AD 9A 61			lda KEY
  9352 5510 C9 2C			cmp #$2C
  9353 5512 D0 0B			jne l_2401
  9354
  9355 				; optimize FAIL ('HISTORYBACK', test\tools\artur\artur.pas), line = 1396
  9356
  9357 5514 20 78 41			jsr HISTORYBACK
  9358
  9359 				; optimize FAIL ('SHOWSTATUS', test\tools\artur\artur.pas), line = 1397
  9360
  9361 5517 20 DB 37			jsr SHOWSTATUS
  9362
  9363 				; optimize OK (test\tools\artur\artur.pas), line = 1398
  9364
  9365 551A A9 00			lda #$00
  9366 551C 8D B7 61			sta KEYDOWN
  9367 551F			l_2401
  9368
  9369 				; optimize OK (test\tools\artur\artur.pas), line = 1401
  9370
  9371 551F AD 9A 61			lda KEY
  9372 5522 C9 6C			cmp #$6C
  9373 5524 D0 0B			jne l_241C
  9374
  9375 				; optimize FAIL ('HISTORYFWD', test\tools\artur\artur.pas), line = 1402
  9376
  9377 5526 20 94 41			jsr HISTORYFWD
  9378
  9379 				; optimize FAIL ('SHOWSTATUS', test\tools\artur\artur.pas), line = 1403
  9380
  9381 5529 20 DB 37			jsr SHOWSTATUS
  9382
  9383 				; optimize OK (test\tools\artur\artur.pas), line = 1404
  9384
  9385 552C A9 00			lda #$00
  9386 552E 8D B7 61			sta KEYDOWN
  9387 5531			l_241C
  9388
  9389 				; optimize OK (test\tools\artur\artur.pas), line = 1407
  9390
  9391 5531 AD 9A 61			lda KEY
  9392 5534 C9 5C			cmp #$5C
  9393 5536 D0 11			jne l_2437
  9394
  9395 				; optimize OK (test\tools\artur\artur.pas), line = 1408
  9396
  9397 5538 A0 01			ldy #1
  9398 553A AD BB 61			lda STATUSCUSTOMCHARSET
  9399 553D F0 01			beq @+
  9400 553F 88				dey
  9401 				@
  9402 5540 98				tya
  9403 5541 8D BB 61			sta STATUSCUSTOMCHARSET
  9404
  9405 				; optimize OK (test\tools\artur\artur.pas), line = 1409
  9406
  9407 5544 A9 00			lda #$00
  9408 5546 8D B7 61			sta KEYDOWN
  9409 5549			l_2437
  9410
  9411 				; optimize OK (test\tools\artur\artur.pas), line = 1412
  9412
  9413 5549 AD 9A 61			lda KEY
  9414 554C C9 B4			cmp #$B4
  9415 554E D0 0B			jne l_2459
  9416
  9417 				; optimize FAIL ('TRYUNDO', test\tools\artur\artur.pas), line = 1413
  9418
  9419 5550 20 60 35			jsr TRYUNDO
  9420
  9421 				; optimize FAIL ('READCURSORCHAR', test\tools\artur\artur.pas), line = 1414
  9422
  9423 5553 20 6D 36			jsr READCURSORCHAR
  9424
  9425 				; optimize OK (test\tools\artur\artur.pas), line = 1415
  9426
  9427 5556 A9 00			lda #$00
  9428 5558 8D B7 61			sta KEYDOWN
  9429 555B			l_2459
  9430
  9431 				; optimize OK (test\tools\artur\artur.pas), line = 1417
  9432
  9433 555B AD 9A 61			lda KEY
  9434 555E C9 F4			cmp #$F4
  9435 5560 D0 0B			jne l_2474
  9436
  9437 				; optimize FAIL ('TRYREDO', test\tools\artur\artur.pas), line = 1418
  9438
  9439 5562 20 97 35			jsr TRYREDO
  9440
  9441 				; optimize FAIL ('READCURSORCHAR', test\tools\artur\artur.pas), line = 1419
  9442
  9443 5565 20 6D 36			jsr READCURSORCHAR
  9444
  9445 				; optimize OK (test\tools\artur\artur.pas), line = 1420
  9446
  9447 5568 A9 00			lda #$00
  9448 556A 8D B7 61			sta KEYDOWN
  9449 556D			l_2474
  9450 556D			l_236B
  9451
  9452 				; optimize FAIL ('READJOYSTICK', test\tools\artur\artur.pas), line = 1425
  9453
  9454 556D 20 83 32			jsr READJOYSTICK
  9455
  9456 				; optimize OK (test\tools\artur\artur.pas), line = 1427
  9457
  9458 5570 AD A7 61			lda JOYX
  9459 5573 D0 05			jne l_249Ex
  9460 5575 AD A8 61			lda JOYY
  9461 5578 F0 14			jeq l_249E
  9462 557A			l_249Ex
  9463
  9464 				; optimize OK (test\tools\artur\artur.pas), line = 1428
  9465
  9466 557A AD A7 61			lda JOYX
  9467 557D 8D 33 63			sta MOVECURSOR.DX
  9468 5580 AD A8 61			lda JOYY
  9469 5583 8D 34 63			sta MOVECURSOR.DY
  9470 5586 20 73 3D			jsr MOVECURSOR
  9471
  9472 				; optimize OK (test\tools\artur\artur.pas), line = 1429
  9473
  9474 5589 A9 04			lda #$04
  9475 558B 8D AB 61			sta KEYREPEATCOUNTER
  9476 558E			l_249E
  9477 558E			l_2326
  9478
  9479 				; optimize OK (test\tools\artur\artur.pas), line = 1436
  9480
  9481 558E AD B0 61			lda MODE
  9482 5591 F0 03 4C 53 56		jne l_24C0
  9483
  9484 				; optimize OK (test\tools\artur\artur.pas), line = 1437
  9485
  9486 5596 AD A9 61			lda JOYFIRE
  9487 5599 D0 13			jne l_24D3
  9488
  9489 				; optimize FAIL ('POKEBRUSH', test\tools\artur\artur.pas), line = 1438
  9490
  9491 559B 20 11 42			jsr POKEBRUSH
  9492
  9493 				; optimize OK (test\tools\artur\artur.pas), line = 1439
  9494
  9495 559E AD AA 61			lda BRUSH
  9496 55A1 20 EE 41			jsr USEBRUSH
  9497
  9498 				; optimize OK (test\tools\artur\artur.pas), line = 1440
  9499
  9500 55A4 A9 01			lda #$01
  9501 55A6 8D A9 61			sta JOYFIRE
  9502
  9503 				; optimize OK (test\tools\artur\artur.pas), line = 1441
  9504
  9505 55A9 A9 00			lda #$00
  9506 55AB 8D B7 61			sta KEYDOWN
  9507 55AE			l_24D3
  9508
  9509 				; optimize OK (test\tools\artur\artur.pas), line = 1443
  9510
  9511 55AE AD B7 61			lda KEYDOWN
  9512 55B1 F0 7A			jeq l_24EF
  9513
  9514 				; optimize OK (test\tools\artur\artur.pas), line = 1444
  9515
  9516 55B3 AD 9A 61			lda KEY
  9517 55B6 C9 0C			cmp #$0C
  9518 55B8 D0 20			jne l_2502
  9519
  9520 				; optimize FAIL ('POKEBRUSH', test\tools\artur\artur.pas), line = 1445
  9521
  9522 55BA 20 11 42			jsr POKEBRUSH
  9523
  9524 				; optimize OK (test\tools\artur\artur.pas), line = 1446
  9525
  9526 55BD AD AA 61			lda BRUSH
  9527 55C0 20 EE 41			jsr USEBRUSH
  9528
  9529 				; optimize OK (test\tools\artur\artur.pas), line = 1447
  9530
  9531 55C3 AD BA 61			lda CURSORFORWARD
  9532 55C6 F0 0D			jeq l_2514
  9533 55C8 A9 01			lda #$01
  9534 55CA 8D 33 63			sta MOVECURSOR.DX
  9535 55CD A9 00			lda #$00
  9536 55CF 8D 34 63			sta MOVECURSOR.DY
  9537 55D2 20 73 3D			jsr MOVECURSOR
  9538 55D5			l_2514
  9539
  9540 				; optimize OK (test\tools\artur\artur.pas), line = 1448
  9541
  9542 55D5 A9 00			lda #$00
  9543 55D7 8D B7 61			sta KEYDOWN
  9544 55DA			l_2502
  9545
  9546 				; optimize OK (test\tools\artur\artur.pas), line = 1450
  9547
  9548 55DA AD 9A 61			lda KEY
  9549 55DD C9 77			cmp #$77
  9550 55DF D0 14			jne l_2532
  9551
  9552 				; optimize OK (test\tools\artur\artur.pas), line = 1451
  9553
  9554 55E1 A0 01			ldy #1
  9555 55E3 AD BA 61			lda CURSORFORWARD
  9556 55E6 F0 01			beq @+
  9557 55E8 88				dey
  9558 				@
  9559 55E9 98				tya
  9560 55EA 8D BA 61			sta CURSORFORWARD
  9561
  9562 				; optimize FAIL ('SHOWMENUBAR', test\tools\artur\artur.pas), line = 1452
  9563
  9564 55ED 20 87 38			jsr SHOWMENUBAR
  9565
  9566 				; optimize OK (test\tools\artur\artur.pas), line = 1453
  9567
  9568 55F0 A9 00			lda #$00
  9569 55F2 8D B7 61			sta KEYDOWN
  9570 55F5			l_2532
  9571
  9572 				; optimize OK (test\tools\artur\artur.pas), line = 1455
  9573
  9574 55F5 AD 9A 61			lda KEY
  9575 55F8 C9 21			cmp #$21
  9576 55FA D0 15			jne l_2555
  9577
  9578 				; optimize FAIL ('WRITESPACE', test\tools\artur\artur.pas), line = 1456
  9579
  9580 55FC 20 56 42			jsr WRITESPACE
  9581
  9582 				; optimize OK (test\tools\artur\artur.pas), line = 1457
  9583
  9584 55FF AD BA 61			lda CURSORFORWARD
  9585 5602 F0 0D			jeq l_2563
  9586 5604 A9 01			lda #$01
  9587 5606 8D 33 63			sta MOVECURSOR.DX
  9588 5609 A9 00			lda #$00
  9589 560B 8D 34 63			sta MOVECURSOR.DY
  9590 560E 20 73 3D			jsr MOVECURSOR
  9591 5611			l_2563
  9592 5611			l_2555
  9593
  9594 				; optimize OK (test\tools\artur\artur.pas), line = 1459
  9595
  9596 5611 AD BA 61			lda CURSORFORWARD
  9597 5614 F0 17			jeq l_2577
  9598
  9599 				; optimize OK (test\tools\artur\artur.pas), line = 1460
  9600
  9601 5616 AD 9A 61			lda KEY
  9602 5619 C9 34			cmp #$34
  9603 561B D0 10			jne l_258A
  9604
  9605 				; optimize OK (test\tools\artur\artur.pas), line = 1461
  9606
  9607 561D A9 FF			lda #$FF
  9608 561F 8D 33 63			sta MOVECURSOR.DX
  9609 5622 A9 00			lda #$00
  9610 5624 8D 34 63			sta MOVECURSOR.DY
  9611 5627 20 73 3D			jsr MOVECURSOR
  9612
  9613 				; optimize FAIL ('WRITESPACE', test\tools\artur\artur.pas), line = 1462
  9614
  9615 562A 20 56 42			jsr WRITESPACE
  9616 562D			l_258A
  9617 562D			l_2577
  9618 562D			l_24EF
  9619
  9620 				; optimize OK (test\tools\artur\artur.pas), line = 1467
  9621
  9622 562D AD B7 61			lda KEYDOWN
  9623 5630 F0 21			jeq l_25A1
  9624
  9625 				; optimize FAIL ('SETBRUSHFROMKEY', test\tools\artur\artur.pas), line = 1468
  9626
  9627 5632 20 2A 42			jsr SETBRUSHFROMKEY
  9628
  9629 				; optimize FAIL ('POKEBRUSH', test\tools\artur\artur.pas), line = 1469
  9630
  9631 5635 20 11 42			jsr POKEBRUSH
  9632
  9633 				; optimize OK (test\tools\artur\artur.pas), line = 1470
  9634
  9635 5638 AD AA 61			lda BRUSH
  9636 563B 20 EE 41			jsr USEBRUSH
  9637
  9638 				; optimize OK (test\tools\artur\artur.pas), line = 1471
  9639
  9640 563E AD BA 61			lda CURSORFORWARD
  9641 5641 F0 0D			jeq l_25B4
  9642 5643 A9 01			lda #$01
  9643 5645 8D 33 63			sta MOVECURSOR.DX
  9644 5648 A9 00			lda #$00
  9645 564A 8D 34 63			sta MOVECURSOR.DY
  9646 564D 20 73 3D			jsr MOVECURSOR
  9647 5650			l_25B4
  9648
  9649 				; optimize FAIL ('SHOWSTATUS', test\tools\artur\artur.pas), line = 1472
  9650
  9651 5650 20 DB 37			jsr SHOWSTATUS
  9652 5653			l_25A1
  9653 5653			l_24C0
  9654
  9655 				; optimize OK (test\tools\artur\artur.pas), line = 1479
  9656
  9657 5653 AD B0 61			lda MODE
  9658 5656 C9 01			cmp #$01
  9659 5658 F0 03 4C 4D 57		jne l_25D1
  9660
  9661 				; optimize OK (test\tools\artur\artur.pas), line = 1480
  9662
  9663 565D AD A9 61			lda JOYFIRE
  9664 5660 D0 0D			jne l_25E4
  9665
  9666 				; optimize OK (test\tools\artur\artur.pas), line = 1481
  9667
  9668 5662 A9 01			lda #$01
  9669 5664 8D A9 61			sta JOYFIRE
  9670
  9671 				; optimize OK (test\tools\artur\artur.pas), line = 1482
  9672
  9673 5667 8D B8 61			sta PENDOWN
  9674
  9675 				; optimize OK (test\tools\artur\artur.pas), line = 1483
  9676
  9677 566A A9 14			lda #$14
  9678 566C 8D AB 61			sta KEYREPEATCOUNTER
  9679 566F			l_25E4
  9680
  9681 				; optimize OK (test\tools\artur\artur.pas), line = 1485
  9682
  9683 566F AD B7 61			lda KEYDOWN
  9684 5672 F0 60			jeq l_25FF
  9685
  9686 				; optimize OK (test\tools\artur\artur.pas), line = 1486
  9687
  9688 5674 AD 9A 61			lda KEY
  9689 5677 C9 1C			cmp #$1C
  9690 5679 D0 08			jne l_2612
  9691
  9692 				; optimize FAIL ('CLEARSELECTION', test\tools\artur\artur.pas), line = 1487
  9693
  9694 567B 20 4F 3E			jsr CLEARSELECTION
  9695
  9696 				; optimize OK (test\tools\artur\artur.pas), line = 1488
  9697
  9698 567E A9 00			lda #$00
  9699 5680 8D B7 61			sta KEYDOWN
  9700 5683			l_2612
  9701
  9702 				; optimize OK (test\tools\artur\artur.pas), line = 1490
  9703
  9704 5683 AD 9A 61			lda KEY
  9705 5686 C9 0C			cmp #$0C
  9706 5688 D0 0A			jne l_262C
  9707
  9708 				; optimize OK (test\tools\artur\artur.pas), line = 1491
  9709
  9710 568A A9 01			lda #$01
  9711 568C 8D B8 61			sta PENDOWN
  9712
  9713 				; optimize OK (test\tools\artur\artur.pas), line = 1492
  9714
  9715 568F A9 00			lda #$00
  9716 5691 8D B7 61			sta KEYDOWN
  9717 5694			l_262C
  9718
  9719 				; optimize OK (test\tools\artur\artur.pas), line = 1495
  9720
  9721 5694 AD 9A 61			lda KEY
  9722 5697 C9 21			cmp #$21
  9723 5699 D0 09			jne l_2649
  9724
  9725 				; optimize FAIL ('WRITESPACE', test\tools\artur\artur.pas), line = 1496
  9726
  9727 569B 20 56 42			jsr WRITESPACE
  9728
  9729 				; optimize FAIL ('CLEARSELECTION', test\tools\artur\artur.pas), line = 1497
  9730
  9731 569E 20 4F 3E			jsr CLEARSELECTION
  9732
  9733 				; optimize FAIL ('SHOWSTATUS', test\tools\artur\artur.pas), line = 1498
  9734
  9735 56A1 20 DB 37			jsr SHOWSTATUS
  9736 56A4			l_2649
  9737
  9738 				; optimize OK (test\tools\artur\artur.pas), line = 1500
  9739
  9740 56A4 AD 99 61			lda C
  9741 56A7 C9 64			cmp #$64
  9742 56A9 D0 05			jne l_2661
  9743 56AB A9 00			lda #$00
  9744 56AD 20 EA 40			jsr SELECTTOOL
  9745 56B0			l_2661
  9746
  9747 				; optimize OK (test\tools\artur\artur.pas), line = 1501
  9748
  9749 56B0 AD 99 61			lda C
  9750 56B3 C9 6C			cmp #$6C
  9751 56B5 D0 05			jne l_2678
  9752 56B7 A9 01			lda #$01
  9753 56B9 20 EA 40			jsr SELECTTOOL
  9754 56BC			l_2678
  9755
  9756 				; optimize OK (test\tools\artur\artur.pas), line = 1502
  9757
  9758 56BC AD 99 61			lda C
  9759 56BF C9 66			cmp #$66
  9760 56C1 D0 05			jne l_268F
  9761 56C3 A9 02			lda #$02
  9762 56C5 20 EA 40			jsr SELECTTOOL
  9763 56C8			l_268F
  9764
  9765 				; optimize OK (test\tools\artur\artur.pas), line = 1503
  9766
  9767 56C8 AD 99 61			lda C
  9768 56CB C9 62			cmp #$62
  9769 56CD D0 05			jne l_26A6
  9770 56CF A9 03			lda #$03
  9771 56D1 20 EA 40			jsr SELECTTOOL
  9772 56D4			l_26A6
  9773 56D4			l_25FF
  9774
  9775 				; optimize OK (test\tools\artur\artur.pas), line = 1505
  9776
  9777 56D4 AD B7 61			lda KEYDOWN
  9778 56D7 F0 06			jeq l_26B9
  9779
  9780 				; optimize FAIL ('SETBRUSHFROMKEY', test\tools\artur\artur.pas), line = 1506
  9781
  9782 56D9 20 2A 42			jsr SETBRUSHFROMKEY
  9783
  9784 				; optimize FAIL ('SHOWSTATUS', test\tools\artur\artur.pas), line = 1507
  9785
  9786 56DC 20 DB 37			jsr SHOWSTATUS
  9787 56DF			l_26B9
  9788
  9789 				; optimize OK (test\tools\artur\artur.pas), line = 1510
  9790
  9791 56DF AD B8 61			lda PENDOWN
  9792 56E2 F0 69			jeq l_26CA
  9793
  9794 				; optimize OK (test\tools\artur\artur.pas), line = 1511
  9795
  9796 56E4 AD B1 61			lda DRAWTOOL
  9797 56E7 D0 0C			jne l_26DD
  9798
  9799 				; optimize FAIL ('POKEBRUSH', test\tools\artur\artur.pas), line = 1512
  9800
  9801 56E9 20 11 42			jsr POKEBRUSH
  9802
  9803 				; optimize OK (test\tools\artur\artur.pas), line = 1513
  9804
  9805 56EC AD AA 61			lda BRUSH
  9806 56EF 20 EE 41			jsr USEBRUSH
  9807 56F2 4C 48 57			jmp l_26EC
  9808 56F5			l_26DD
  9809
  9810 				; optimize OK (test\tools\artur\artur.pas), line = 1515
  9811
  9812 56F5 AD BD 61			lda P1X
  9813 56F8 C9 FF			cmp #$FF
  9814 56FA D0 0F			jne l_26FE
  9815
  9816 				; optimize OK (test\tools\artur\artur.pas), line = 1516
  9817
  9818 56FC AD B2 61			lda CURSORX
  9819 56FF 8D BD 61			sta P1X
  9820
  9821 				; optimize OK (test\tools\artur\artur.pas), line = 1517
  9822
  9823 5702 AD B3 61			lda CURSORY
  9824 5705 8D BF 61			sta P1Y
  9825 5708 4C 48 57			jmp l_2714
  9826 570B			l_26FE
  9827
  9828 				; optimize OK (test\tools\artur\artur.pas), line = 1519
  9829
  9830 570B AD BE 61			lda P2X
  9831 570E C9 FF			cmp #$FF
  9832 5710 D0 36			jne l_2726
  9833
  9834 				; optimize OK (test\tools\artur\artur.pas), line = 1520
  9835
  9836 5712 AD B2 61			lda CURSORX
  9837 5715 8D BE 61			sta P2X
  9838
  9839 				; optimize OK (test\tools\artur\artur.pas), line = 1521
  9840
  9841 5718 AD B3 61			lda CURSORY
  9842 571B 8D C0 61			sta P2Y
  9843
  9844 				; optimize OK (test\tools\artur\artur.pas), line = 1522
  9845
  9846 571E AD B1 61			lda DRAWTOOL
  9847 5721 C9 01			cmp #$01
  9848 5723 D0 03			jne l_2745
  9849 5725 20 CD 3B			jsr DRAWLINE
  9850 5728			l_2745
  9851
  9852 				; optimize OK (test\tools\artur\artur.pas), line = 1523
  9853
  9854 5728 AD B1 61			lda DRAWTOOL
  9855 572B C9 02			cmp #$02
  9856 572D D0 03			jne l_275B
  9857 572F 20 44 47			jsr DRAWFRAME
  9858 5732			l_275B
  9859
  9860 				; optimize OK (test\tools\artur\artur.pas), line = 1524
  9861
  9862 5732 AD B1 61			lda DRAWTOOL
  9863 5735 C9 03			cmp #$03
  9864 5737 D0 03			jne l_2771
  9865 5739 20 CD 45			jsr DRAWBLOCK
  9866 573C			l_2771
  9867
  9868 				; optimize FAIL ('READCURSORCHAR', test\tools\artur\artur.pas), line = 1525
  9869
  9870 573C 20 6D 36			jsr READCURSORCHAR
  9871
  9872 				; optimize OK (test\tools\artur\artur.pas), line = 1526
  9873
  9874 573F AD AA 61			lda BRUSH
  9875 5742 20 EE 41			jsr USEBRUSH
  9876
  9877 				; optimize FAIL ('CLEARSELECTION', test\tools\artur\artur.pas), line = 1527
  9878
  9879 5745 20 4F 3E			jsr CLEARSELECTION
  9880 5748			l_2726
  9881 5748			l_2714
  9882 5748			l_26EC
  9883
  9884 				; optimize OK (test\tools\artur\artur.pas), line = 1530
  9885
  9886 5748 A9 00			lda #$00
  9887 574A 8D B8 61			sta PENDOWN
  9888 574D			l_26CA
  9889 574D			l_25D1
  9890
  9891 				; optimize OK (test\tools\artur\artur.pas), line = 1537
  9892
  9893 574D AD B0 61			lda MODE
  9894 5750 C9 02			cmp #$02
  9895 5752 F0 03 4C 22 58		jne l_2797
  9896
  9897 				; optimize OK (test\tools\artur\artur.pas), line = 1538
  9898
  9899 5757 AD A9 61			lda JOYFIRE
  9900 575A D0 0D			jne l_27AA
  9901
  9902 				; optimize OK (test\tools\artur\artur.pas), line = 1539
  9903
  9904 575C A9 01			lda #$01
  9905 575E 8D A9 61			sta JOYFIRE
  9906
  9907 				; optimize OK (test\tools\artur\artur.pas), line = 1540
  9908
  9909 5761 8D B8 61			sta PENDOWN
  9910
  9911 				; optimize OK (test\tools\artur\artur.pas), line = 1541
  9912
  9913 5764 A9 14			lda #$14
  9914 5766 8D AB 61			sta KEYREPEATCOUNTER
  9915 5769			l_27AA
  9916
  9917 				; optimize OK (test\tools\artur\artur.pas), line = 1543
  9918
  9919 5769 AD B7 61			lda KEYDOWN
  9920 576C F0 66			jeq l_27C5
  9921
  9922 				; optimize OK (test\tools\artur\artur.pas), line = 1544
  9923
  9924 576E AD 9A 61			lda KEY
  9925 5771 C9 1C			cmp #$1C
  9926 5773 D0 0B			jne l_27D8
  9927
  9928 				; optimize FAIL ('CLEARSELECTION', test\tools\artur\artur.pas), line = 1545
  9929
  9930 5775 20 4F 3E			jsr CLEARSELECTION
  9931
  9932 				; optimize FAIL ('SHOWMENUBAR', test\tools\artur\artur.pas), line = 1546
  9933
  9934 5778 20 87 38			jsr SHOWMENUBAR
  9935
  9936 				; optimize OK (test\tools\artur\artur.pas), line = 1547
  9937
  9938 577B A9 00			lda #$00
  9939 577D 8D B7 61			sta KEYDOWN
  9940 5780			l_27D8
  9941
  9942 				; optimize OK (test\tools\artur\artur.pas), line = 1549
  9943
  9944 5780 AD 9A 61			lda KEY
  9945 5783 C9 0C			cmp #$0C
  9946 5785 D0 0A			jne l_27F3
  9947
  9948 				; optimize OK (test\tools\artur\artur.pas), line = 1550
  9949
  9950 5787 A9 01			lda #$01
  9951 5789 8D B8 61			sta PENDOWN
  9952
  9953 				; optimize OK (test\tools\artur\artur.pas), line = 1551
  9954
  9955 578C A9 00			lda #$00
  9956 578E 8D B7 61			sta KEYDOWN
  9957 5791			l_27F3
  9958
  9959 				; optimize OK (test\tools\artur\artur.pas), line = 1553
  9960
  9961 5791 AD BE 61			lda P2X
  9962 5794 C9 FF			cmp #$FF
  9963 5796 F0 3C			jeq l_2810
  9964
  9965 				; optimize OK (test\tools\artur\artur.pas), line = 1554
  9966
  9967 5798 AD 99 61			lda C
  9968 579B C9 63			cmp #$63
  9969 579D D0 05			jne l_2823
  9970 579F A9 00			lda #$00
  9971 57A1 20 06 46			jsr COPYBLOCK
  9972 57A4			l_2823
  9973
  9974 				; optimize OK (test\tools\artur\artur.pas), line = 1555
  9975
  9976 57A4 AD 99 61			lda C
  9977 57A7 C9 6D			cmp #$6D
  9978 57A9 D0 05			jne l_283A
  9979 57AB A9 01			lda #$01
  9980 57AD 20 06 46			jsr COPYBLOCK
  9981 57B0			l_283A
  9982
  9983 				; optimize OK (test\tools\artur\artur.pas), line = 1556
  9984
  9985 57B0 AD 99 61			lda C
  9986 57B3 C9 73			cmp #$73
  9987 57B5 D0 03			jne l_2851
  9988 57B7 20 F1 49			jsr SAVEBLOCK
  9989 57BA			l_2851
  9990
  9991 				; optimize OK (test\tools\artur\artur.pas), line = 1557
  9992
  9993 57BA AD 99 61			lda C
  9994 57BD C9 69			cmp #$69
  9995 57BF D0 03			jne l_2867
  9996 57C1 20 4A 45			jsr INVERTBLOCK
  9997 57C4			l_2867
  9998
  9999 				; optimize OK (test\tools\artur\artur.pas), line = 1558
 10000
 10001 57C4 AD 99 61			lda C
 10002 57C7 C9 66			cmp #$66
 10003 57C9 D0 03			jne l_287D
 10004 57CB 20 CD 45			jsr DRAWBLOCK
 10005 57CE			l_287D
 10006
 10007 				; optimize FAIL ('READCURSORCHAR', test\tools\artur\artur.pas), line = 1559
 10008
 10009 57CE 20 6D 36			jsr READCURSORCHAR
 10010
 10011 				; optimize FAIL ('SHOWSTATUS', test\tools\artur\artur.pas), line = 1560
 10012
 10013 57D1 20 DB 37			jsr SHOWSTATUS
 10014 57D4			l_2810
 10015 57D4			l_27C5
 10016
 10017 				; optimize OK (test\tools\artur\artur.pas), line = 1565
 10018
 10019 57D4 AD B8 61			lda PENDOWN
 10020 57D7 F0 49			jeq l_2893
 10021
 10022 				; optimize OK (test\tools\artur\artur.pas), line = 1566
 10023
 10024 57D9 AD BD 61			lda P1X
 10025 57DC C9 FF			cmp #$FF
 10026 57DE D0 0F			jne l_28A6
 10027
 10028 				; optimize OK (test\tools\artur\artur.pas), line = 1567
 10029
 10030 57E0 AD B2 61			lda CURSORX
 10031 57E3 8D BD 61			sta P1X
 10032
 10033 				; optimize OK (test\tools\artur\artur.pas), line = 1568
 10034
 10035 57E6 AD B3 61			lda CURSORY
 10036 57E9 8D BF 61			sta P1Y
 10037 57EC 4C 1D 58			jmp l_28BC
 10038 57EF			l_28A6
 10039
 10040 				; optimize OK (test\tools\artur\artur.pas), line = 1570
 10041
 10042 57EF AD BE 61			lda P2X
 10043 57F2 C9 FF			cmp #$FF
 10044 57F4 D0 21			jne l_28CE
 10045
 10046 				; optimize OK (test\tools\artur\artur.pas), line = 1571
 10047
 10048 57F6 AD B2 61			lda CURSORX
 10049 57F9 8D BE 61			sta P2X
 10050
 10051 				; optimize OK (test\tools\artur\artur.pas), line = 1572
 10052
 10053 57FC AD B3 61			lda CURSORY
 10054 57FF 8D C0 61			sta P2Y
 10055
 10056 				; optimize OK (test\tools\artur\artur.pas), line = 1573
 10057
 10058 5802 AD B2 61			lda CURSORX
 10059 5805 8D 18 63			sta XORCURSOR.X
 10060 5808 AD B3 61			lda CURSORY
 10061 580B 8D 19 63			sta XORCURSOR.Y
 10062 580E 20 5F 3A			jsr XORCURSOR
 10063
 10064 				; optimize FAIL ('SHOWMENUBAR', test\tools\artur\artur.pas), line = 1574
 10065
 10066 5811 20 87 38			jsr SHOWMENUBAR
 10067 5814 4C 1D 58			jmp l_28EC
 10068 5817			l_28CE
 10069
 10070 				; optimize FAIL ('CLEARSELECTION', test\tools\artur\artur.pas), line = 1576
 10071
 10072 5817 20 4F 3E			jsr CLEARSELECTION
 10073
 10074 				; optimize FAIL ('SHOWMENUBAR', test\tools\artur\artur.pas), line = 1577
 10075
 10076 581A 20 87 38			jsr SHOWMENUBAR
 10077 581D			l_28EC
 10078 581D			l_28BC
 10079
 10080 				; optimize OK (test\tools\artur\artur.pas), line = 1580
 10081
 10082 581D A9 00			lda #$00
 10083 581F 8D B8 61			sta PENDOWN
 10084 5822			l_2893
 10085 5822			l_2797
 10086
 10087 				; optimize OK (test\tools\artur\artur.pas), line = 1584
 10088
 10089 5822 AD B7 61			lda KEYDOWN
 10090 5825 F0 05			jeq l_2902
 10091 5827 A9 00			lda #$00
 10092 5829 8D B7 61			sta KEYDOWN
 10093 582C			l_2902
 10094
 10095 				; optimize FAIL ('CRT.KEYPRESSED', test\tools\artur\artur.pas), line = 1586
 10096
 10097 582C 20 B2 2A			jsr CRT.KEYPRESSED
 10098 582F AD E7 58			lda CRT.KEYPRESSED.RESULT
 10099 5832 F0 14			jeq l_2913
 10100
 10101 				; optimize FAIL ('CRT.READKEY', test\tools\artur\artur.pas), line = 1587
 10102
 10103 5834 20 AB 2A			jsr CRT.READKEY
 10104 5837 AD E6 58			lda CRT.READKEY.RESULT
 10105 583A 8D 99 61			sta C
 10106
 10107 				; optimize OK (test\tools\artur\artur.pas), line = 1588
 10108
 10109 583D AD 09 D2			lda ATARI.KBCODE
 10110 5840 8D 9A 61			sta KEY
 10111
 10112 				; optimize OK (test\tools\artur\artur.pas), line = 1589
 10113
 10114 5843 A9 01			lda #$01
 10115 5845 8D B7 61			sta KEYDOWN
 10116 5848			l_2913
 10117
 10118 				; optimize OK (test\tools\artur\artur.pas), line = 1592
 10119
 10120 5848 AD B0 61			lda MODE
 10121 584B C9 FF			cmp #$FF
 10122 584D F0 03 4C 62 54		jne l_2313
 10123
 10124 				; optimize FAIL ('SYSTEM.PAUSE_0479', test\tools\artur\artur.pas), line = 1596
 10125
 10126 5852 20 A0 2A			jsr SYSTEM.PAUSE_0479
 10127
 10128 				; optimize FAIL ('B_PMG.PMG_DISABLE', test\tools\artur\artur.pas), line = 1597
 10129
 10130 5855 20 63 30			jsr B_PMG.PMG_DISABLE
 10131
 10132 				; optimize OK (test\tools\artur\artur.pas), line = 1598
 10133
 10134 5858 AD AC 61			lda OLDVBL
 10135 585B A0 05			ldy #5
 10136 585D 8D 0A D4			sta wsync
 10137 5860 88				dey
 10138 5861 D0 FD			rne
 10139 5863 8D 24 02			sta VVBLKD
 10140 5866 AD AD 61			lda OLDVBL+1
 10141 5869 8D 25 02			sta VVBLKD+1
 10142
 10143 				; optimize OK (test\tools\artur\artur.pas), line = 1599
 10144
 10145 586C AD AE 61 8D 00 02		mva OLDDLI VDSLST
 10146 5872 AD AF 61 8D 01 02		mva OLDDLI+1 VDSLST+1
 10147
 10148 				; optimize OK (test\tools\artur\artur.pas), line = 1600
 10149
 10150 5878 A9 40			lda #$40
 10151 587A 8D 0E D4			sta ATARI.NMIEN
 10152
 10153 				; optimize OK (test\tools\artur\artur.pas), line = 1601
 10154
 10155 587D A9 00			lda #$00
 10156 587F 20 C0 2A			jsr CRT.TEXTMODE
 10157 5882 A9 00			lda #$00
 10158 5884 4C 87 58			jmp @halt
 10159
 10160 				; ------------------------------------------------------------
 10161
 10162 = 0028			SCREEN_WIDTH	= $28
 10163 = 0018			SCREEN_HEIGHT	= $18
 10164 = 03C0			SCREEN_SIZE	= $03C0
 10165 = 0008			FULLSCREEN_UNDO_COUNT	= $08
 10166 = 0040			UNDO_ACTIONS_COUNT	= $40
 10167 = 0069			BIN_HEADER_SIZE	= $69
 10168 = 7000			FREE_BOTTOM	= $7000
 10169 = 7000			PMG	= $7000
 10170 = 7000			DISPLAY_LIST_ADDRESS	= $7000
 10171 = 7100			BIN_HEADER	= $7100
 10172 = 7400			CUSTOM_CHARSET	= $7400
 10173 = 7800			VIDEO_BUFFER	= $7800
 10174 = 7BC0			MENU_BAR	= $7BC0
 10175 = 7C00			VIDEO_RAM_ADDRESS	= $7C00
 10176 = 7FC0			STATUS_BAR	= $7FC0
 10177 = 8000			KEY_MAP	= $8000
 10178 = 8100			UNDO_SCREENS	= $8100
 10179 = E000			DEFAULT_CHARSET	= $E000
 10180 = 00FF			NONE	= $FF
 10181 = 00FF			UNDO_NONE	= $FF
 10182 = 00FE			UNDO_FROM_BUFFER	= $FE
 10183 = 0000			MODE_TYPE	= $00
 10184 = 0001			MODE_DRAW	= $01
 10185 = 0002			MODE_BLOCK	= $02
 10186 = 0003			MODE_LAST	= $03
 10187 = 00FF			MODE_EXIT	= $FF
 10188 = 0000			TOOL_DRAW	= $00
 10189 = 0001			TOOL_LINE	= $01
 10190 = 0002			TOOL_FRAME	= $02
 10191 = 0003			TOOL_BLOCK	= $03
 10192 = 000A			KEY_DELAY	= $0A
 10193 = 0004			JOY_DELAY	= $04
 10194 = 0014			FIRE_DELAY	= $14
 10195 = 000A			OS_REPEAT_DELAY	= $0A
 10196 = 0005			OS_REPEAT_RATE	= $05
 10197 = 0030			PMG_XOFFSET	= $30
 10198 = 000F			PMG_YOFFSET	= $0F
 10199 = 0092			BG_DEFAULT	= $92
 10200 = 009A			FG_DEFAULT	= $9A
 10201 = 0011			MAX_BRUSH_HISTORY	= $11
 10202 = 0000			CODE_DISPLAY_NONE	= $00
 10203 = 0001			CODE_DISPLAY_ANTIC	= $01
 10204 = 0002			CODE_DISPLAY_ATASCII	= $02
 10205 = 6163			adr.VERSION	= [DATAORIGIN+$08B3] .array [6]
 10206 5887			.var VERSION	= adr.VERSION .word
 10207 = 6169			adr.CONFIG	= DATAORIGIN+$08B9	; [4] RECORD
 10208 5887			.var CONFIG	= adr.CONFIG .word
 10209 = 6169			CONFIG.EDITORBACKGROUNDCOLOR	= DATAORIGIN+$08B9
 10210 = 616A			CONFIG.EDITORFOREGROUNDCOLOR	= DATAORIGIN+$08BA
 10211 = 616B			CONFIG.ARROWSRAW	= DATAORIGIN+$08BB
 10212 = 616C			CONFIG.KEYCODEDISPLAY	= DATAORIGIN+$08BC
 10213 = 616D			B	= DATAORIGIN+$08BD
 10214 = 616E			H	= DATAORIGIN+$08BE
 10215 = 616F			W	= DATAORIGIN+$08BF
 10216 = 6170			adr.S	= [DATAORIGIN+$08C0] .array [41]
 10217 5887			.var S	= adr.S .word
 10218 = 6199			C	= DATAORIGIN+$08E9
 10219 = 619A			KEY	= DATAORIGIN+$08EA
 10220 5887			.var AFILE	= DATAORIGIN+$08EB .word
 10221 = 61A7			JOYX	= DATAORIGIN+$08F7
 10222 = 61A8			JOYY	= DATAORIGIN+$08F8
 10223 = 61A9			JOYFIRE	= DATAORIGIN+$08F9
 10224 = 61AA			BRUSH	= DATAORIGIN+$08FA
 10225 = 61AB			KEYREPEATCOUNTER	= DATAORIGIN+$08FB
 10226 = 61AC			OLDVBL	= DATAORIGIN+$08FC
 10227 = 61AE			OLDDLI	= DATAORIGIN+$08FE
 10228 = 61B0			MODE	= DATAORIGIN+$0900
 10229 = 61B1			DRAWTOOL	= DATAORIGIN+$0901
 10230 = 61B2			CURSORX	= DATAORIGIN+$0902
 10231 = 61B3			CURSORY	= DATAORIGIN+$0903
 10232 = 61B4			CURSOR	= DATAORIGIN+$0904
 10233 = 61B6			CURSORCHAR	= DATAORIGIN+$0906
 10234 = 61B7			KEYDOWN	= DATAORIGIN+$0907
 10235 = 61B8			PENDOWN	= DATAORIGIN+$0908
 10236 = 61B9			INVERT	= DATAORIGIN+$0909
 10237 = 61BA			CURSORFORWARD	= DATAORIGIN+$090A
 10238 = 61BB			STATUSCUSTOMCHARSET	= DATAORIGIN+$090B
 10239 = 61BC			EDITORCHARSET	= DATAORIGIN+$090C
 10240 = 61BD			P1X	= DATAORIGIN+$090D
 10241 = 61BE			P2X	= DATAORIGIN+$090E
 10242 = 61BF			P1Y	= DATAORIGIN+$090F
 10243 = 61C0			P2Y	= DATAORIGIN+$0910
 10244 = 61C1			adr.BRUSHHISTORY	= [DATAORIGIN+$0911] .array [18]
 10245 5887			.var BRUSHHISTORY	= adr.BRUSHHISTORY .word
 10246 = 61D3			BRUSHINDEX	= DATAORIGIN+$0923
 10247 = 61D4			BRUSHFRAMEPOSX	= DATAORIGIN+$0924
 10248 = 8000			adr.KEYCHARS	= $8000
 10249 5887			.var KEYCHARS	= adr.KEYCHARS .word
 10250 = 61D5			adr.UNDOBUFFERS	= [DATAORIGIN+$0925] .array [8] .word
 10251 5887			.var UNDOBUFFERS	= adr.UNDOBUFFERS .word
 10252 = 61E5			adr.UNDOACTIONS	= [DATAORIGIN+$0935] .array [64] [3]
 10253 5887			.var UNDOACTIONS	= adr.UNDOACTIONS .word
 10254 = 62A5			UNDOBUFFERIDX	= DATAORIGIN+$09F5
 10255 = 62A6			UNDOACTIONSIDX	= DATAORIGIN+$09F6
 10256 = 62A7			REDOCOUNT	= DATAORIGIN+$09F7
 10257 = 62A8			adr.LINEOFFSET	= [DATAORIGIN+$09F8] .array [24] .word
 10258 5887			.var LINEOFFSET	= adr.LINEOFFSET .word
 10259 5887			@exit
 10260
 10261 5887 A2 00		@halt	ldx #$00
 10262 5889 9A				txs
 10263 					.ifdef MAIN.@DEFINES.ROMOFF
 10264 					inc portb
 10265 					.fi
 10266
 10267 588A A0 01			ldy #$01
 10268
 10269 588C 60				rts
 10270
 10271 				; ------------------------------------------------------------
 10272
 10273 588D 00 00 00 00 00 00 + IOCB@COPY	:16 brk
 10274
 10275 				; ------------------------------------------------------------
 10276
 10277 589D			.local	@DEFINES
 10278 589D			ATARI
 10279 				.endl
 10280
 10281 589D			.local	@RESOURCE
 10282 				.endl
 10283
 10284 = 589D 63 61		VERSION
 10284 = 589F 69 61		CONFIG
 10284 = 58A1 70 61		S
 10284 = 58A3 9B 61		AFILE
 10284 = 58A5 C1 61		BRUSHHISTORY
 10284 = 58A7 00 80		KEYCHARS
 10284 = 58A9 D5 61		UNDOBUFFERS
 10284 = 58AB E5 61		UNDOACTIONS
 10284 = 58AD A8 62		LINEOFFSET
 10284 				.endl							; MAIN
 10285
 10286 				; ------------------------------------------------------------
 10287 				; ------------------------------------------------------------
 10288
 10289 				.macro	UNITINITIALIZATION
 10290 				
 10291 					.ifdef MAIN.SYSTEM.@UnitInit
 10292 					jsr MAIN.SYSTEM.@UnitInit
 10293 					.fi
 10294 				
 10295 					.ifdef MAIN.ATARI.@UnitInit
 10296 					jsr MAIN.ATARI.@UnitInit
 10297 					.fi
 10298 				
 10299 					.ifdef MAIN.CRT.@UnitInit
 10300 					jsr MAIN.CRT.@UnitInit
 10301 					.fi
 10302 				
 10303 					.ifdef MAIN.DOS.@UnitInit
 10304 					jsr MAIN.DOS.@UnitInit
 10305 					.fi
 10306 				
 10307 					.ifdef MAIN.STRUTILS.@UnitInit
 10308 					jsr MAIN.STRUTILS.@UnitInit
 10309 					.fi
 10310 				
 10311 					.ifdef MAIN.SYSUTILS.@UnitInit
 10312 					jsr MAIN.SYSUTILS.@UnitInit
 10313 					.fi
 10314 				
 10315 					.ifdef MAIN.B_CRT.@UnitInit
 10316 					jsr MAIN.B_CRT.@UnitInit
 10317 					.fi
 10318 				
 10319 					.ifdef MAIN.B_SYSTEM.@UnitInit
 10320 					jsr MAIN.B_SYSTEM.@UnitInit
 10321 					.fi
 10322 				
 10323 					.ifdef MAIN.B_PMG.@UnitInit
 10324 					jsr MAIN.B_PMG.@UnitInit
 10325 					.fi
 10326 				
 10327 					.ifdef MAIN.JOYSTICK.@UnitInit
 10328 					jsr MAIN.JOYSTICK.@UnitInit
 10329 					.fi
 10330 				.endm
 10331
 10332 				; ------------------------------------------------------------
 10333
 10334 					ift .SIZEOF(MAIN.SYSTEM) > 0
 10335 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
 10335 				SYSTEM: $29F6..$2AAA
 10336 					eif
 10337
 10338 					ift .SIZEOF(MAIN.ATARI) > 0
 10339 					.print 'ATARI: ',MAIN.ATARI,'..',MAIN.ATARI+.SIZEOF(MAIN.ATARI)-1
 10340 					eif
 10341
 10342 					ift .SIZEOF(MAIN.CRT) > 0
 10343 					.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
 10343 				CRT: $2AAB..$2ACA
 10344 					eif
 10345
 10346 					ift .SIZEOF(MAIN.DOS) > 0
 10347 					.print 'DOS: ',MAIN.DOS,'..',MAIN.DOS+.SIZEOF(MAIN.DOS)-1
 10348 					eif
 10349
 10350 					ift .SIZEOF(MAIN.STRUTILS) > 0
 10351 					.print 'STRUTILS: ',MAIN.STRUTILS,'..',MAIN.STRUTILS+.SIZEOF(MAIN.STRUTILS)-1
 10352 					eif
 10353
 10354 					ift .SIZEOF(MAIN.SYSUTILS) > 0
 10355 					.print 'SYSUTILS: ',MAIN.SYSUTILS,'..',MAIN.SYSUTILS+.SIZEOF(MAIN.SYSUTILS)-1
 10355 				SYSUTILS: $2ACB..$2CE1
 10356 					eif
 10357
 10358 					ift .SIZEOF(MAIN.B_CRT) > 0
 10359 					.print 'B_CRT: ',MAIN.B_CRT,'..',MAIN.B_CRT+.SIZEOF(MAIN.B_CRT)-1
 10359 				B_CRT: $2CE2..$2FED
 10360 					eif
 10361
 10362 					ift .SIZEOF(MAIN.B_SYSTEM) > 0
 10363 					.print 'B_SYSTEM: ',MAIN.B_SYSTEM,'..',MAIN.B_SYSTEM+.SIZEOF(MAIN.B_SYSTEM)-1
 10364 					eif
 10365
 10366 					ift .SIZEOF(MAIN.B_PMG) > 0
 10367 					.print 'B_PMG: ',MAIN.B_PMG,'..',MAIN.B_PMG+.SIZEOF(MAIN.B_PMG)-1
 10367 				B_PMG: $2FEE..$3084
 10368 					eif
 10369
 10370 					ift .SIZEOF(MAIN.JOYSTICK) > 0
 10371 					.print 'JOYSTICK: ',MAIN.JOYSTICK,'..',MAIN.JOYSTICK+.SIZEOF(MAIN.JOYSTICK)-1
 10371 				JOYSTICK: $3085..$308C
 10372 					eif
 10373
 10374 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
 10374 				CODE: $2000..$589C
 10375
 10376 				; ------------------------------------------------------------
 10377
 10378 58AF				.align $0004
 10379
 10380 58B0			DATAORIGIN
 10381 58B0-62FA> 28 00 18 00 + .by  $28 $00 $18 $00 $2D $0C $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10382 58C8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10383 58E0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10384 58F8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10385 5910 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10386 5928 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10387 5940 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10388 5958 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10389 5970 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10390 5988 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10391 59A0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10392 59B8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10393 59D0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10394 59E8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10395 5A00 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10396 5A18 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10397 5A30 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10398 5A48 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10399 5A60 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10400 5A78 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10401 5A90 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10402 5AA8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10403 5AC0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10404 5AD8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10405 5AF0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10406 5B08 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10407 5B20 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10408 5B38 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10409 5B50 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10410 5B68 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10411 5B80 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10412 5B98 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10413 5BB0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10414 5BC8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10415 5BE0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10416 5BF8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10417 5C10 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10418 5C28 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10419 5C40 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10420 5C58 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10421 5C70 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10422 5C88 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10423 5CA0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10424 5CB8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10425 5CD0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10426 5CE8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10427 5D00 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10428 5D18 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10429 5D30 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10430 5D48 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10431 5D60 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10432 5D78 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10433 5D90 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10434 5DA8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10435 5DC0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10436 5DD8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10437 5DF0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10438 5E08 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10439 5E20 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10440 5E38 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10441 5E50 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10442 5E68 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10443 5E80 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10444 5E98 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10445 5EB0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10446 5EC8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10447 5EE0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10448 5EF8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10449 5F10 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10450 5F28 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10451 5F40 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10452 5F58 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10453 5F70 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10454 5F88 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10455 5FA0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10456 5FB8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10457 5FD0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10458 5FE8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10459 6000 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10460 6018 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10461 6030 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10462 6048 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10463 6060 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10464 6078 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10465 6090 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10466 60A8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10467 60C0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10468 60D8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10469 60F0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10470 6108 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10471 6120 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10472 6138 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10473 6150 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $03  $00 $0E $00 $04 $90 $8E $98 $98
 10474 6168 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10475 6180 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10476 6198 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $01 $80 $14 <[DATAORIGIN+$08FC] >[DATAORIGIN+$08FC] <[DATAORIGIN+$08FE] >[DATAORIGIN+$08FE]
 10477 61B0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $FF $FF $00  $00 $00 $00 $00 $00 $00 $00 $00
 10478 61C8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10479 61E0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10480 61F8 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10481 6210 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10482 6228 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10483 6240 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10484 6258 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10485 6270 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10486 6288 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10487 62A0 00 00 00 00 00 00 + .by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $28 $00 $50 $00 $78 $00  $A0 $00 $C8 $00 $F0 $00 $18 $01
 10488 62B8 40 01 68 01 90 01 + .by  $40 $01 $68 $01 $90 $01 $B8 $01  $E0 $01 $08 $02 $30 $02 $58 $02  $80 $02 $A8 $02 $D0 $02 $F8 $02
 10489 62D0 20 03 48 03 70 03 + .by  $20 $03 $48 $03 $70 $03 $98 $03  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
 10490 62E8 3F 21 21 21 21 3F + .by  $3F $21 $21 $21 $21 $3F $50 $70  $90 $B0 $48 $40 $38 $30 $03 $03  $03 $03 $FF
 10491
 10492 = 0A4B			VARINITSIZE	= *-DATAORIGIN
 10493 = 0AF4			VARDATASIZE	= 2804
 10494
 10495 = 63A4			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
 10496
 10497 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
 10497 				DATA: $58B0..$63A4
 10498
 10499 02E0-02E1> CE 29			run START
 10500
 10501 				; ------------------------------------------------------------
 10502
 10503 				.macro	STATICDATA
 10504 				.by  $04 $54 $52 $55 $45 $00 $05 $46  $41 $4C $53 $45 $00 $00 $00 $04  $90 $8E $98 $98 $00 $12 $AD $AF
 10505 				.by  $A4 $A5 $00 $00 $00 $00 $00 $00  $B8 $00 $00 $00 $B9 $00 $00 $00  $00 $05 $74 $79 $70 $65 $00 $00
 10506 				.by  $05 $64 $72 $61 $77 $00 $00 $05  $62 $6C $6F $63 $6B $00 $28 $A3  $A1 $B0 $B3 $9A $62 $72 $75 $73
 10507 				.by  $68 $00 $00 $B2 $A5 $B4 $B5 $B2  $AE $9A $70 $61 $69 $6E $74 $00  $00 $29 $2E $33 $25 $32 $34 $00
 10508 				.by  $29 $2E $36 $25 $32 $33 $25 $00  $06 $A9 $AE $B3 $A5 $B2 $B4 $00  $07 $A9 $AE $B6 $A5 $B2 $B3 $A5
 10509 				.by  $00 $28 $A3 $A1 $B0 $B3 $9A $62  $72 $75 $73 $68 $00 $00 $00 $A4  $72 $61 $77 $00 $00 $00 $AC $69
 10510 				.by  $6E $65 $00 $00 $00 $A6 $72 $61  $6D $65 $00 $00 $00 $A2 $6C $6F  $63 $6B $00 $04 $A4 $B2 $A1 $B7
 10511 				.by  $00 $04 $AC $A9 $AE $A5 $00 $05  $A6 $B2 $A1 $AD $A5 $00 $05 $A2  $AC $AF $A3 $AB $00 $1F $33 $65
 10512 				.by  $6C $65 $63 $74 $00 $61 $72 $65  $61 $00 $77 $69 $74 $68 $00 $B2  $A5 $B4 $B5 $B2 $AE $00 $6F $72
 10513 				.by  $00 $A6 $A9 $B2 $A5 $00 $20 $A3  $6F $70 $79 $00 $00 $AD $6F $76  $65 $00 $00 $A6 $69 $6C $6C $00
 10514 				.by  $00 $A9 $6E $76 $65 $72 $74 $00  $00 $B3 $61 $76 $65 $00 $00 $00  $02 $00 $00 $00 $0F $25 $6E $74
 10515 				.by  $65 $72 $00 $26 $69 $6C $65 $6E  $61 $6D $65 $1A $00 $0C $20 $20  $20 $20 $20 $20 $20 $20 $20 $20
 10516 				.by  $20 $20 $00 $0C $B3 $E5 $EC $E5  $E3 $F4 $80 $A2 $F2 $F5 $F3 $E8  $00 $0D $24 $65 $76 $69 $63 $65
 10517 				.by  $00 $25 $72 $72 $6F $72 $01 $00  $0D $22 $61 $64 $00 $26 $69 $6C  $65 $6E $61 $6D $65 $01 $00 $08
 10518 				.by  $33 $75 $63 $63 $65 $73 $73 $0E  $00 $0C $41 $52 $54 $55 $52 $43  $46 $47 $2E $53 $59 $53 $00 $11
 10519 				.by  $B3 $A1 $B6 $E9 $AE $A7 $80 $A4  $A1 $B4 $A1 $80 $A2 $AC $AF $A3  $AB $00 $1C $8D $8D $8D $8D $8D
 10520 				.by  $8D $8D $8D $8D $8D $8D $8D $8D  $8D $8D $8D $8D $8D $8D $8D $8D  $8D $8D $8D $8D $8D $8D $8D $00
 10521 				.by  $1C $A1 $B2 $B4 $F5 $F2 $80 $8D  $80 $F6 $8E $80 $80 $80 $80 $80  $80 $E2 $EF $E3 $E9 $E1 $EE $F5
 10522 				.by  $87 $92 $90 $92 $90 $00 $12 $A1  $B4 $A1 $B3 $A3 $A9 $A9 $80 $A1  $F2 $F4 $80 $A5 $E4 $E9 $F4 $EF
 10523 				.by  $F2 $00 $11 $33 $34 $21 $32 $34  $80 $80 $8D $80 $A9 $8F $AF $80  $ED $E5 $EE $F5 $00 $14 $33 $25
 10524 				.by  $2C $25 $23 $34 $80 $8D $80 $E3  $E8 $E1 $EE $E7 $E5 $80 $ED $EF  $E4 $E5 $00 $11 $2F $30 $34 $29
 10525 				.by  $2F $2E $80 $8D $80 $F3 $E5 $F4  $F4 $E9 $EE $E7 $F3 $00 $14 $28  $25 $2C $30 $80 $80 $80 $8D $80
 10526 				.by  $F4 $E8 $E9 $F3 $80 $F3 $E3 $F2  $E5 $E5 $EE $00 $0D $B0 $F2 $E5  $F3 $F3 $80 $61 $6E $79 $80 $EB
 10527 				.by  $E5 $F9 $00 $0C $80 $80 $80 $80  $80 $80 $80 $80 $80 $80 $80 $80  $00 $05 $44 $3A $2A $2E $2A $00
 10528 				.by  $03 $33 $39 $33 $00 $1E $A9 $8F  $AF $80 $AD $A5 $AE $B5 $80 $80  $80 $80 $80 $80 $80 $80 $80 $80
 10529 				.by  $80 $80 $80 $80 $80 $80 $A6 $E9  $EC $E5 $F3 $9A $00 $24 $8D $8D  $8D $8D $8D $8D $8D $8D $8D $8D
 10530 				.by  $8D $8D $8D $8D $8D $8D $8D $8D  $8D $8D $8D $8D $8D $80 $8D $8D  $8D $8D $8D $8D $8D $8D $8D $8D
 10531 				.by  $8D $8D $00 $11 $2E $E5 $F7 $80  $E9 $ED $E1 $E7 $E5 $80 $88 $E3  $EC $E5 $E1 $F2 $89 $00 $12 $2C
 10532 				.by  $EF $E1 $E4 $80 $A1 $B4 $A1 $B3  $A3 $A9 $A9 $80 $E9 $ED $E1 $E7  $E5 $00 $12 $33 $E1 $F6 $E5 $80
 10533 				.by  $A1 $B4 $A1 $B3 $A3 $A9 $A9 $80  $E9 $ED $E1 $E7 $E5 $00 $16 $B3  $E1 $F6 $E5 $80 $E5 $38 $E5 $E3
 10534 				.by  $F5 $F4 $E1 $E2 $EC $E5 $80 $E2  $E9 $EE $E1 $F2 $F9 $00 $13 $AC  $EF $E1 $E4 $80 $E3 $F5 $F3 $F4
 10535 				.by  $EF $ED $80 $23 $E8 $E1 $F2 $F3  $E5 $F4 $00 $17 $B2 $E5 $F3 $F4  $EF $F2 $E5 $80 $24 $E5 $E6 $E1
 10536 				.by  $F5 $EC $F4 $80 $E3 $E8 $E1 $F2  $F3 $E5 $F4 $00 $0B $31 $F5 $E9  $F4 $80 $F4 $EF $80 $A4 $AF $B3
 10537 				.by  $00 $13 $B0 $F2 $E5 $F3 $F3 $80  $25 $33 $23 $80 $F4 $EF $80 $EC  $E5 $E1 $F6 $E5 $80 $00 $0F $A5
 10538 				.by  $A4 $E9 $B4 $AF $B2 $80 $B3 $A5  $B4 $B4 $E9 $AE $A7 $B3 $00 $13  $22 $E1 $E3 $EB $E7 $F2 $EF $F5
 10539 				.by  $EE $E4 $80 $E3 $EF $EC $EF $F2  $9A $80 $84 $00 $13 $26 $EF $F2  $E5 $E7 $F2 $EF $F5 $EE $E4 $80
 10540 				.by  $E3 $EF $EC $EF $F2 $9A $80 $84  $00 $15 $21 $F2 $F2 $EF $F7 $F3  $80 $F7 $E9 $F4 $E8 $EF $F5 $F4
 10541 				.by  $80 $A3 $F4 $F2 $EC $9A $80 $00  $03 $6F $6E $80 $00 $03 $6F $66  $66 $00 $12 $23 $E8 $E1 $F2 $E3
 10542 				.by  $EF $E4 $E5 $80 $E4 $E9 $F3 $F0  $EC $E1 $F9 $9A $80 $00 $07 $6F  $66 $66 $80 $80 $80 $80 $00 $07
 10543 				.by  $21 $34 $21 $33 $23 $29 $29 $00  $07 $21 $6E $74 $69 $63 $80 $80  $00 $0B $33 $E1 $F6 $E5 $80 $E3
 10544 				.by  $EF $EE $E6 $E9 $E7 $00 $12 $B0  $F2 $E5 $F3 $F3 $80 $25 $33 $23  $80 $F4 $EF $80 $EC $E5 $E1 $F6
 10545 				.by  $E5 $00 $6C $6A $3B $FF $FF $6B  $2B $2A $6F $FF $70 $75 $9B $69  $2D $3D $76 $FF $63 $FF $FF $62
 10546 				.by  $78 $7A $34 $FF $33 $36 $1B $35  $32 $31 $2C $20 $2E $6E $FF $6D  $2F $81 $72 $FF $65 $79 $7F $74
 10547 				.by  $77 $71 $39 $FF $30 $37 $7E $38  $3E $FF $66 $68 $64 $FF $82 $67  $73 $61 $4C $4A $3A $FF $FF $4B
 10548 				.by  $5C $5E $4F $FF $50 $55 $FF $49  $5F $7C $56 $FF $43 $FF $FF $42  $58 $5A $24 $FF $23 $26 $FF $25
 10549 				.by  $22 $21 $5B $3B $5D $4E $FF $4D  $3F $FF $52 $FF $45 $59 $FF $54  $57 $51 $28 $FF $29 $27 $FF $40
 10550 				.by  $FF $FF $46 $48 $44 $FF $FF $47  $53 $41 $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF
 10551 				.by  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF
 10552 				.by  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF
 10553 				.by  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF
 10554 				.by  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF
 10555 				.by  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF $FF $FF $FF $FF $FF $FF  $FF $FF
 10556 				.endm
 10557
 10558 					end
