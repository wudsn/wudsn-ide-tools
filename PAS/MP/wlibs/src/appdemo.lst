mads 2.1.6 build 10 (13 Sep 22)
Source: appdemo.a65
     1 				; ------------------------------------------------------------
     2 				; Mad Pascal Compiler version 1.6.6 [2022/09/07] for 6502
     3 				; ------------------------------------------------------------
     4
     5 = 0010			STACKWIDTH	= 16
     6 = 2000			CODEORIGIN	= $2000
     7
     8 = 0001			TRUE		= 1
     9 = 0000			FALSE		= 0
    10
    11 				; ------------------------------------------------------------
    12
    13 					org $80
    14
    15 				zpage
    16
    17 				.ifdef @vbxe_detect
    18 				fxptr	.ds 2						; VBXE pointer
    19 				.fi
    20
    21 				.if .def(@AllocMem)||.def(MAIN.SYSTEM.GETMEM)||.def(MAIN.SYSTEM.FREEMEM)
    22 				psptr	.ds 2						; PROGRAMSTACK Pointer
    23 				.fi
    24
    25 = 0080			bp	.ds 2
    26 = 0082			bp2	.ds 2
    27
    28 = 0084			eax	.ds 4						;8 bytes (aex + edx) -> divREAL
    29 = 0088			edx	.ds 4
    30 = 008C			ecx	.ds 4
    31
    32 				TMP
    33 				ztmp
    34 = 0090			ztmp8	.ds 1
    35 = 0091			ztmp9	.ds 1
    36 = 0092			ztmp10	.ds 1
    37 = 0093			ztmp11	.ds 1
    38
    39 = 0094			STACKORIGIN	.ds STACKWIDTH*4
    40 				zpend
    41
    42 				; ------------------------------------------------------------
    43
    44 = 0084			ax	= eax
    45 = 0084			al	= eax
    46 = 0085			ah	= eax+1
    47
    48 = 008C			cx	= ecx
    49 = 008C			cl	= ecx
    50 = 008D			ch	= ecx+1
    51
    52 = 0088			dx	= edx
    53 = 0088			dl	= edx
    54 = 0089			dh	= edx+1
    55
    56 					org eax
    57
    58 = 0084			FP1MAN0	.ds 1
    59 = 0085			FP1MAN1	.ds 1
    60 = 0086			FP1MAN2	.ds 1
    61 = 0087			FP1MAN3	.ds 1
    62
    63 					org ztmp8
    64
    65 = 0090			FP1SGN	.ds 1
    66 = 0091			FP1EXP	.ds 1
    67
    68 					org edx
    69
    70 = 0088			FP2MAN0	.ds 1
    71 = 0089			FP2MAN1	.ds 1
    72 = 008A			FP2MAN2	.ds 1
    73 = 008B			FP2MAN3	.ds 1
    74
    75 					org ztmp10
    76
    77 = 0092			FP2SGN	.ds 1
    78 = 0093			FP2EXP	.ds 1
    79
    80 					org ecx
    81
    82 = 008C			FPMAN0	.ds 1
    83 = 008D			FPMAN1	.ds 1
    84 = 008E			FPMAN2	.ds 1
    85 = 008F			FPMAN3	.ds 1
    86
    87 					org bp2
    88
    89 = 0082			FPSGN	.ds 1
    90 = 0083			FPEXP	.ds 1
    91
    92 					.ifdef MAIN.@DEFINES.BASICOFF
    93 					org CODEORIGIN
    94 					icl 'atari\basicoff.asm'
    95 					ini CODEORIGIN
    96 					.fi
    97
    98 					.ifdef MAIN.@DEFINES.S_VBXE
    99 					opt h-
   100 					ins 'atari\s_vbxe\sdxld2.obx'
   101 					opt h+
   102 					.fi
   103
   104 				; ------------------------------------------------------------
   105
   106 					org CODEORIGIN
   107
   108 2000				STATICDATA
Macro: STATICDATA [Source: appdemo.a65]
     1 FFFF> 2000-5011> 05 31 + .by  $05 $31 $2E $30 $2E $30 $00 $03  $20 $20 $20 $00 $04 $54 $52 $55  $45 $00 $05 $46 $41 $4C $53 $45
     2 2018 00 06 41 6C 65 72 + .by  $00 $06 $41 $6C $65 $72 $74 $21  $00 $04 $20 $4F $4B $20 $00 $03  $5B $20 $5D $00 $06 $5B $20 $4F
     3 2030 6B 20 5D 00 08 5B + .by  $6B $20 $5D $00 $08 $5B $43 $61  $6E $63 $65 $6C $5D $00 $03 $4F  $6E $65 $00 $03 $54 $77 $6F $00
     4 2048 05 54 68 72 65 65 + .by  $05 $54 $68 $72 $65 $65 $00 $08  $43 $68 $6F $69 $63 $65 $20 $41  $00 $08 $43 $68 $6F $69 $63 $65
     5 2060 20 42 00 08 43 68 + .by  $20 $42 $00 $08 $43 $68 $6F $69  $63 $65 $20 $43 $00 $0E $4E $61  $76 $3A $20 $20 $20 $20 $20 $20
     6 2078 20 20 20 20 00 0E + .by  $20 $20 $20 $20 $00 $0E $4E $61  $76 $3A $20 $20 $20 $20 $5E $63  $53 $5E $63 $45 $00 $0E $4E $61
     7 2090 76 3A 58 20 20 20 + .by  $76 $3A $58 $20 $20 $20 $20 $20  $20 $20 $20 $20 $00 $28 $2D $31  $30 $30 $2E $30 $30 $20 $20 $20
     8 20A8 20 20 20 20 20 20 + .by  $20 $20 $20 $20 $20 $20 $20 $20  $20 $20 $20 $20 $20 $20 $20 $20  $20 $20 $20 $20 $20 $20 $20 $20
     9 20C0 20 20 20 20 20 20 + .by  $20 $20 $20 $20 $20 $20 $00 $28  $54 $68 $69 $73 $20 $73 $74 $72  $69 $6E $67 $20 $68 $61 $73 $20
    10 20D8 73 6F 6D 65 74 68 + .by  $73 $6F $6D $65 $74 $68 $69 $6E  $67 $20 $74 $6F $20 $65 $64 $69  $74 $20 $69 $6E $20 $69 $74 $21
    11 20F0 00 28 20 20 20 20 + .by  $00 $28 $20 $20 $20 $20 $20 $20  $20 $20 $20 $20 $20 $20 $20 $20  $20 $20 $20 $20 $20 $20 $20 $20
    12 2108 20 20 20 20 20 20 + .by  $20 $20 $20 $20 $20 $20 $20 $20  $20 $20 $20 $20 $20 $20 $20 $20  $20 $20 $00 $28 $20 $41 $6E $79
    13 2120 20 63 68 61 72 61 + .by  $20 $63 $68 $61 $72 $61 $63 $74  $65 $72 $20 $73 $74 $72 $69 $6E  $67 $21 $20 $20 $20 $20 $20 $20
    14 2138 20 20 20 20 20 20 + .by  $20 $20 $20 $20 $20 $20 $20 $20  $20 $20 $20 $20 $00 $0A $49 $6E  $70 $75 $74 $20 $46 $6F $72 $6D
    15 2150 00 04 45 64 69 74 + .by  $00 $04 $45 $64 $69 $74 $00 $0B  $44 $61 $74 $61 $20 $46 $69 $65  $6C $64 $73 $00 $06 $4E $75 $6D
    16 2168 65 72 3A 00 06 41 + .by  $65 $72 $3A $00 $06 $41 $6C $70  $68 $61 $3A $00 $06 $41 $6C $4E  $75 $6D $3A $00 $06 $41 $6E $79
    17 2180 2E 2E 3A 00 06 53 + .by  $2E $2E $3A $00 $06 $53 $70 $69  $6E $2E $3A $00 $11 $52 $61 $64  $69 $6F $20 $42 $75 $74 $74 $6F
    18 2198 6E 73 20 28 68 29 + .by  $6E $73 $20 $28 $68 $29 $00 $11  $52 $61 $64 $69 $6F $20 $42 $75  $74 $74 $6F $6E $73 $20 $28 $76
    19 21B0 29 00 0B 43 68 65 + .by  $29 $00 $0B $43 $68 $65 $63 $6B  $20 $42 $6F $78 $65 $73 $00 $04  $4D $69 $6C $6B $00 $05 $42 $72
    20 21C8 65 61 64 00 06 42 + .by  $65 $61 $64 $00 $06 $42 $75 $74  $74 $65 $72 $00 $24 $44 $6F $69  $6E $67 $20 $73 $6F $6D $65 $74
    21 21E0 68 69 6E 67 20 77 + .by  $68 $69 $6E $67 $20 $77 $69 $74  $68 $20 $65 $6E $74 $65 $72 $65  $64 $20 $64 $61 $74 $61 $2E $2E
    22 21F8 2E 00 06 53 74 61 + .by  $2E $00 $06 $53 $74 $61 $74 $75  $73 $00 $0D $57 $69 $6E $64 $6F  $77 $20 $53 $74 $61 $74 $75 $73
    23 2210 00 0D 2D 2D 2D 2D + .by  $00 $0D $2D $2D $2D $2D $2D $2D  $20 $2D $2D $2D $2D $2D $2D $00  $09 $50 $72 $6F $67 $72 $65 $73
    24 2228 73 3A 00 04 55 73 + .by  $73 $3A $00 $04 $55 $73 $65 $64  $00 $04 $46 $72 $65 $65 $00 $1A  $20 $50 $72 $65 $73 $73 $20 $61
    25 2240 20 6B 65 79 20 74 + .by  $20 $6B $65 $79 $20 $74 $6F $20  $63 $6F $6E $74 $69 $6E $75 $65  $2E $20 $00 $05 $41 $62 $6F $75
    26 2258 74 00 10 44 65 6D + .by  $74 $00 $10 $44 $65 $6D $6F $20  $41 $70 $70 $6C $69 $63 $61 $74  $69 $6F $6E $00 $10 $56 $65 $72
    27 2270 73 69 6F 6E 20 31 + .by  $73 $69 $6F $6E $20 $31 $2E $30  $30 $2D $50 $41 $53 $00 $20 $28  $43 $29 $20 $32 $30 $32 $32 $20
    28 2288 20 57 61 64 65 20 + .by  $20 $57 $61 $64 $65 $20 $52 $69  $70 $6B $6F $77 $73 $6B $69 $2C  $20 $61 $6D $61 $72 $6F $6B $00
    29 22A0 1A 41 70 70 6C 69 + .by  $1A $41 $70 $70 $6C $69 $63 $61  $74 $69 $6F $6E $20 $74 $6F $20  $64 $65 $6D $6F $6E $73 $74 $72
    30 22B8 61 74 65 00 16 74 + .by  $61 $74 $65 $00 $16 $74 $68 $65  $20 $4D $61 $64 $50 $61 $73 $63  $61 $6C $20 $6C $69 $62 $72 $61
    31 22D0 72 79 2E 00 11 43 + .by  $72 $79 $2E $00 $11 $43 $6F $6E  $76 $65 $72 $74 $65 $64 $20 $66  $72 $6F $6D $20 $43 $2E $00 $17
    32 22E8 56 31 2D 32 30 32 + .by  $56 $31 $2D $32 $30 $32 $31 $2D  $41 $74 $61 $72 $69 $38 $3A $20  $41 $63 $74 $69 $6F $6E $21 $00
    33 2300 1A 56 31 2D 43 2D + .by  $1A $56 $31 $2D $43 $2D $32 $30  $32 $32 $2D $41 $74 $61 $72 $69  $38 $3A $20 $43 $20 $28 $43 $43
    34 2318 36 35 29 00 23 56 + .by  $36 $35 $29 $00 $23 $56 $31 $2D  $50 $41 $53 $2D $32 $30 $32 $32  $2D $41 $74 $61 $72 $69 $38 $3A
    35 2330 20 50 41 53 20 28 + .by  $20 $50 $41 $53 $20 $28 $4D $61  $64 $50 $61 $73 $63 $61 $6C $29  $00 $04 $20 $4F $6B $20 $00 $0C
    36 2348 20 53 75 62 2D 49 + .by  $20 $53 $75 $62 $2D $49 $74 $65  $6D $20 $31 $20 $00 $0C $20 $53  $75 $62 $2D $49 $74 $65 $6D $20
    37 2360 32 20 00 0C 20 53 + .by  $32 $20 $00 $0C $20 $53 $75 $62  $2D $49 $74 $65 $6D $20 $33 $20  $00 $08 $53 $75 $62 $2D $4D $65
    38 2378 6E 75 00 16 20 53 + .by  $6E $75 $00 $16 $20 $53 $75 $62  $2D $49 $74 $65 $6D $20 $31 $20  $73 $65 $6C $65 $63 $74 $65 $64
    39 2390 2E 20 00 16 20 53 + .by  $2E $20 $00 $16 $20 $53 $75 $62  $2D $49 $74 $65 $6D $20 $32 $20  $73 $65 $6C $65 $63 $74 $65 $64
    40 23A8 2E 20 00 16 20 53 + .by  $2E $20 $00 $16 $20 $53 $75 $62  $2D $49 $74 $65 $6D $20 $33 $20  $73 $65 $6C $65 $63 $74 $65 $64
    41 23C0 2E 20 00 0E 20 49 + .by  $2E $20 $00 $0E $20 $49 $6E $70  $75 $74 $20 $46 $6F $72 $6D $20  $20 $20 $00 $0E $20 $50 $72 $6F
    42 23D8 67 72 65 73 73 20 + .by  $67 $72 $65 $73 $73 $20 $42 $61  $72 $20 $00 $0E $20 $53 $75 $62  $2D $4D $65 $6E $75 $20 $20 $20
    43 23F0 20 20 00 0E 20 41 + .by  $20 $20 $00 $0E $20 $41 $62 $6F  $75 $74 $20 $20 $20 $20 $20 $20  $20 $20 $00 $0E $20 $45 $78 $69
    44 2408 74 20 20 20 20 20 + .by  $74 $20 $20 $20 $20 $20 $20 $20  $20 $20 $00 $19 $44 $20 $45 $20  $4D $20 $4F $20 $4E $20 $53 $20
    45 2420 54 20 52 20 41 20 + .by  $54 $20 $52 $20 $41 $20 $54 $20  $49 $20 $4F $20 $4E $00 $04 $4D  $65 $6E $75 $00 $6C $6A $3B $C7
    46 2438 C7 6B 2B 2A 6F C7 + .by  $C7 $6B $2B $2A $6F $C7 $70 $75  $9B $69 $2D $3D $76 $C7 $63 $C7  $C7 $62 $78 $7A $34 $C7 $33 $36
    47 2450 C7 35 32 31 2C 20 + .by  $C7 $35 $32 $31 $2C $20 $2E $6E  $C7 $6D $2F $C7 $72 $C7 $65 $79  $C7 $74 $77 $71 $39 $C7 $30 $37
    48 2468 C7 38 3C 3E 66 68 + .by  $C7 $38 $3C $3E $66 $68 $64 $C7  $C7 $67 $73 $61 $4C $4A $3A $C7  $C7 $4B $5C $5E $4F $C7 $50 $55
    49 2480 C7 49 5F 7C 56 C7 + .by  $C7 $49 $5F $7C $56 $C7 $43 $C7  $C7 $42 $58 $5A $24 $C7 $23 $26  $C7 $25 $22 $21 $5B $20 $5D $4E
    50 2498 C7 4D 3F C7 52 C7 + .by  $C7 $4D $3F $C7 $52 $C7 $45 $59  $C7 $54 $57 $51 $28 $C7 $29 $27  $C7 $40 $C7 $C7 $46 $48 $44 $C7
    51 24B0 C7 47 53 41 0C 0A + .by  $C7 $47 $53 $41 $0C $0A $7B $C7  $C7 $0B $C7 $C7 $0F $C7 $10 $15  $C7 $09 $C7 $C7 $16 $C7 $03 $C7
    52 24C8 C7 02 18 1A C7 C7 + .by  $C7 $02 $18 $1A $C7 $C7 $C7 $C7  $C7 $C7 $C7 $C7 $C7 $C7 $60 $0E  $C7 $0D $C7 $C7 $12 $C7 $05 $19
    53 24E0 C7 14 17 11 C7 C7 + .by  $C7 $14 $17 $11 $C7 $C7 $C7 $C7  $C7 $C7 $C7 $C7 $06 $08 $04 $C7  $C7 $07 $13 $01 $2C $20 $34 $20
    54 24F8 3E 20 43 20 48 20 + .by  $3E $20 $43 $20 $48 $20 $4F $20  $59 $20 $63 $20 $47 $23 $55 $23  $63 $23 $C3 $23 $D3 $23 $E3 $23
    55 2510 F3 23 03 24		.by  $F3 $23 $03 $24
Source: appdemo.a65
   109
   110 				; ------------------------------------------------------------
   111
   112 2514			RTLIB
   113 2514				icl 'rtl6502_a8.asm'
Source: rtl6502_a8.asm
    78 					opt l+
   114
   115 				.print 'ZPAGE: ',zpage,'..',zpend-1
   115 				ZPAGE: $0080..$00D3
   116
   117 				.print 'RTLIB: ',RTLIB,'..',*-1
   117 				RTLIB: $2514..$26DF
   118
   119 				; ------------------------------------------------------------
   120
   121 26E0			START
   122 26E0 BA				tsx
   123 26E1 8E FB 4F			stx MAIN.@halt+1
   124
   125 = 11FE			VLEN	= VARDATASIZE-VARINITSIZE
   126 = 501A			VADR	= DATAORIGIN+VARINITSIZE
   127
   128 					ift VADR > $BFFF
   129 					ert 'Invalid memory address range ',VADR
   130 					eli (VLEN>0) && (VLEN<=256)
   131 					ldx #256-VLEN
   132 					lda #$00
   133 					sta:rne VADR+VLEN-256,x+
   134 					eli VLEN>256
   135 					@fill #VADR #VLEN #$00
   135 				 MWA #VADR @FILL.PTR1\ MWA #VLEN @FILL.PTR3\ MVA #$00 @FILL.PTR2\ JSR @FILL
   135 26E4 A9 1A 85 88 A9 50 +  MWA #VADR @FILL.PTR1
   135 26EC A9 FE 85 8C A9 11 +  MWA #VLEN @FILL.PTR3
   135 26F4 A9 00 85 84		 MVA #$00 @FILL.PTR2
   135 26F8 20 CD 25		 JSR @FILL
   136 					eif
   137
   138 				.ifdef :psptr
   139 					mwa #PROGRAMSTACK :psptr
   140 				.fi
   141
   142 					.ifdef MAIN.@DEFINES.ROMOFF
   143 					icl 'atari\romoff.asm'
   144 					.fi
   145
   146 26FB A2 0F			ldx #$0F					; DOS II+/D ParamStr
   147 26FD BD 40 03 9D 00 50 + 	mva:rpl $340,x MAIN.IOCB@COPY,x-
   148
   149 2706 E8				inx						; X = 0
   150 2707 86 80			stx bp						; BP = 0
   151
   152 2709 8E 08 D2			stx audctl					; reset POKEY
   153 270C 8E 18 D2			stx audctl+$10
   154 270F A9 03			lda #3
   155 2711 8D 0F D2			sta skctl
   156 2714 8D 1F D2			sta skctl+$10
   157
   158 2717 CA				dex						; X = 255
   159
   160 2718				UNITINITIALIZATION
Macro: UNITINITIALIZATION [Source: appdemo.a65]
Source: appdemo.a65
   161
   162 2718			.local	MAIN						; PROCEDURE
   163
   164 2718 4C E3 4E			jmp l_043B
   165
   166 				; ------------------------------------------------------------
   167
   168 271B			.local	SYSTEM						; UNIT
   169
   170 271B			.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER
   171
   172 				; ------------------------------------------------------------
   173
   174 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   175 				; as Pointer
   176 271B B5 94			lda :STACKORIGIN,x
   177 271D 85 88			sta A
   178 271F B5 A4			lda :STACKORIGIN+STACKWIDTH,x
   179 2721 85 89			sta A+1
   180 2723 CA				dex
   181 2724			@main
   182
   183 				; -------------------  ASM Block 00000002  -------------------
   184
   185 2724 A0 00			ldy #0
   186 2726 B1 88 85 90			mva (:edx),y Result
   187
   188 272A			@exit
   189
   190 				; ------------------------------------------------------------
   191
   192 				; Push BYTE / CHAR / SHORTINT / BOOLEAN
   193 				; as Pointer
   194
   195 272A E8				inx
   196 272B A5 90 95 94			mva RESULT :STACKORIGIN,x
   197
   198 					.ifdef @new
   199 					lda <@VarData
   200 					sta :ztmp
   201 					lda >@VarData
   202 					ldy #@VarDataSize-1
   203 					jmp @FreeMem
   204 					eif
   205
   206 				; ------------------------------------------------------------
   207
   208 = 0088			A	= :EDX
   209 = 0090			RESULT	= :STACKORIGIN-4
   210 272F 60				rts						; ret
   211 				.endl
   212
   213 2730			.local	DPEEK						; FUNCTION | ASSEMBLER | REGISTER
   214
   215 				; ------------------------------------------------------------
   216
   217 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   218 				; as Pointer
   219 2730 B5 94			lda :STACKORIGIN,x
   220 2732 85 88			sta A
   221 2734 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
   222 2736 85 89			sta A+1
   223 2738 CA				dex
   224 2739			@main
   225
   226 				; -------------------  ASM Block 00000003  -------------------
   227
   228 2739 A0 00			ldy #0
   229 273B B1 88 85 90			mva (:edx),y Result
   230 273F C8				iny
   231 2740 B1 88 85 91			mva (:edx),y Result+1
   232
   233 2744			@exit
   234
   235 				; ------------------------------------------------------------
   236
   237 				; Push WORD / SMALLINT / SHORTREAL / POINTER
   238 				; as Pointer
   239
   240 2744 E8				inx
   241 2745 A5 90 95 94			mva RESULT :STACKORIGIN,x
   242 2749 A5 91 95 A4			mva RESULT+1 :STACKORIGIN+STACKWIDTH,x
   243
   244 					.ifdef @new
   245 					lda <@VarData
   246 					sta :ztmp
   247 					lda >@VarData
   248 					ldy #@VarDataSize-1
   249 					jmp @FreeMem
   250 					eif
   251
   252 				; ------------------------------------------------------------
   253
   254 = 0088			A	= :EDX
   255 = 0090			RESULT	= :STACKORIGIN-4
   256 274D 60				rts						; ret
   257 				.endl
   258
   259 274E			.local	POKE						; PROCEDURE | ASSEMBLER | REGISTER
   260
   261 				; ------------------------------------------------------------
   262
   263 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
   264 				; as Pointer
   265 274E B5 94			lda :STACKORIGIN,x
   266 2750 85 88			sta A
   267 2752 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
   268 2754 85 89			sta A+1
   269 2756 CA				dex
   270 2757 30 05			jmi @main
   271
   272 				; ------------------------------------------------------------
   273
   274 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
   275 				; as Pointer
   276 2759 B5 94			lda :STACKORIGIN,x
   277 275B 85 8C			sta VALUE
   278 275D CA				dex
   279 275E			@main
   280
   281 				; -------------------  ASM Block 00000018  -------------------
   282
   283 275E A0 00			ldy #0
   284 2760 A5 8C 91 88			mva value (:edx),y
   285
   286 				; ------------------------------------------------------------
   287
   288 = 0088			A	= :EDX
   289 = 008C			VALUE	= :ECX
   290 2764			@exit
   291 					.ifdef @new
   292 					lda <@VarData
   293 					sta :ztmp
   294 					lda >@VarData
   295 					ldy #@VarDataSize-1
   296 					jmp @FreeMem
   297 					els
   298 2764 60				rts						; ret
   299 					eif
   300 				.endl
   301
   302 2765			.local	FILLCHAR_048B					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER | INLINE
   303
   304 					.MACRO m@INLINE
   305 				
   306 				; -------------------  ASM Block 00000020  -------------------
   307 				
   308 					jsr @fill
   309 				
   310 					.ENDM
   311
   312 				; ------------------------------------------------------------
   313
   314 = 0088			A	= :EDX
   315 = 008C			COUNT	= :ECX
   316 = 0084			VALUE	= :EAX
   317 2765			@exit
   318 				.endl
   319
   320 2765			.local	FILLCHAR_048C					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER | INLINE
   321
   322 					.MACRO m@INLINE
   323 				
   324 				; -------------------  ASM Block 00000021  -------------------
   325 				
   326 					jsr @fill
   327 				
   328 					.ENDM
   329
   330 				; ------------------------------------------------------------
   331
   332 = 0088			A	= :EDX
   333 = 008C			COUNT	= :ECX
   334 = 0084			VALUE	= :EAX
   335 2765			@exit
   336 				.endl
   337
   338 2765			.local	MOVE_048D					; PROCEDURE | ASSEMBLER | OVERLOAD | REGISTER | INLINE
   339
   340 					.MACRO m@INLINE
   341 				
   342 				; -------------------  ASM Block 00000026  -------------------
   343 				
   344 					jsr @move
   345 				
   346 					.ENDM
   347
   348 				; ------------------------------------------------------------
   349
   350 = 0088			SOURCE	= :EDX
   351 = 008C			DEST	= :ECX
   352 = 0084			COUNT	= :EAX
   353 2765			@exit
   354 				.endl
   355
   356 2765			.local	SPACE						; FUNCTION | ASSEMBLER
   357 2765 8D 1F 50			sta B
   358
   359 				; -------------------  ASM Block 00000030  -------------------
   360
   361 2768 A0 00			ldy #0
   362 276A A9 20			lda #' '
   363 276C 99 00 04 C8 D0 FA		sta:rne @buf,y+
   364
   365 2772 AD 1F 50 8D 00 04		mva b @buf
   366
   367 2778 A9 00 8D 20 50 A9 + 	mwa #@buf Result
   368
   369 2782			@exit
   370
   371 				; ------------------------------------------------------------
   372
   373 = 501F			B	= DATAORIGIN+$000B
   374 = 5020			RESULT	= DATAORIGIN+$000C
   375
   376 = 501F			@VarData	= B
   377 = 0001			@VarDataSize	= 1
   378
   379 2782 60				rts						; ret
   380 				.endl
   381
   382 2783			.local	SETLENGTH					; PROCEDURE | ASSEMBLER | REGISTER
   383
   384 				; -------------------  ASM Block 00000032  -------------------
   385
   386 2783 A0 00			ldy #0
   387 2785 A5 8C 91 88			mva Len (:edx),y
   388
   389 				; ------------------------------------------------------------
   390
   391 = 0088			S	= :EDX
   392 = 008C			LEN	= :ECX
   393 2789			@exit
   394 					.ifdef @new
   395 					lda <@VarData
   396 					sta :ztmp
   397 					lda >@VarData
   398 					ldy #@VarDataSize-1
   399 					jmp @FreeMem
   400 					els
   401 2789 60				rts						; ret
   402 					eif
   403 				.endl
   404
   405 				; ------------------------------------------------------------
   406
   407 = 0101			__PORTB_BANKS	= $0101
   408 = 0648			M_PI_2	= $0648
   409 = 0192			D_PI_2	= $0192
   410 = 0004			D_PI_180	= $04
   411 = 0000			MGTIA	= $00
   412 = 0080			MVBXE	= $80
   413 = 0000			VBXE_XDLADR	= $00
   414 = 00E0			VBXE_BCBTMP	= $E0
   415 = 0100			VBXE_BCBADR	= $0100
   416 = 1000			VBXE_MAPADR	= $1000
   417 = 1000			VBXE_CHBASE	= $1000
   418 = 5000			VBXE_OVRADR	= $5000
   419 = B000			VBXE_WINDOW	= $B000
   420 = 0000			IDLI	= $00
   421 = 0001			IVBL	= $01
   422 = 0002			ITIM1	= $02
   423 = 0003			ITIM2	= $03
   424 = 0004			ITIM4	= $04
   425 = 00FE			CH_DELCHR	= $FE
   426 = 009B			CH_ENTER	= $9B
   427 = 001B			CH_ESC	= $1B
   428 = 001C			CH_CURS_UP	= $1C
   429 = 001D			CH_CURS_DOWN	= $1D
   430 = 001E			CH_CURS_LEFT	= $1E
   431 = 001F			CH_CURS_RIGHT	= $1F
   432 = 007F			CH_TAB	= $7F
   433 = 009B			CH_EOL	= $9B
   434 = 007D			CH_CLR	= $7D
   435 = 00FD			CH_BELL	= $FD
   436 = 007E			CH_DEL	= $7E
   437 = 009C			CH_DELLINE	= $9C
   438 = 009D			CH_INSLINE	= $9D
   439 = 0000			PAL_PMCOLOR0	= $00
   440 = 0001			PAL_PMCOLOR1	= $01
   441 = 0002			PAL_PMCOLOR2	= $02
   442 = 0003			PAL_PMCOLOR3	= $03
   443 = 0004			PAL_COLOR0	= $04
   444 = 0005			PAL_COLOR1	= $05
   445 = 0006			PAL_COLOR2	= $06
   446 = 0007			PAL_COLOR3	= $07
   447 = 0008			PAL_COLBAK	= $08
   448 = 0000			COLOR_BLACK	= $00
   449 = 000E			COLOR_WHITE	= $0E
   450 = 0032			COLOR_RED	= $32
   451 = 0096			COLOR_CYAN	= $96
   452 = 0068			COLOR_VIOLET	= $68
   453 = 00C4			COLOR_GREEN	= $C4
   454 = 0074			COLOR_BLUE	= $74
   455 = 00EE			COLOR_YELLOW	= $EE
   456 = 0028			COLOR_ORANGE	= $28
   457 = 00E4			COLOR_BROWN	= $E4
   458 = 003C			COLOR_LIGHTRED	= $3C
   459 = 0004			COLOR_GRAY1	= $04
   460 = 0006			COLOR_GRAY2	= $06
   461 = 000A			COLOR_GRAY3	= $0A
   462 = 00CC			COLOR_LIGHTGREEN	= $CC
   463 = 007C			COLOR_LIGHTBLUE	= $7C
   464 = 0004			FMOPENREAD	= $04
   465 = 0008			FMOPENWRITE	= $08
   466 = 0009			FMOPENAPPEND	= $09
   467 = 000C			FMOPENREADWRITE	= $0C
   468 = 5014			SCREENWIDTH	= DATAORIGIN+$0000
   469 = 5016			SCREENHEIGHT	= DATAORIGIN+$0002
   470 = 5018			DATESEPARATOR	= DATAORIGIN+$0004
   471 = D20A			RND	= $D20A
   472 = 02C0			adr.PALETTE	= $02C0
   473 278A			.var PALETTE	= adr.PALETTE .word
   474 = D012			adr.HPALETTE	= $D012
   475 278A			.var HPALETTE	= adr.HPALETTE .word
   476 = 5019			FILEMODE	= DATAORIGIN+$0005
   477 = 501A			GRAPHMODE	= DATAORIGIN+$0006
   478 = 501B			IORESULT	= DATAORIGIN+$0007
   479 = 501C			EOLN	= DATAORIGIN+$0008
   480 = 501D			RNDSEED	= DATAORIGIN+$0009
   481
   482 = 278A C0 02		PALETTE
   482 = 278C 12 D0		HPALETTE
   482 				.endl							; UNIT SYSTEM
   483
   484 				; ------------------------------------------------------------
   485
   486 278E			.local	ATARI						; UNIT
   487
   488 				; ------------------------------------------------------------
   489
   490 = 0010			IRQENS	= $10
   491 = 0012			RTCLOK	= $12
   492 = 0012			RTCLOK1	= $12
   493 = 0013			RTCLOK2	= $13
   494 = 0014			RTCLOK3	= $14
   495 = 004D			ATRACT	= $4D
   496 = 0052			LMARGIN	= $52
   497 = 0053			RMARGIN	= $53
   498 = 0054			ROWCRS	= $54
   499 = 0055			COLCRS	= $55
   500 = 0057			DINDEX	= $57
   501 = 0058			SAVMSC	= $58
   502 = 0062			PALNTS	= $62
   503 = 006A			RAMTOP	= $6A
   504 = 0200			VDSLST	= $0200
   505 = 0230			SDLSTL	= $0230
   506 = 0290			TXTROW	= $0290
   507 = 0291			TXTCOL	= $0291
   508 = 0293			TINDEX	= $0293
   509 = 0294			TXTMSC	= $0294
   510 = 022F			SDMCTL	= $022F
   511 = 026F			GPRIOR	= $026F
   512 = 02F0			CRSINH	= $02F0
   513 = 02F3			CHACT	= $02F3
   514 = 02F4			CHBAS	= $02F4
   515 = 02FC			CH	= $02FC
   516 = 02C0			PCOLR0	= $02C0
   517 = 02C1			PCOLR1	= $02C1
   518 = 02C2			PCOLR2	= $02C2
   519 = 02C3			PCOLR3	= $02C3
   520 = 02C4			COLOR0	= $02C4
   521 = 02C5			COLOR1	= $02C5
   522 = 02C6			COLOR2	= $02C6
   523 = 02C7			COLOR3	= $02C7
   524 = 02C8			COLOR4	= $02C8
   525 = 02C8			COLBAKS	= $02C8
   526 = D000			HPOSP0	= $D000
   527 = D001			HPOSP1	= $D001
   528 = D002			HPOSP2	= $D002
   529 = D003			HPOSP3	= $D003
   530 = D004			HPOSM0	= $D004
   531 = D005			HPOSM1	= $D005
   532 = D006			HPOSM2	= $D006
   533 = D007			HPOSM3	= $D007
   534 = D008			SIZEP0	= $D008
   535 = D009			SIZEP1	= $D009
   536 = D00A			SIZEP2	= $D00A
   537 = D00B			SIZEP3	= $D00B
   538 = D00C			SIZEM	= $D00C
   539 = D00D			GRAFP0	= $D00D
   540 = D00E			GRAFP1	= $D00E
   541 = D00F			GRAFP2	= $D00F
   542 = D010			GRAFP3	= $D010
   543 = D011			GRAFM	= $D011
   544 = D004			P0PF	= $D004
   545 = D014			PAL	= $D014
   546 = D013			TRIG3	= $D013
   547 = D012			COLPM0	= $D012
   548 = D013			COLPM1	= $D013
   549 = D014			COLPM2	= $D014
   550 = D015			COLPM3	= $D015
   551 = D016			COLPF0	= $D016
   552 = D017			COLPF1	= $D017
   553 = D018			COLPF2	= $D018
   554 = D019			COLPF3	= $D019
   555 = D01A			COLBK	= $D01A
   556 = D01B			PRIOR	= $D01B
   557 = D01D			GRACTL	= $D01D
   558 = D01E			HITCLR	= $D01E
   559 = D01F			CONSOL	= $D01F
   560 = D200			AUDF1	= $D200
   561 = D201			AUDC1	= $D201
   562 = D202			AUDF2	= $D202
   563 = D203			AUDC2	= $D203
   564 = D204			AUDF3	= $D204
   565 = D205			AUDC3	= $D205
   566 = D206			AUDF4	= $D206
   567 = D207			AUDC4	= $D207
   568 = D208			AUDCTL	= $D208
   569 = D209			KBCODE	= $D209
   570 = D20E			IRQEN	= $D20E
   571 = D20F			SKSTAT	= $D20F
   572 = D300			PORTA	= $D300
   573 = D301			PORTB	= $D301
   574 = D302			PACTL	= $D302
   575 = D400			DMACTL	= $D400
   576 = D401			CHACTL	= $D401
   577 = D402			DLISTL	= $D402
   578 = D404			HSCROL	= $D404
   579 = D405			VSCROL	= $D405
   580 = D407			PMBASE	= $D407
   581 = D409			CHBASE	= $D409
   582 = D40A			WSYNC	= $D40A
   583 = D40B			VCOUNT	= $D40B
   584 = D40C			PENH	= $D40C
   585 = D40D			PENV	= $D40D
   586 = D40E			NMIEN	= $D40E
   587 = FFFA			NMIVEC	= $FFFA
   588 = FFFC			RESETVEC	= $FFFC
   589 = FFFE			IRQVEC	= $FFFE
   590
   591 				.endl							; UNIT ATARI
   592
   593 				; ------------------------------------------------------------
   594
   595 278E			.local	CRT						; UNIT
   596
   597 278E			.local	CLRSCR						; PROCEDURE
   598
   599 				; optimize FAIL ('@print', crt_atari.inc), line = 34
   600
   601 					@print #$7D
   601 				 LDY# $7D\ JSR @PRINT
   601 278E A0 7D		 LDY# $7D
   601 2790 20 D7 26		 JSR @PRINT
   602 2793			@exit
   603 					.ifdef @new
   604 					lda <@VarData
   605 					sta :ztmp
   606 					lda >@VarData
   607 					ldy #@VarDataSize-1
   608 					jmp @FreeMem
   609 					els
   610 2793 60				rts						; ret
   611 					eif
   612 				.endl
   613
   614 2794			.local	DELAY						; PROCEDURE | ASSEMBLER
   615
   616 				; -------------------  ASM Block 00000054  -------------------
   617
   618 2794 8A 48			txa:pha
   619
   620 2796 A2 00			ldx #0
   621 2798 A0 00			ldy #0
   622
   623 279A CC 23 50		loop	cpy count
   624 279D D0 05			bne @+
   625 279F EC 24 50			cpx count+1
   626 27A2 F0 46			beq stop
   627
   628 27A4 AD 0B D4 CD 0B D4 + @	:8 lda:cmp:req vcount
   629
   630 27E4 C8				iny
   631 27E5 D0 01			sne
   632 27E7 E8				inx
   633
   634 27E8 D0 B0			bne loop
   635
   636 27EA 68 AA		stop	pla:tax
   637
   638 				; ------------------------------------------------------------
   639
   640 = 5023			COUNT	= DATAORIGIN+$000F
   641
   642 = 5023			@VarData	= COUNT
   643 = 0002			@VarDataSize	= 2
   644
   645 27EC			@exit
   646 					.ifdef @new
   647 					lda <@VarData
   648 					sta :ztmp
   649 					lda >@VarData
   650 					ldy #@VarDataSize-1
   651 					jmp @FreeMem
   652 					els
   653 27EC 60				rts						; ret
   654 					eif
   655 				.endl
   656
   657 				; ------------------------------------------------------------
   658
   659 = 5022			TEXTATTR	= DATAORIGIN+$000E
   660 = D01F			CONSOL	= $D01F
   661 = 0000			CN_START_SELECT_OPTION	= $00
   662 = 0001			CN_SELECT_OPTION	= $01
   663 = 0002			CN_START_OPTION	= $02
   664 = 0003			CN_OPTION	= $03
   665 = 0004			CN_START_SELECT	= $04
   666 = 0005			CN_SELECT	= $05
   667 = 0006			CN_START	= $06
   668 = 0007			CN_NONE	= $07
   669 = 0000			BW40	= $00
   670 = 0001			CO40	= $01
   671 = 0002			BW80	= $02
   672 = 0003			CO80	= $03
   673 = 0007			MONO	= $07
   674 = 0001			C40	= $01
   675 = 0003			C80	= $03
   676 = 0000			BLACK	= $00
   677 = 000F			WHITE	= $0F
   678 = 0026			RED	= $26
   679 = 00AC			CYAN	= $AC
   680 = 0048			PURPLE	= $48
   681 = 00B6			GREEN	= $B6
   682 = 0086			BLUE	= $86
   683 = 00DC			YELLOW	= $DC
   684 = 0018			ORANGE	= $18
   685 = 00F4			BROWN	= $F4
   686 = 002A			LIGHT_RED	= $2A
   687 = 0004			DARK_GREY	= $04
   688 = 0008			GREY	= $08
   689 = 00BC			LIGHT_GREEN	= $BC
   690 = 009A			LIGHT_BLUE	= $9A
   691 = 000C			LIGHT_GREY	= $0C
   692 = 0080			BLINK	= $80
   693
   694 				.endl							; UNIT CRT
   695
   696 				; ------------------------------------------------------------
   697
   698 27ED			.local	A8DEFINES					; UNIT
   699
   700 				; ------------------------------------------------------------
   701
   702 = 2000			adr.LIB_VERSION	= CODEORIGIN+$0000
   703 27ED			.var LIB_VERSION	= adr.LIB_VERSION .word
   704 = 000A			WRECSZ	= $0A
   705 = 0814			WBUFSZ	= $0814
   706 = 0001			WON	= $01
   707 = 0000			WOFF	= $00
   708 = 0080			WPABS	= $80
   709 = 00F1			WPTOP	= $F1
   710 = 00F2			WPBOT	= $F2
   711 = 00FB			WPLFT	= $FB
   712 = 00FC			WPRGT	= $FC
   713 = 00FF			WPCNT	= $FF
   714 = 0064			WENONE	= $64
   715 = 0065			WENOPN	= $65
   716 = 0066			WEUSED	= $66
   717 = 0000			GDISP	= $00
   718 = 0001			GEDIT	= $01
   719 = 0001			GHORZ	= $01
   720 = 0002			GVERT	= $02
   721 = 0001			GCON	= $01
   722 = 0002			GCOFF	= $02
   723 = 0000			GANY	= $00
   724 = 0001			GALNUM	= $01
   725 = 0002			GALPHA	= $02
   726 = 0003			GNUMER	= $03
   727 = 00FD			XESC	= $FD
   728 = 00FE			XTAB	= $FE
   729 = 00FF			XNONE	= $FF
   730 = 022F			DMACTL	= $022F
   731 = 0244			COLDST	= $0244
   732 = 026F			GPRIOR	= $026F
   733 = 02B6			INVFLG	= $02B6
   734 = 02BE			SHFLOK	= $02BE
   735 = 02DC			HELPFG	= $02DC
   736 = 02FC			KEYPCH	= $02FC
   737 = D01D			GRACTL	= $D01D
   738 = D01F			CONSOL	= $D01F
   739 = D407			PMBASE	= $D407
   740 = D000			HPOSP0	= $D000
   741 = D001			HPOSP1	= $D001
   742 = D002			HPOSP2	= $D002
   743 = 0052			ALMARG	= $52
   744 = 0058			RSCRN	= $58
   745 = 02C0			PCOLR0	= $02C0
   746 = 02C1			PCOLR1	= $02C1
   747 = 02C2			PCOLR2	= $02C2
   748 = 02C3			PCOLR3	= $02C3
   749 = 02C5			AFOREG	= $02C5
   750 = 02C6			ABACKG	= $02C6
   751 = 02C8			ABORDR	= $02C8
   752 = 02F0			ACURIN	= $02F0
   753 = 0000			CBLACK	= $00
   754 = 000E			CWHITE	= $0E
   755 = 00D2			CGREEN	= $D2
   756 = 0092			CBLUE	= $92
   757 = 0032			CRED	= $32
   758 = 00DE			CYELLOW	= $DE
   759 = 00C7			KNOMAP	= $C7
   760 = 00FF			KNONE	= $FF
   761 = 000C			KENTER	= $0C
   762 = 0034			KDEL	= $34
   763 = 0074			KDEL_S	= $74
   764 = 00B4			KDEL_C	= $B4
   765 = 00B7			KINS	= $B7
   766 = 0006			KPLUS	= $06
   767 = 0007			KASTER	= $07
   768 = 000E			KMINUS	= $0E
   769 = 000F			KEQUAL	= $0F
   770 = 001C			KESC	= $1C
   771 = 0021			KSPACE	= $21
   772 = 0027			KINV	= $27
   773 = 002C			KTAB	= $2C
   774 = 006C			KTAB_S	= $6C
   775 = 003C			KCAP	= $3C
   776 = 0086			KLEFT	= $86
   777 = 0087			KRIGHT	= $87
   778 = 008E			KUP	= $8E
   779 = 008F			KDOWN	= $8F
   780 = 0015			KEYB	= $15
   781 = 0012			KEYC	= $12
   782 = 003A			KEYD	= $3A
   783 = 0039			KEYH	= $39
   784 = 0023			KEYN	= $23
   785 = 000A			KEYP	= $0A
   786 = 0028			KEYR	= $28
   787 = 003E			KEYS	= $3E
   788 = 002D			KEYT	= $2D
   789 = 0095			KB_C	= $95
   790 = 00AA			KE_C	= $AA
   791 = 0016			KX	= $16
   792 = 0056			KX_S	= $56
   793 = 00EA			KE_CS	= $EA
   794 = 00FE			KS_CS	= $FE
   795 = 0007			KCNON	= $07
   796 = 0106			KCSTA	= $0106
   797 = 0105			KCSEL	= $0105
   798 = 0103			KCOPT	= $0103
   799 = 0011			KFHLP	= $11
   800 = 0003			KF1	= $03
   801 = 0004			KF2	= $04
   802 = 0013			KF3	= $13
   803 = 0014			KF4	= $14
   804 = 0003			CHBTRGT	= $03
   805 = 0005			CHTPRGT	= $05
   806 = 0011			CHTPLFT	= $11
   807 = 001A			CHBTLFT	= $1A
   808 = 0014			CHBALL	= $14
   809 = 001B			CHESC	= $1B
   810 = 001C			CHUP	= $1C
   811 = 001D			CHDN	= $1D
   812 = 001E			CHLFT	= $1E
   813 = 001F			CHRGT	= $1F
   814 = 0020			CHSPACE	= $20
   815 = 0060			CHDMND	= $60
   816 = 007D			CHCLS	= $7D
   817 = 007E			CHBACK	= $7E
   818 = 007F			CHTAB	= $7F
   819 = 009B			CHENT	= $9B
   820 = 009C			CHDELLN	= $9C
   821 = 00A0			CHINVSP	= $A0
   822 = 00FD			CHBUZ	= $FD
   823 = 009F			CHRGT_I	= $9F
   824 = 006F			CHO_L	= $6F
   825 = 00C9			CHI_I	= $C9
   826
   827 = 27ED 00 20		LIB_VERSION
   827 				.endl							; UNIT A8DEFINES
   828
   829 				; ------------------------------------------------------------
   830
   831 27EF			.local	A8DEFWIN					; UNIT
   832
   833 				; ------------------------------------------------------------
   834
   835 				.endl							; UNIT A8DEFWIN
   836
   837 				; ------------------------------------------------------------
   838
   839 27EF			.local	A8LIBMISC					; UNIT
   840
   841 27EF			.local	IKC2ATA						; FUNCTION
   842 27EF 8D 25 50			sta BN
   843
   844 				; optimize OK (A8LIBMISC), line = 66
   845
   846 27F2 C9 C0			cmp #$C0
   847 27F4 B0 0C			jcs l_04E5
   848
   849 				; optimize OK (A8LIBMISC), line = 68
   850
   851 27F6 AC 25 50			ldy BN
   852 27F9 B9 34 24			lda adr.CL,y
   853 27FC 8D 26 50			sta RESULT
   854 27FF 4C 08 28			jmp l_04F8
   855 2802			l_04E5
   856
   857 				; optimize OK (A8LIBMISC), line = 72
   858
   859 2802 AD 25 50			lda BN
   860 2805 8D 26 50			sta RESULT
   861 2808			l_04F8
   862 2808			@exit
   863
   864 				; ------------------------------------------------------------
   865
   866 = 5025			BN	= DATAORIGIN+$0011
   867 = 5026			RESULT	= DATAORIGIN+$0012
   868 = 2434			adr.CL	= CODEORIGIN+$0434
   869 2808			.var CL	= adr.CL .word
   870
   871 = 5025			@VarData	= BN
   872 = 0001			@VarDataSize	= 1
   873
   874 2808 60				rts						; ret
   875 = 2809 34 24		CL
   875 				.endl
   876
   877 280B			.local	WAITKCX						; FUNCTION
   878 280B 8D 27 50			sta BI
   879
   880 				; optimize OK (A8LIBMISC), line = 88
   881
   882 280E A9 00			lda #$00
   883 2810 8D 28 50			sta RESULT
   884 2813 8D 29 50			sta RESULT+1
   885
   886 				; --- WhileProlog
   887 2816			l_0509
   888
   889 				; optimize OK (A8LIBMISC), line = 91
   890
   891 2816 AD FD 02			lda $02FC+1
   892 2819 D0 05			bne @+
   893 281B AD FC 02			lda $02FC
   894 281E C9 FF			cmp #$FF
   895 				@
   896 2820 D0 0C			jne l_0509w
   897 2822 AD 1F D0			lda $D01F
   898 2825 C9 07			cmp #$07
   899 2827 D0 05			jne l_0509w
   900 2829 AD DC 02			lda $02DC
   901 282C F0 E8			jeq l_0509
   902 282E			l_0509w
   903
   904 				; optimize OK (A8LIBMISC), line = 94
   905
   906 282E AD FC 02			lda $02FC
   907 2831 8D 2A 50			sta BK
   908
   909 				; optimize OK (A8LIBMISC), line = 95
   910
   911 2834 AD 1F D0			lda $D01F
   912 2837 8D 2B 50			sta BC
   913
   914 				; optimize OK (A8LIBMISC), line = 96
   915
   916 283A AD DC 02			lda $02DC
   917 283D 8D 2C 50			sta BH
   918
   919 				; optimize OK (A8LIBMISC), line = 99
   920
   921 2840 AD 2B 50			lda BC
   922 2843 C9 07			cmp #$07
   923 2845 F0 0B			jeq l_054B
   924
   925 				; optimize OK (A8LIBMISC), line = 101
   926
   927 2847 8D 28 50			sta RESULT
   928 284A A9 01			lda #$01
   929 284C 8D 29 50			sta RESULT+1
   930 284F 4C B9 28			jmp l_055F
   931 2852			l_054B
   932
   933 				; optimize OK (A8LIBMISC), line = 104
   934
   935 2852 AD 2C 50			lda BH
   936 2855 F0 10			jeq l_0571
   937
   938 				; optimize OK (A8LIBMISC), line = 106
   939
   940 2857 A9 11			lda #$11
   941 2859 8D 28 50			sta RESULT
   942 285C A9 00			lda #$00
   943 285E 8D 29 50			sta RESULT+1
   944
   945 				; optimize OK (A8LIBMISC), line = 107
   946
   947 2861 8D DC 02			sta $02DC
   948 2864 4C B9 28			jmp l_0582
   949 2867			l_0571
   950
   951 				; optimize OK (A8LIBMISC), line = 110
   952
   953 2867 AD 2A 50			lda BK
   954 286A C9 3C			cmp #$3C
   955 286C D0 19			jne l_0594
   956
   957 				; optimize OK (A8LIBMISC), line = 112
   958
   959 286E 8D 28 50			sta RESULT
   960 2871 A9 00			lda #$00
   961 2873 8D 29 50			sta RESULT+1
   962
   963 				; optimize OK (A8LIBMISC), line = 115
   964
   965 2876 AD BE 02			lda $02BE
   966 2879 8D 2D 50			sta BU
   967
   968 				; optimize OK (A8LIBMISC), line = 116
   969
   970 287C 49 40			eor #$40
   971 287E 8D 2D 50			sta BU
   972
   973 				; optimize OK (A8LIBMISC), line = 117
   974
   975 2881 8D BE 02			sta $02BE
   976 2884 4C B9 28			jmp l_05B8
   977 2887			l_0594
   978
   979 				; optimize OK (A8LIBMISC), line = 120
   980
   981 2887 AD 2A 50			lda BK
   982 288A C9 27			cmp #$27
   983 288C D0 20			jne l_05CA
   984
   985 				; optimize OK (A8LIBMISC), line = 122
   986
   987 288E 8D 28 50			sta RESULT
   988 2891 A9 00			lda #$00
   989 2893 8D 29 50			sta RESULT+1
   990
   991 				; optimize OK (A8LIBMISC), line = 125
   992
   993 2896 AD 27 50			lda BI
   994 2899 C9 01			cmp #$01
   995 289B D0 0E			jne l_05E3
   996
   997 				; optimize OK (A8LIBMISC), line = 128
   998
   999 289D AD B6 02			lda $02B6
  1000 28A0 8D 2D 50			sta BU
  1001
  1002 				; optimize OK (A8LIBMISC), line = 129
  1003
  1004 28A3 49 80			eor #$80
  1005 28A5 8D 2D 50			sta BU
  1006
  1007 				; optimize OK (A8LIBMISC), line = 130
  1008
  1009 28A8 8D B6 02			sta $02B6
  1010 28AB			l_05E3
  1011 28AB 4C B9 28			jmp l_0603
  1012 28AE			l_05CA
  1013
  1014 				; optimize OK (A8LIBMISC), line = 135
  1015
  1016 28AE AD 2A 50			lda BK
  1017 28B1 8D 28 50			sta RESULT
  1018 28B4 A9 00			lda #$00
  1019 28B6 8D 29 50			sta RESULT+1
  1020 28B9			l_0603
  1021 28B9			l_05B8
  1022 28B9			l_0582
  1023 28B9			l_055F
  1024
  1025 				; optimize OK (A8LIBMISC), line = 139
  1026
  1027 28B9 A9 FF			lda #$FF
  1028 28BB 8D FC 02			sta $02FC
  1029 28BE			@exit
  1030
  1031 				; ------------------------------------------------------------
  1032
  1033 = 5027			BI	= DATAORIGIN+$0013
  1034 = 5028			RESULT	= DATAORIGIN+$0014
  1035 = 502A			BK	= DATAORIGIN+$0016
  1036 = 502B			BC	= DATAORIGIN+$0017
  1037 = 502C			BH	= DATAORIGIN+$0018
  1038 = 502D			BU	= DATAORIGIN+$0019
  1039
  1040 = 5027			@VarData	= BI
  1041 = 0005			@VarDataSize	= 5
  1042
  1043 28BE 60				rts						; ret
  1044 				.endl
  1045
  1046 				; ------------------------------------------------------------
  1047
  1048 				.endl							; UNIT A8LIBMISC
  1049
  1050 				; ------------------------------------------------------------
  1051
  1052 28BF			.local	A8LIBSTR					; UNIT
  1053
  1054 28BF			.local	STRINV						; PROCEDURE
  1055
  1056 				; optimize OK (A8LIBSTR), line = 45
  1057
  1058 28BF A9 00			lda #$00
  1059 28C1 8D 31 50			sta BL
  1060 28C4 AC 30 50			ldy BS
  1061 28C7 88				dey
  1062 28C8 8C CC 28			sty @FORTMP_061C_0
  1063
  1064 28CB			l_061F
  1065 				; --- ForToDoCondition
  1066 28CB A9 00			lda @FORTMP_061C_0:#$00
  1067 28CD CD 31 50			cmp BL
  1068 28D0 90 1F			jcc l_062D
  1069
  1070 				; optimize OK (A8LIBSTR), line = 48
  1071
  1072 28D2 AC 2E 50 84 82 AC + 	mwy PS :bp2
  1073 28DC A0 00			ldy #$00
  1074 28DE B1 82			lda (:bp2),y
  1075 28E0 49 80			eor #$80
  1076 28E2 91 82			sta (:bp2),y
  1077
  1078 				; optimize FAIL (0, A8LIBSTR), line = 49
  1079
  1080 28E4 EE 2E 50			inc PS
  1081 28E7 D0 03			sne
  1082 28E9 EE 2F 50			inc PS+1
  1083
  1084 				; --- ForToDoEpilog
  1085 28EC EE 31 50			inc BL
  1086 28EF D0 DA			jne l_061F
  1087 28F1			l_062D
  1088
  1089 				; ------------------------------------------------------------
  1090
  1091 = 502E			PS	= DATAORIGIN+$001A
  1092 = 5030			BS	= DATAORIGIN+$001C
  1093 = 5031			BL	= DATAORIGIN+$001D
  1094
  1095 = 502E			@VarData	= PS
  1096 = 0004			@VarDataSize	= 4
  1097
  1098 28F1			@exit
  1099 					.ifdef @new
  1100 					lda <@VarData
  1101 					sta :ztmp
  1102 					lda >@VarData
  1103 					ldy #@VarDataSize-1
  1104 					jmp @FreeMem
  1105 					els
  1106 28F1 60				rts						; ret
  1107 					eif
  1108 				.endl
  1109
  1110 28F2			.local	STRAI						; PROCEDURE
  1111
  1112 				; optimize OK (A8LIBSTR), line = 67
  1113
  1114 28F2 A9 00			lda #$00
  1115 28F4 8D 36 50			sta BL
  1116 28F7 AC 35 50			ldy BS
  1117 28FA 88				dey
  1118 28FB 8C FF 28			sty @FORTMP_0650_0
  1119
  1120 28FE			l_0653
  1121 				; --- ForToDoCondition
  1122 28FE A9 00			lda @FORTMP_0650_0:#$00
  1123 2900 CD 36 50			cmp BL
  1124 2903 B0 03 4C D5 29		jcc l_0661
  1125
  1126 				; optimize OK (A8LIBSTR), line = 69
  1127
  1128 2908 AC 34 50 84 81		mvy PS+1 :bp+1
  1129 290D AC 33 50			ldy PS
  1130 2910 AC 34 50 84 81		mvy PS+1 :bp+1
  1131 2915 AC 33 50			ldy PS
  1132 2918 B1 80			lda (:bp),y
  1133 291A C9 20			cmp #$20
  1134 291C B0 16			jcs l_067F
  1135
  1136 				; optimize OK (A8LIBSTR), line = 71
  1137
  1138 291E AC 33 50 84 82 AC + 	mwy PS :bp2
  1139 2928 A0 00			ldy #$00
  1140 292A B1 82			lda (:bp2),y
  1141 292C 18 69 40			add #$40
  1142 292F 91 82			sta (:bp2),y
  1143 2931 4C C5 29			jmp l_0693
  1144 2934			l_067F
  1145
  1146 				; optimize OK (A8LIBSTR), line = 73
  1147
  1148 2934 AC 34 50 84 81		mvy PS+1 :bp+1
  1149 2939 AC 33 50			ldy PS
  1150 293C B1 80			lda (:bp),y
  1151 293E C9 20			cmp #$20
  1152 2940 90 24			jcc l_06B1
  1153 2942 AC 34 50 84 81		mvy PS+1 :bp+1
  1154 2947 AC 33 50			ldy PS
  1155 294A B1 80			lda (:bp),y
  1156 294C C9 60			cmp #$60
  1157 294E B0 16			jcs l_06B1
  1158
  1159 				; optimize OK (A8LIBSTR), line = 75
  1160
  1161 2950 AC 33 50 84 82 AC + 	mwy PS :bp2
  1162 295A A0 00			ldy #$00
  1163 295C B1 82			lda (:bp2),y
  1164 295E 38 E9 20			sub #$20
  1165 2961 91 82			sta (:bp2),y
  1166 2963 4C C5 29			jmp l_06C5
  1167 2966			l_06B1
  1168
  1169 				; optimize OK (A8LIBSTR), line = 77
  1170
  1171 2966 AC 34 50 84 81		mvy PS+1 :bp+1
  1172 296B AC 33 50			ldy PS
  1173 296E B1 80			lda (:bp),y
  1174 2970 10 24			jpl l_06E3
  1175 2972 AC 34 50 84 81		mvy PS+1 :bp+1
  1176 2977 AC 33 50			ldy PS
  1177 297A B1 80			lda (:bp),y
  1178 297C C9 A0			cmp #$A0
  1179 297E B0 16			jcs l_06E3
  1180
  1181 				; optimize OK (A8LIBSTR), line = 79
  1182
  1183 2980 AC 33 50 84 82 AC + 	mwy PS :bp2
  1184 298A A0 00			ldy #$00
  1185 298C B1 82			lda (:bp2),y
  1186 298E 18 69 40			add #$40
  1187 2991 91 82			sta (:bp2),y
  1188 2993 4C C5 29			jmp l_06F7
  1189 2996			l_06E3
  1190
  1191 				; optimize OK (A8LIBSTR), line = 81
  1192
  1193 2996 AC 34 50 84 81		mvy PS+1 :bp+1
  1194 299B AC 33 50			ldy PS
  1195 299E B1 80			lda (:bp),y
  1196 29A0 C9 A0			cmp #$A0
  1197 29A2 90 21			jcc l_0715
  1198 29A4 AC 34 50 84 81		mvy PS+1 :bp+1
  1199 29A9 AC 33 50			ldy PS
  1200 29AC B1 80			lda (:bp),y
  1201 29AE C9 E0			cmp #$E0
  1202 29B0 B0 13			jcs l_0715
  1203
  1204 				; optimize OK (A8LIBSTR), line = 83
  1205
  1206 29B2 AC 33 50 84 82 AC + 	mwy PS :bp2
  1207 29BC A0 00			ldy #$00
  1208 29BE B1 82			lda (:bp2),y
  1209 29C0 38 E9 20			sub #$20
  1210 29C3 91 82			sta (:bp2),y
  1211 29C5			l_0715
  1212 29C5			l_06F7
  1213 29C5			l_06C5
  1214 29C5			l_0693
  1215
  1216 				; optimize FAIL (0, A8LIBSTR), line = 87
  1217
  1218 29C5 EE 33 50			inc PS
  1219 29C8 D0 03			sne
  1220 29CA EE 34 50			inc PS+1
  1221
  1222 				; --- ForToDoEpilog
  1223 29CD EE 36 50			inc BL
  1224 29D0 F0 03 4C FE 28		jne l_0653
  1225 29D5			l_0661
  1226
  1227 				; ------------------------------------------------------------
  1228
  1229 = 5033			PS	= DATAORIGIN+$001F
  1230 = 5035			BS	= DATAORIGIN+$0021
  1231 = 5036			BL	= DATAORIGIN+$0022
  1232
  1233 = 5033			@VarData	= PS
  1234 = 0004			@VarDataSize	= 4
  1235
  1236 29D5			@exit
  1237 					.ifdef @new
  1238 					lda <@VarData
  1239 					sta :ztmp
  1240 					lda >@VarData
  1241 					ldy #@VarDataSize-1
  1242 					jmp @FreeMem
  1243 					els
  1244 29D5 60				rts						; ret
  1245 					eif
  1246 				.endl
  1247
  1248 29D6			.local	CHARAI						; FUNCTION
  1249 29D6 8D 38 50			sta BC
  1250
  1251 				; optimize OK (A8LIBSTR), line = 99
  1252
  1253 29D9 A9 1F			lda #$1F
  1254 29DB CD 38 50			cmp BC
  1255 29DE 90 0C			jcc l_074D
  1256
  1257 				; optimize OK (A8LIBSTR), line = 101
  1258
  1259 29E0 AD 38 50			lda BC
  1260 29E3 18 69 40			add #$40
  1261 29E6 8D 39 50			sta RESULT
  1262 29E9 4C 3E 2A			jmp l_0761
  1263 29EC			l_074D
  1264
  1265 				; optimize OK (A8LIBSTR), line = 103
  1266
  1267 29EC AD 38 50			lda BC
  1268 29EF C9 20			cmp #$20
  1269 29F1 90 13			jcc l_077F
  1270 29F3 A9 5F			lda #$5F
  1271 29F5 CD 38 50			cmp BC
  1272 29F8 90 0C			jcc l_077F
  1273
  1274 				; optimize OK (A8LIBSTR), line = 105
  1275
  1276 29FA AD 38 50			lda BC
  1277 29FD 38 E9 20			sub #$20
  1278 2A00 8D 39 50			sta RESULT
  1279 2A03 4C 3E 2A			jmp l_0793
  1280 2A06			l_077F
  1281
  1282 				; optimize OK (A8LIBSTR), line = 107
  1283
  1284 2A06 AD 38 50			lda BC
  1285 2A09 10 13			jpl l_07B1
  1286 2A0B A9 9F			lda #$9F
  1287 2A0D CD 38 50			cmp BC
  1288 2A10 90 0C			jcc l_07B1
  1289
  1290 				; optimize OK (A8LIBSTR), line = 109
  1291
  1292 2A12 AD 38 50			lda BC
  1293 2A15 18 69 40			add #$40
  1294 2A18 8D 39 50			sta RESULT
  1295 2A1B 4C 3E 2A			jmp l_07C5
  1296 2A1E			l_07B1
  1297
  1298 				; optimize OK (A8LIBSTR), line = 111
  1299
  1300 2A1E AD 38 50			lda BC
  1301 2A21 C9 A0			cmp #$A0
  1302 2A23 90 13			jcc l_07E3
  1303 2A25 A9 DF			lda #$DF
  1304 2A27 CD 38 50			cmp BC
  1305 2A2A 90 0C			jcc l_07E3
  1306
  1307 				; optimize OK (A8LIBSTR), line = 113
  1308
  1309 2A2C AD 38 50			lda BC
  1310 2A2F 38 E9 20			sub #$20
  1311 2A32 8D 39 50			sta RESULT
  1312 2A35 4C 3E 2A			jmp l_07F7
  1313 2A38			l_07E3
  1314
  1315 				; optimize OK (A8LIBSTR), line = 116
  1316
  1317 2A38 AD 38 50			lda BC
  1318 2A3B 8D 39 50			sta RESULT
  1319 2A3E			l_07F7
  1320 2A3E			l_07C5
  1321 2A3E			l_0793
  1322 2A3E			l_0761
  1323 2A3E			@exit
  1324
  1325 				; ------------------------------------------------------------
  1326
  1327 = 5038			BC	= DATAORIGIN+$0024
  1328 = 5039			RESULT	= DATAORIGIN+$0025
  1329
  1330 = 5038			@VarData	= BC
  1331 = 0001			@VarDataSize	= 1
  1332
  1333 2A3E 60				rts						; ret
  1334 				.endl
  1335
  1336 2A3F			.local	BYTETOSTR3					; FUNCTION
  1337 2A3F 8D 3A 50			sta BN
  1338
  1339 2A42 A0 FC			ldy #256-4
  1340 2A44 B9 0B 1F 99 3F 4F + 	mva:rne CODEORIGIN+$0007+4-256,y adr.RESULT+4-256,y+
  1341
  1342 				; optimize OK (A8LIBSTR), line = 129
  1343
  1344 2A4D AD 3A 50			lda BN
  1345 2A50 85 84			sta :al
  1346 2A52 A9 0A			lda #$0A
  1347 2A54 85 8C			sta :cl
  1348 2A56 20 3D 26			jsr idivAL_CL.MOD
  1349 2A59 A9 30			lda #$30
  1350 2A5B 18 65 90			add :ztmp8
  1351 2A5E 8D 3E 50			sta adr.RESULT+$03
  1352
  1353 				; optimize OK (A8LIBSTR), line = 130
  1354
  1355 2A61 AD 3A 50			lda BN
  1356 2A64 C9 0A			cmp #$0A
  1357 2A66 90 51			jcc l_0827
  1358
  1359 				; optimize OK (A8LIBSTR), line = 132
  1360
  1361 2A68 4A				lsr @
  1362 2A69 85 84			sta :eax
  1363 2A6B 4A				lsr @
  1364 2A6C 65 84			adc :eax
  1365 2A6E 6A				ror @
  1366 2A6F 4A				lsr @
  1367 2A70 4A				lsr @
  1368 2A71 65 84			adc :eax
  1369 2A73 6A				ror @
  1370 2A74 65 84			adc :eax
  1371 2A76 6A				ror @
  1372 2A77 4A				lsr @
  1373 2A78 4A				lsr @
  1374 2A79 8D 3A 50			sta BN
  1375
  1376 				; optimize OK (A8LIBSTR), line = 133
  1377
  1378 2A7C 85 84			sta :al
  1379 2A7E A9 0A			lda #$0A
  1380 2A80 85 8C			sta :cl
  1381 2A82 20 3D 26			jsr idivAL_CL.MOD
  1382 2A85 A9 30			lda #$30
  1383 2A87 18 65 90			add :ztmp8
  1384 2A8A 8D 3D 50			sta adr.RESULT+$02
  1385
  1386 				; optimize OK (A8LIBSTR), line = 134
  1387
  1388 2A8D AD 3A 50			lda BN
  1389 2A90 C9 0A			cmp #$0A
  1390 2A92 90 25			jcc l_085A
  1391
  1392 				; optimize OK (A8LIBSTR), line = 136
  1393
  1394 2A94 4A				lsr @
  1395 2A95 85 84			sta :eax
  1396 2A97 4A				lsr @
  1397 2A98 65 84			adc :eax
  1398 2A9A 6A				ror @
  1399 2A9B 4A				lsr @
  1400 2A9C 4A				lsr @
  1401 2A9D 65 84			adc :eax
  1402 2A9F 6A				ror @
  1403 2AA0 65 84			adc :eax
  1404 2AA2 6A				ror @
  1405 2AA3 4A				lsr @
  1406 2AA4 4A				lsr @
  1407 2AA5 8D 3A 50			sta BN
  1408
  1409 				; optimize OK (A8LIBSTR), line = 137
  1410
  1411 2AA8 85 84			sta :al
  1412 2AAA A9 0A			lda #$0A
  1413 2AAC 85 8C			sta :cl
  1414 2AAE 20 3D 26			jsr idivAL_CL.MOD
  1415 2AB1 A9 30			lda #$30
  1416 2AB3 18 65 90			add :ztmp8
  1417 2AB6 8D 3C 50			sta adr.RESULT+$01
  1418 2AB9			l_085A
  1419 2AB9			l_0827
  1420 2AB9			@exit
  1421
  1422 				; ------------------------------------------------------------
  1423
  1424 = 503A			BN	= DATAORIGIN+$0026
  1425 = 503B			adr.RESULT	= [DATAORIGIN+$0027] .array [256]
  1426 2AB9			.var RESULT	= adr.RESULT .word
  1427
  1428 = 503A			@VarData	= BN
  1429 = 0101			@VarDataSize	= 257
  1430
  1431 2AB9 60				rts						; ret
  1432 = 2ABA 3B 50		RESULT
  1432 				.endl
  1433
  1434 				; ------------------------------------------------------------
  1435
  1436 				.endl							; UNIT A8LIBSTR
  1437
  1438 				; ------------------------------------------------------------
  1439
  1440 2ABC			.local	DOS						; UNIT
  1441
  1442 				; ------------------------------------------------------------
  1443
  1444 = D014			PALNTSC	= $D014
  1445
  1446 				.endl							; UNIT DOS
  1447
  1448 				; ------------------------------------------------------------
  1449
  1450 2ABC			.local	STRUTILS					; UNIT
  1451
  1452 				; ------------------------------------------------------------
  1453
  1454 				.endl							; UNIT STRUTILS
  1455
  1456 				; ------------------------------------------------------------
  1457
  1458 2ABC			.local	SYSUTILS					; UNIT
  1459
  1460 				; ------------------------------------------------------------
  1461
  1462 = 0001			FAREADONLY	= $01
  1463 = 0002			FAHIDDEN	= $02
  1464 = 0004			FASYSFILE	= $04
  1465 = 0008			FAVOLUMEID	= $08
  1466 = 0010			FADIRECTORY	= $10
  1467 = 0020			FAARCHIVE	= $20
  1468 = 003F			FAANYFILE	= $3F
  1469
  1470 				.endl							; UNIT SYSUTILS
  1471
  1472 				; ------------------------------------------------------------
  1473
  1474 2ABC			.local	A8LIBWIN					; UNIT
  1475
  1476 2ABC			.local	WINIT						; PROCEDURE
  1477
  1478 				; optimize OK (A8LIBWIN), line = 56
  1479
  1480 2ABC A9 01			lda #$01
  1481 2ABE 8D F0 02			sta $02F0
  1482
  1483 				; optimize OK (A8LIBWIN), line = 57
  1484
  1485 2AC1 A9 00			lda #$00
  1486 2AC3 85 52			sta $0052
  1487
  1488 				; optimize FAIL ('CRT.CLRSCR', A8LIBWIN), line = 58
  1489
  1490 2AC5 20 8E 27			jsr CRT.CLRSCR
  1491
  1492 				; optimize OK (A8LIBWIN), line = 61
  1493
  1494 2AC8 AD 12 33			lda BAWM
  1495 2ACB 85 88			sta SYSTEM.FILLCHAR_048C.A
  1496 2ACD AD 13 33			lda BAWM+1
  1497 2AD0 85 89			sta SYSTEM.FILLCHAR_048C.A+1
  1498 2AD2 A9 14			lda #$14
  1499 2AD4 85 8C			sta SYSTEM.FILLCHAR_048C.COUNT
  1500 2AD6 A9 08			lda #$08
  1501 2AD8 85 8D			sta SYSTEM.FILLCHAR_048C.COUNT+1
  1502 2ADA A9 00			lda #$00
  1503 2ADC 85 84			sta SYSTEM.FILLCHAR_048C.VALUE
  1504 2ADE				.local +MAIN.SYSTEM.FILLCHAR_048C
  1505 2ADE				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_048C.M@INLINE [Source: appdemo.a65]
     4 2ADE 20 CD 25			jsr @fill
Source: appdemo.a65
  1506 					.endl
  1507
  1508 				; optimize OK (A8LIBWIN), line = 64
  1509
  1510 2AE1 AD 12 33			lda BAWM
  1511 2AE4 8D BF 59			sta CPWM
  1512 2AE7 AD 13 33			lda BAWM+1
  1513 2AEA 8D C0 59			sta CPWM+1
  1514
  1515 				; optimize OK (A8LIBWIN), line = 67
  1516
  1517 2AED A9 00			lda #$00
  1518 2AEF 8D C1 59			sta BL
  1519
  1520 2AF2			l_08CE
  1521 				; --- ForToDoCondition
  1522 2AF2 AC C1 59			ldy BL
  1523 2AF5 C0 0B			cpy #$0B
  1524 2AF7 B0 32			jcs l_08DC
  1525
  1526 				; optimize OK (A8LIBWIN), line = 70
  1527
  1528 2AF9 A9 00			lda #$00
  1529 2AFB 99 3B 51			sta adr.BAW.BU,y
  1530
  1531 				; optimize OK (A8LIBWIN), line = 71
  1532
  1533 2AFE 99 46 51			sta adr.BAW.BX,y
  1534
  1535 				; optimize OK (A8LIBWIN), line = 72
  1536
  1537 2B01 99 51 51			sta adr.BAW.BY,y
  1538
  1539 				; optimize OK (A8LIBWIN), line = 73
  1540
  1541 2B04 99 5C 51			sta adr.BAW.BW,y
  1542
  1543 				; optimize OK (A8LIBWIN), line = 74
  1544
  1545 2B07 99 67 51			sta adr.BAW.BH,y
  1546
  1547 				; optimize OK (A8LIBWIN), line = 75
  1548
  1549 2B0A 99 72 51			sta adr.BAW.BI,y
  1550
  1551 				; optimize OK (A8LIBWIN), line = 76
  1552
  1553 2B0D AD C1 59			lda BL
  1554 2B10 0A				asl @
  1555 2B11 A8				tay
  1556 2B12 AD 12 33			lda BAWM
  1557 2B15 99 7D 51			sta adr.BAW.CM,y
  1558 2B18 AD 13 33			lda BAWM+1
  1559 2B1B 99 7E 51			sta adr.BAW.CM+1,y
  1560
  1561 				; optimize OK (A8LIBWIN), line = 77
  1562
  1563 2B1E A9 00			lda #$00
  1564 2B20 99 93 51			sta adr.BAW.CZ,y
  1565 2B23 99 94 51			sta adr.BAW.CZ+1,y
  1566
  1567 				; --- ForToDoEpilog
  1568 2B26 EE C1 59			inc BL
  1569 2B29 D0 C7			jne l_08CE
  1570 2B2B			l_08DC
  1571
  1572 				; optimize OK (A8LIBWIN), line = 81
  1573
  1574 2B2B A9 00			lda #$00
  1575 2B2D 8D A9 51			sta VCUR.VX
  1576
  1577 				; optimize OK (A8LIBWIN), line = 82
  1578
  1579 2B30 8D AA 51			sta VCUR.VY
  1580
  1581 				; ------------------------------------------------------------
  1582
  1583 = 59C1			BL	= DATAORIGIN+$09AD
  1584
  1585 = 59C1			@VarData	= BL
  1586 = 0001			@VarDataSize	= 1
  1587
  1588 2B33			@exit
  1589 					.ifdef @new
  1590 					lda <@VarData
  1591 					sta :ztmp
  1592 					lda >@VarData
  1593 					ldy #@VarDataSize-1
  1594 					jmp @FreeMem
  1595 					els
  1596 2B33 60				rts						; ret
  1597 					eif
  1598 				.endl
  1599
  1600 2B34			.local	WBACK						; PROCEDURE
  1601 2B34 8D C2 59			sta BN
  1602
  1603 				; optimize OK (A8LIBWIN), line = 94
  1604
  1605 2B37 A5 58			lda $0058
  1606 2B39 85 88			sta SYSTEM.FILLCHAR_048C.A
  1607 2B3B A5 59			lda $0058+1
  1608 2B3D 85 89			sta SYSTEM.FILLCHAR_048C.A+1
  1609 2B3F A9 C0			lda #$C0
  1610 2B41 85 8C			sta SYSTEM.FILLCHAR_048C.COUNT
  1611 2B43 A9 03			lda #$03
  1612 2B45 85 8D			sta SYSTEM.FILLCHAR_048C.COUNT+1
  1613 2B47 AD C2 59			lda BN
  1614 2B4A 85 84			sta SYSTEM.FILLCHAR_048C.VALUE
  1615 2B4C				.local +MAIN.SYSTEM.FILLCHAR_048C
  1616 2B4C				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_048C.M@INLINE [Source: appdemo.a65]
     4 2B4C 20 CD 25			jsr @fill
Source: appdemo.a65
  1617 					.endl
  1618
  1619 				; ------------------------------------------------------------
  1620
  1621 = 59C2			BN	= DATAORIGIN+$09AE
  1622
  1623 = 59C2			@VarData	= BN
  1624 = 0001			@VarDataSize	= 1
  1625
  1626 2B4F			@exit
  1627 					.ifdef @new
  1628 					lda <@VarData
  1629 					sta :ztmp
  1630 					lda >@VarData
  1631 					ldy #@VarDataSize-1
  1632 					jmp @FreeMem
  1633 					els
  1634 2B4F 60				rts						; ret
  1635 					eif
  1636 				.endl
  1637
  1638 2B50			.local	WOPEN						; FUNCTION
  1639
  1640 				; optimize OK (A8LIBWIN), line = 118
  1641
  1642 2B50 A9 64			lda #$64
  1643 2B52 8D C8 59			sta RESULT
  1644
  1645 				; optimize OK (A8LIBWIN), line = 121
  1646
  1647 2B55 A9 00			lda #$00
  1648 2B57 8D C9 59			sta BL
  1649
  1650 2B5A			l_093D
  1651 				; --- ForToDoCondition
  1652 2B5A AC C9 59			ldy BL
  1653 2B5D C0 0B			cpy #$0B
  1654 2B5F 90 03 4C 22 2D		jcs l_094B
  1655
  1656 				; optimize OK (A8LIBWIN), line = 124
  1657
  1658 2B64 B9 3B 51			lda adr.BAW.BU,y
  1659 2B67 F0 03 4C 1A 2D		jne l_0960
  1660
  1661 				; optimize OK (A8LIBWIN), line = 127
  1662
  1663 2B6C A9 01			lda #$01
  1664 2B6E 99 3B 51			sta adr.BAW.BU,y
  1665
  1666 				; optimize OK (A8LIBWIN), line = 130
  1667
  1668 2B71 AD C9 59			lda BL
  1669 2B74 0A				asl @
  1670 2B75 A8				tay
  1671 2B76 AD BF 59			lda CPWM
  1672 2B79 99 7D 51			sta adr.BAW.CM,y
  1673 2B7C AD C0 59			lda CPWM+1
  1674 2B7F 99 7E 51			sta adr.BAW.CM+1,y
  1675
  1676 				; optimize OK (A8LIBWIN), line = 131
  1677
  1678 2B82 AD C9 59			lda BL
  1679 2B85 85 9D			sta :STACKORIGIN+9
  1680 2B87 A9 00			lda #$00
  1681 2B89 06 9D			asl :STACKORIGIN+9
  1682 2B8B 2A				rol @
  1683 2B8C 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  1684 2B8E AD C6 59			lda H
  1685 2B91 85 8C			sta :ecx
  1686 2B93 AD C5 59			lda W
  1687 2B96 85 84			sta :eax
  1688 					.ifdef fmulinit
  1689 					fmulu_8
  1690 					els
  1691 2B98 20 25 26			imulCL
  1692 					eif
  1693 2B9B A5 84			lda :eax
  1694 2B9D 85 9E			sta :STACKORIGIN+10
  1695 2B9F A5 85			lda :eax+1
  1696 2BA1 85 AE			sta :STACKORIGIN+STACKWIDTH+10
  1697 2BA3 A5 9D			lda :STACKORIGIN+9
  1698 2BA5 18 69 00			add #$00
  1699 2BA8 A8				tay
  1700 2BA9 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  1701 2BAB 69 00			adc #$00
  1702 2BAD 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  1703 2BAF A5 9E			lda :STACKORIGIN+10
  1704 2BB1 99 93 51			sta adr.BAW.CZ,y
  1705 2BB4 A5 AE			lda :STACKORIGIN+STACKWIDTH+10
  1706 2BB6 99 94 51			sta adr.BAW.CZ+1,y
  1707
  1708 				; optimize OK (A8LIBWIN), line = 134
  1709
  1710 2BB9 AC C9 59			ldy BL
  1711 2BBC AD C3 59			lda X
  1712 2BBF 99 46 51			sta adr.BAW.BX,y
  1713
  1714 				; optimize OK (A8LIBWIN), line = 135
  1715
  1716 2BC2 AD C4 59			lda Y
  1717 2BC5 99 51 51			sta adr.BAW.BY,y
  1718
  1719 				; optimize OK (A8LIBWIN), line = 136
  1720
  1721 2BC8 AD C5 59			lda W
  1722 2BCB 99 5C 51			sta adr.BAW.BW,y
  1723
  1724 				; optimize OK (A8LIBWIN), line = 137
  1725
  1726 2BCE AD C6 59			lda H
  1727 2BD1 99 67 51			sta adr.BAW.BH,y
  1728
  1729 				; optimize OK (A8LIBWIN), line = 138
  1730
  1731 2BD4 AD C7 59			lda BT
  1732 2BD7 99 72 51			sta adr.BAW.BI,y
  1733
  1734 				; optimize OK (A8LIBWIN), line = 141
  1735
  1736 2BDA A5 58			lda $0058
  1737 2BDC 85 9D			sta :STACKORIGIN+9
  1738 2BDE A5 59			lda $0058+1
  1739 2BE0 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  1740 2BE2 AD C4 59			lda Y
  1741 2BE5 20 B2 26			jsr @mul40
  1742 2BE8 18 65 9D			add :STACKORIGIN+9
  1743 2BEB A8				tay
  1744 2BEC A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  1745 2BEE 65 85			adc :eax+1
  1746 2BF0 8D F6 59			sta PS+1
  1747 2BF3 98				tya
  1748 2BF4 18 6D C3 59			add X
  1749 2BF8 8D F5 59			sta PS
  1750 2BFB 90 03			scc
  1751 2BFD EE F6 59			inc PS+1
  1752
  1753 				; optimize OK (A8LIBWIN), line = 144
  1754
  1755 2C00 A9 00			lda #$00
  1756 2C02 8D CA 59			sta BD
  1757 2C05 AC C6 59			ldy H
  1758 2C08 88				dey
  1759 2C09 8C 0D 2C			sty @FORTMP_09CD_0
  1760
  1761 2C0C			l_09D0
  1762 				; --- ForToDoCondition
  1763 2C0C A9 00			lda @FORTMP_09CD_0:#$00
  1764 2C0E CD CA 59			cmp BD
  1765 2C11 B0 03 4C 11 2D		jcc l_09DE
  1766
  1767 				; optimize OK (A8LIBWIN), line = 149
  1768
  1769 2C16 AD CA 59			lda BD
  1770 2C19 F0 0B			jeq l_0A02x
  1771 2C1B AD C6 59			lda H
  1772 2C1E 38 E9 01			sub #$01
  1773 2C21 CD CA 59			cmp BD
  1774 2C24 D0 3D			jne l_0A02
  1775 2C26			l_0A02x
  1776
  1777 				; optimize OK (A8LIBWIN), line = 152
  1778
  1779 2C26 A9 CC			lda <adr.CL
  1780 2C28 85 88			sta SYSTEM.FILLCHAR_048C.A
  1781 2C2A A9 59			lda >adr.CL
  1782 2C2C 85 89			sta SYSTEM.FILLCHAR_048C.A+1
  1783 2C2E AD C5 59			lda W
  1784 2C31 85 8C			sta SYSTEM.FILLCHAR_048C.COUNT
  1785 2C33 A9 00			lda #$00
  1786 2C35 85 8D			sta SYSTEM.FILLCHAR_048C.COUNT+1
  1787 2C37 A9 52			lda #$52
  1788 2C39 85 84			sta SYSTEM.FILLCHAR_048C.VALUE
  1789 2C3B				.local +MAIN.SYSTEM.FILLCHAR_048C
  1790 2C3B				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_048C.M@INLINE [Source: appdemo.a65]
     4 2C3B 20 CD 25			jsr @fill
Source: appdemo.a65
  1791 					.endl
  1792
  1793 				; optimize OK (A8LIBWIN), line = 155
  1794
  1795 2C3E AD CA 59			lda BD
  1796 2C41 D0 10			jne l_0A1B
  1797
  1798 				; optimize OK (A8LIBWIN), line = 157
  1799
  1800 2C43 A9 51			lda #$51
  1801 2C45 8D CC 59			sta adr.CL
  1802
  1803 				; optimize OK (A8LIBWIN), line = 158
  1804
  1805 2C48 AC C5 59			ldy W
  1806 2C4B A9 45			lda #$45
  1807 2C4D 99 CB 59			sta adr.CL-$01,y
  1808 2C50 4C 60 2C			jmp l_0A35
  1809 2C53			l_0A1B
  1810
  1811 				; optimize OK (A8LIBWIN), line = 162
  1812
  1813 2C53 A9 5A			lda #$5A
  1814 2C55 8D CC 59			sta adr.CL
  1815
  1816 				; optimize OK (A8LIBWIN), line = 163
  1817
  1818 2C58 AC C5 59			ldy W
  1819 2C5B A9 43			lda #$43
  1820 2C5D 99 CB 59			sta adr.CL-$01,y
  1821 2C60			l_0A35
  1822 2C60 4C 84 2C			jmp l_0A4E
  1823 2C63			l_0A02
  1824
  1825 				; optimize OK (A8LIBWIN), line = 169
  1826
  1827 2C63 A9 CC			lda <adr.CL
  1828 2C65 85 88			sta SYSTEM.FILLCHAR_048C.A
  1829 2C67 A9 59			lda >adr.CL
  1830 2C69 85 89			sta SYSTEM.FILLCHAR_048C.A+1
  1831 2C6B AD C5 59			lda W
  1832 2C6E 85 8C			sta SYSTEM.FILLCHAR_048C.COUNT
  1833 2C70 A9 00			lda #$00
  1834 2C72 85 8D			sta SYSTEM.FILLCHAR_048C.COUNT+1
  1835 2C74 85 84			sta SYSTEM.FILLCHAR_048C.VALUE
  1836 2C76				.local +MAIN.SYSTEM.FILLCHAR_048C
  1837 2C76				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_048C.M@INLINE [Source: appdemo.a65]
     4 2C76 20 CD 25			jsr @fill
Source: appdemo.a65
  1838 					.endl
  1839
  1840 				; optimize OK (A8LIBWIN), line = 170
  1841
  1842 2C79 A9 7C			lda #$7C
  1843 2C7B 8D CC 59			sta adr.CL
  1844
  1845 				; optimize OK (A8LIBWIN), line = 171
  1846
  1847 2C7E AC C5 59			ldy W
  1848 2C81 99 CB 59			sta adr.CL-$01,y
  1849 2C84			l_0A4E
  1850
  1851 				; optimize OK (A8LIBWIN), line = 175
  1852
  1853 2C84 AD C7 59			lda BT
  1854 2C87 C9 01			cmp #$01
  1855 2C89 D0 23			jne l_0A76
  1856
  1857 				; optimize OK (A8LIBWIN), line = 177
  1858
  1859 2C8B A9 00			lda #$00
  1860 2C8D 8D CB 59			sta BC
  1861 2C90 AC C5 59			ldy W
  1862 2C93 88				dey
  1863 2C94 8C 98 2C			sty @FORTMP_0A83_0
  1864
  1865 2C97			l_0A86
  1866 				; --- ForToDoCondition
  1867 2C97 A9 00			lda @FORTMP_0A83_0:#$00
  1868 2C99 CD CB 59			cmp BC
  1869 2C9C 90 10			jcc l_0A94
  1870
  1871 				; optimize OK (A8LIBWIN), line = 179
  1872
  1873 2C9E AC CB 59			ldy BC
  1874 2CA1 B9 CC 59			lda adr.CL,y
  1875 2CA4 49 80			eor #$80
  1876 2CA6 99 CC 59			sta adr.CL,y
  1877
  1878 				; --- ForToDoEpilog
  1879 2CA9 EE CB 59			inc BC
  1880 2CAC D0 E9			jne l_0A86
  1881 2CAE			l_0A94
  1882 2CAE			l_0A76
  1883
  1884 				; optimize OK (A8LIBWIN), line = 184
  1885
  1886 2CAE AD F5 59			lda PS
  1887 2CB1 85 88			sta SYSTEM.MOVE_048D.SOURCE
  1888 2CB3 AD F6 59			lda PS+1
  1889 2CB6 85 89			sta SYSTEM.MOVE_048D.SOURCE+1
  1890 2CB8 AD BF 59			lda CPWM
  1891 2CBB 85 8C			sta SYSTEM.MOVE_048D.DEST
  1892 2CBD AD C0 59			lda CPWM+1
  1893 2CC0 85 8D			sta SYSTEM.MOVE_048D.DEST+1
  1894 2CC2 AD C5 59			lda W
  1895 2CC5 85 84			sta SYSTEM.MOVE_048D.COUNT
  1896 2CC7 A9 00			lda #$00
  1897 2CC9 85 85			sta SYSTEM.MOVE_048D.COUNT+1
  1898 2CCB				.local +MAIN.SYSTEM.MOVE_048D
  1899 2CCB				m@INLINE
Macro: MAIN.SYSTEM.MOVE_048D.M@INLINE [Source: appdemo.a65]
     4 2CCB 20 78 25			jsr @move
Source: appdemo.a65
  1900 					.endl
  1901
  1902 				; optimize OK (A8LIBWIN), line = 186
  1903
  1904 2CCE AD BF 59			lda CPWM
  1905 2CD1 18 6D C5 59			add W
  1906 2CD5 8D BF 59			sta CPWM
  1907 2CD8 90 03			scc
  1908 2CDA EE C0 59			inc CPWM+1
  1909
  1910 				; optimize OK (A8LIBWIN), line = 188
  1911
  1912 2CDD A9 CC			lda <adr.CL
  1913 2CDF 85 88			sta SYSTEM.MOVE_048D.SOURCE
  1914 2CE1 A9 59			lda >adr.CL
  1915 2CE3 85 89			sta SYSTEM.MOVE_048D.SOURCE+1
  1916 2CE5 AD F5 59			lda PS
  1917 2CE8 85 8C			sta SYSTEM.MOVE_048D.DEST
  1918 2CEA AD F6 59			lda PS+1
  1919 2CED 85 8D			sta SYSTEM.MOVE_048D.DEST+1
  1920 2CEF AD C5 59			lda W
  1921 2CF2 85 84			sta SYSTEM.MOVE_048D.COUNT
  1922 2CF4 A9 00			lda #$00
  1923 2CF6 85 85			sta SYSTEM.MOVE_048D.COUNT+1
  1924 2CF8				.local +MAIN.SYSTEM.MOVE_048D
  1925 2CF8				m@INLINE
Macro: MAIN.SYSTEM.MOVE_048D.M@INLINE [Source: appdemo.a65]
     4 2CF8 20 78 25			jsr @move
Source: appdemo.a65
  1926 					.endl
  1927
  1928 				; optimize OK (A8LIBWIN), line = 190
  1929
  1930 2CFB AD F5 59			lda PS
  1931 2CFE 18 69 28			add #$28
  1932 2D01 8D F5 59			sta PS
  1933 2D04 90 03			scc
  1934 2D06 EE F6 59			inc PS+1
  1935
  1936 				; --- ForToDoEpilog
  1937 2D09 EE CA 59			inc BD
  1938 2D0C F0 03 4C 0C 2C		jne l_09D0
  1939 2D11			l_09DE
  1940
  1941 				; optimize OK (A8LIBWIN), line = 194
  1942
  1943 2D11 AD C9 59			lda BL
  1944 2D14 8D C8 59			sta RESULT
  1945 2D17 4C 22 2D			jmp b_093D					; break
  1946 2D1A			l_0960
  1947
  1948 				; --- ForToDoEpilog
  1949 2D1A EE C9 59			inc BL
  1950 2D1D F0 03 4C 5A 2B		jne l_093D
  1951 2D22			l_094B
  1952 2D22			b_093D
  1953 2D22			@exit
  1954
  1955 				; ------------------------------------------------------------
  1956
  1957 = 59C3			X	= DATAORIGIN+$09AF
  1958 = 59C4			Y	= DATAORIGIN+$09B0
  1959 = 59C5			W	= DATAORIGIN+$09B1
  1960 = 59C6			H	= DATAORIGIN+$09B2
  1961 = 59C7			BT	= DATAORIGIN+$09B3
  1962 = 59C8			RESULT	= DATAORIGIN+$09B4
  1963 = 59C9			BL	= DATAORIGIN+$09B5
  1964 = 59CA			BD	= DATAORIGIN+$09B6
  1965 = 59CB			BC	= DATAORIGIN+$09B7
  1966 = 59CC			adr.CL	= [DATAORIGIN+$09B8] .array [41]
  1967 2D22			.var CL	= adr.CL .word
  1968 = 59F5			PS	= DATAORIGIN+$09E1
  1969
  1970 = 59C3			@VarData	= X
  1971 = 0033			@VarDataSize	= 51
  1972
  1973 2D22 60				rts						; ret
  1974 = 2D23 CC 59		CL
  1974 				.endl
  1975
  1976 2D25			.local	WCLOSE						; FUNCTION
  1977 2D25 8D F9 59			sta BN
  1978
  1979 				; optimize OK (A8LIBWIN), line = 216
  1980
  1981 2D28 A9 65			lda #$65
  1982 2D2A 8D FA 59			sta RESULT
  1983
  1984 				; optimize OK (A8LIBWIN), line = 219
  1985
  1986 2D2D AC F9 59			ldy BN
  1987 2D30 B9 3B 51			lda adr.BAW.BU,y
  1988 2D33 C9 01			cmp #$01
  1989 2D35 F0 03 4C 42 2E		jne l_0AED
  1990
  1991 				; optimize OK (A8LIBWIN), line = 222
  1992
  1993 2D3A A5 58			lda $0058
  1994 2D3C 85 9D			sta :STACKORIGIN+9
  1995 2D3E A5 59			lda $0058+1
  1996 2D40 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  1997 2D42 B9 51 51			lda adr.BAW.BY,y
  1998 2D45 20 B2 26			jsr @mul40
  1999 2D48 18 65 9D			add :STACKORIGIN+9
  2000 2D4B 85 9D			sta :STACKORIGIN+9
  2001 2D4D A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  2002 2D4F 65 85			adc :eax+1
  2003 2D51 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2004 2D53 AC F9 59			ldy BN
  2005 2D56 A5 9D			lda :STACKORIGIN+9
  2006 2D58 18 79 46 51			add adr.BAW.BX,y
  2007 2D5C 8D FC 59			sta PS
  2008 2D5F A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  2009 2D61 69 00			adc #$00
  2010 2D63 8D FD 59			sta PS+1
  2011
  2012 				; optimize OK (A8LIBWIN), line = 225
  2013
  2014 2D66 AD F9 59			lda BN
  2015 2D69 0A				asl @
  2016 2D6A A8				tay
  2017 2D6B B9 7D 51			lda adr.BAW.CM,y
  2018 2D6E 8D FE 59			sta PA
  2019 2D71 B9 7E 51			lda adr.BAW.CM+1,y
  2020 2D74 8D FF 59			sta PA+1
  2021
  2022 				; optimize OK (A8LIBWIN), line = 228
  2023
  2024 2D77 A9 00			lda #$00
  2025 2D79 8D FB 59			sta BL
  2026 2D7C AC F9 59			ldy BN
  2027 2D7F B9 67 51			lda adr.BAW.BH,y
  2028 2D82 38 E9 01			sub #$01
  2029 2D85 8D 89 2D			sta @FORTMP_0B20_0
  2030
  2031 2D88			l_0B23
  2032 				; --- ForToDoCondition
  2033 2D88 A9 00			lda @FORTMP_0B20_0:#$00
  2034 2D8A CD FB 59			cmp BL
  2035 2D8D 90 48			jcc l_0B31
  2036
  2037 				; optimize OK (A8LIBWIN), line = 231
  2038
  2039 2D8F AC F9 59			ldy BN
  2040 2D92 B9 5C 51			lda adr.BAW.BW,y
  2041 2D95 85 84			sta SYSTEM.MOVE_048D.COUNT
  2042 2D97 AD FE 59			lda PA
  2043 2D9A 85 88			sta SYSTEM.MOVE_048D.SOURCE
  2044 2D9C AD FF 59			lda PA+1
  2045 2D9F 85 89			sta SYSTEM.MOVE_048D.SOURCE+1
  2046 2DA1 AD FC 59			lda PS
  2047 2DA4 85 8C			sta SYSTEM.MOVE_048D.DEST
  2048 2DA6 AD FD 59			lda PS+1
  2049 2DA9 85 8D			sta SYSTEM.MOVE_048D.DEST+1
  2050 2DAB A9 00			lda #$00
  2051 2DAD 85 85			sta SYSTEM.MOVE_048D.COUNT+1
  2052 2DAF				.local +MAIN.SYSTEM.MOVE_048D
  2053 2DAF				m@INLINE
Macro: MAIN.SYSTEM.MOVE_048D.M@INLINE [Source: appdemo.a65]
     4 2DAF 20 78 25			jsr @move
Source: appdemo.a65
  2054 					.endl
  2055
  2056 				; optimize OK (A8LIBWIN), line = 233
  2057
  2058 2DB2 AC F9 59			ldy BN
  2059 2DB5 AD FE 59			lda PA
  2060 2DB8 18 79 5C 51			add adr.BAW.BW,y
  2061 2DBC 8D FE 59			sta PA
  2062 2DBF 90 03			scc
  2063 2DC1 EE FF 59			inc PA+1
  2064
  2065 				; optimize OK (A8LIBWIN), line = 235
  2066
  2067 2DC4 AD FC 59			lda PS
  2068 2DC7 18 69 28			add #$28
  2069 2DCA 8D FC 59			sta PS
  2070 2DCD 90 03			scc
  2071 2DCF EE FD 59			inc PS+1
  2072
  2073 				; --- ForToDoEpilog
  2074 2DD2 EE FB 59			inc BL
  2075 2DD5 D0 B1			jne l_0B23
  2076 2DD7			l_0B31
  2077
  2078 				; optimize OK (A8LIBWIN), line = 239
  2079
  2080 2DD7 AD F9 59			lda BN
  2081 2DDA 0A				asl @
  2082 2DDB A8				tay
  2083 2DDC B9 93 51			lda adr.BAW.CZ,y
  2084 2DDF 85 8C			sta SYSTEM.FILLCHAR_048C.COUNT
  2085 2DE1 B9 94 51			lda adr.BAW.CZ+1,y
  2086 2DE4 85 8D			sta SYSTEM.FILLCHAR_048C.COUNT+1
  2087 2DE6 B9 7D 51			lda adr.BAW.CM,y
  2088 2DE9 85 88			sta SYSTEM.FILLCHAR_048C.A
  2089 2DEB B9 7E 51			lda adr.BAW.CM+1,y
  2090 2DEE 85 89			sta SYSTEM.FILLCHAR_048C.A+1
  2091 2DF0 A9 00			lda #$00
  2092 2DF2 85 84			sta SYSTEM.FILLCHAR_048C.VALUE
  2093 2DF4				.local +MAIN.SYSTEM.FILLCHAR_048C
  2094 2DF4				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_048C.M@INLINE [Source: appdemo.a65]
     4 2DF4 20 CD 25			jsr @fill
Source: appdemo.a65
  2095 					.endl
  2096
  2097 				; optimize OK (A8LIBWIN), line = 242
  2098
  2099 2DF7 AD F9 59			lda BN
  2100 2DFA 0A				asl @
  2101 2DFB A8				tay
  2102 2DFC AD BF 59			lda CPWM
  2103 2DFF 38 F9 93 51			sub adr.BAW.CZ,y
  2104 2E03 8D BF 59			sta CPWM
  2105 2E06 AD C0 59			lda CPWM+1
  2106 2E09 F9 94 51			sbc adr.BAW.CZ+1,y
  2107 2E0C 8D C0 59			sta CPWM+1
  2108
  2109 				; optimize OK (A8LIBWIN), line = 245
  2110
  2111 2E0F AC F9 59			ldy BN
  2112 2E12 A9 00			lda #$00
  2113 2E14 99 3B 51			sta adr.BAW.BU,y
  2114
  2115 				; optimize OK (A8LIBWIN), line = 246
  2116
  2117 2E17 99 46 51			sta adr.BAW.BX,y
  2118
  2119 				; optimize OK (A8LIBWIN), line = 247
  2120
  2121 2E1A 99 51 51			sta adr.BAW.BY,y
  2122
  2123 				; optimize OK (A8LIBWIN), line = 248
  2124
  2125 2E1D 99 5C 51			sta adr.BAW.BW,y
  2126
  2127 				; optimize OK (A8LIBWIN), line = 249
  2128
  2129 2E20 99 67 51			sta adr.BAW.BH,y
  2130
  2131 				; optimize OK (A8LIBWIN), line = 250
  2132
  2133 2E23 99 72 51			sta adr.BAW.BI,y
  2134
  2135 				; optimize OK (A8LIBWIN), line = 251
  2136
  2137 2E26 AD F9 59			lda BN
  2138 2E29 0A				asl @
  2139 2E2A A8				tay
  2140 2E2B AD 12 33			lda BAWM
  2141 2E2E 99 7D 51			sta adr.BAW.CM,y
  2142 2E31 AD 13 33			lda BAWM+1
  2143 2E34 99 7E 51			sta adr.BAW.CM+1,y
  2144
  2145 				; optimize OK (A8LIBWIN), line = 252
  2146
  2147 2E37 A9 00			lda #$00
  2148 2E39 99 93 51			sta adr.BAW.CZ,y
  2149 2E3C 99 94 51			sta adr.BAW.CZ+1,y
  2150
  2151 				; optimize OK (A8LIBWIN), line = 255
  2152
  2153 2E3F 8D FA 59			sta RESULT
  2154 2E42			l_0AED
  2155 2E42			@exit
  2156
  2157 				; ------------------------------------------------------------
  2158
  2159 = 59F9			BN	= DATAORIGIN+$09E5
  2160 = 59FA			RESULT	= DATAORIGIN+$09E6
  2161 = 59FB			BL	= DATAORIGIN+$09E7
  2162 = 59FC			PS	= DATAORIGIN+$09E8
  2163 = 59FE			PA	= DATAORIGIN+$09EA
  2164
  2165 = 59F9			@VarData	= BN
  2166 = 0006			@VarDataSize	= 6
  2167
  2168 2E42 60				rts						; ret
  2169 				.endl
  2170
  2171 2E43			.local	WSTAT						; FUNCTION
  2172 2E43 8D 01 5A			sta BN
  2173
  2174 				; optimize OK (A8LIBWIN), line = 269
  2175
  2176 2E46 AC 01 5A			ldy BN
  2177 2E49 B9 3B 51			lda adr.BAW.BU,y
  2178 2E4C 8D 02 5A			sta RESULT
  2179 2E4F			@exit
  2180
  2181 				; ------------------------------------------------------------
  2182
  2183 = 5A01			BN	= DATAORIGIN+$09ED
  2184 = 5A02			RESULT	= DATAORIGIN+$09EE
  2185
  2186 = 5A01			@VarData	= BN
  2187 = 0001			@VarDataSize	= 1
  2188
  2189 2E4F 60				rts						; ret
  2190 				.endl
  2191
  2192 2E50			.local	WPOS						; FUNCTION
  2193
  2194 				; optimize OK (A8LIBWIN), line = 284
  2195
  2196 2E50 A9 00			lda #$00
  2197 2E52 8D 06 5A			sta RESULT
  2198
  2199 				; optimize OK (A8LIBWIN), line = 287
  2200
  2201 2E55 AD 03 5A			lda BN
  2202 2E58 C9 80			cmp #$80
  2203 2E5A D0 0F			jne l_0BCE
  2204
  2205 				; optimize OK (A8LIBWIN), line = 290
  2206
  2207 2E5C AD 04 5A			lda X
  2208 2E5F 8D A9 51			sta VCUR.VX
  2209
  2210 				; optimize OK (A8LIBWIN), line = 291
  2211
  2212 2E62 AD 05 5A			lda Y
  2213 2E65 8D AA 51			sta VCUR.VY
  2214 2E68 4C 89 2E			jmp l_0BE4
  2215 2E6B			l_0BCE
  2216
  2217 				; optimize OK (A8LIBWIN), line = 296
  2218
  2219 2E6B AC 03 5A			ldy BN
  2220 2E6E B9 3B 51			lda adr.BAW.BU,y
  2221 2E71 C9 01			cmp #$01
  2222 2E73 D0 14			jne l_0BF9
  2223
  2224 				; optimize OK (A8LIBWIN), line = 299
  2225
  2226 2E75 B9 46 51			lda adr.BAW.BX,y
  2227 2E78 18 6D 04 5A			add X
  2228 2E7C 8D A9 51			sta VCUR.VX
  2229
  2230 				; optimize OK (A8LIBWIN), line = 300
  2231
  2232 2E7F B9 51 51			lda adr.BAW.BY,y
  2233 2E82 18 6D 05 5A			add Y
  2234 2E86 8D AA 51			sta VCUR.VY
  2235 2E89			l_0BF9
  2236 2E89			l_0BE4
  2237 2E89			@exit
  2238
  2239 				; ------------------------------------------------------------
  2240
  2241 = 5A03			BN	= DATAORIGIN+$09EF
  2242 = 5A04			X	= DATAORIGIN+$09F0
  2243 = 5A05			Y	= DATAORIGIN+$09F1
  2244 = 5A06			RESULT	= DATAORIGIN+$09F2
  2245
  2246 = 5A03			@VarData	= BN
  2247 = 0003			@VarDataSize	= 3
  2248
  2249 2E89 60				rts						; ret
  2250 				.endl
  2251
  2252 2E8A			.local	WPUT						; FUNCTION
  2253
  2254 				; optimize OK (A8LIBWIN), line = 319
  2255
  2256 2E8A A9 65			lda #$65
  2257 2E8C 8D 09 5A			sta RESULT
  2258
  2259 				; optimize OK (A8LIBWIN), line = 322
  2260
  2261 2E8F AD 08 5A			lda X
  2262 2E92 8D 0A 5A			sta BT
  2263
  2264 				; optimize OK (A8LIBWIN), line = 325
  2265
  2266 2E95 AC 07 5A			ldy BN
  2267 2E98 B9 3B 51			lda adr.BAW.BU,y
  2268 2E9B C9 01			cmp #$01
  2269 2E9D D0 57			jne l_0C3D
  2270
  2271 				; optimize OK (A8LIBWIN), line = 328
  2272
  2273 2E9F B9 72 51			lda adr.BAW.BI,y
  2274 2EA2 C9 01			cmp #$01
  2275 2EA4 D0 08			jne l_0C53
  2276
  2277 				; optimize OK (A8LIBWIN), line = 330
  2278
  2279 2EA6 AD 0A 5A			lda BT
  2280 2EA9 49 80			eor #$80
  2281 2EAB 8D 0A 5A			sta BT
  2282 2EAE			l_0C53
  2283
  2284 				; optimize OK (A8LIBWIN), line = 334
  2285
  2286 2EAE A5 58			lda $0058
  2287 2EB0 85 9D			sta :STACKORIGIN+9
  2288 2EB2 A5 59			lda $0058+1
  2289 2EB4 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2290 2EB6 AD AA 51			lda VCUR.VY
  2291 2EB9 20 B2 26			jsr @mul40
  2292 2EBC 18 65 9D			add :STACKORIGIN+9
  2293 2EBF A8				tay
  2294 2EC0 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  2295 2EC2 65 85			adc :eax+1
  2296 2EC4 8D 0C 5A			sta CS+1
  2297 2EC7 98				tya
  2298 2EC8 18 6D A9 51			add VCUR.VX
  2299 2ECC 8D 0B 5A			sta CS
  2300 2ECF 90 03			scc
  2301 2ED1 EE 0C 5A			inc CS+1
  2302
  2303 				; optimize OK (A8LIBWIN), line = 335
  2304
  2305 2ED4 AD 08 5A			lda X
  2306 2ED7 20 D6 29			jsr A8LIBSTR.CHARAI
  2307 2EDA E8				inx
  2308 2EDB AD 39 50 95 94		mva A8LIBSTR.CHARAI.RESULT :STACKORIGIN,x
  2309 2EE0 E8				inx
  2310 2EE1 AD 0B 5A 95 94		mva CS :STACKORIGIN,x
  2311 2EE6 AD 0C 5A 95 A4		mva CS+1 :STACKORIGIN+STACKWIDTH,x
  2312 2EEB 20 4E 27			jsr SYSTEM.POKE
  2313
  2314 				; optimize FAIL (0, A8LIBWIN), line = 338
  2315
  2316 2EEE EE A9 51			inc VCUR.VX
  2317
  2318 				; optimize OK (A8LIBWIN), line = 341
  2319
  2320 2EF1 A9 00			lda #$00
  2321 2EF3 8D 09 5A			sta RESULT
  2322 2EF6			l_0C3D
  2323 2EF6			@exit
  2324
  2325 				; ------------------------------------------------------------
  2326
  2327 = 5A07			BN	= DATAORIGIN+$09F3
  2328 = 5A08			X	= DATAORIGIN+$09F4
  2329 = 5A09			RESULT	= DATAORIGIN+$09F5
  2330 = 5A0A			BT	= DATAORIGIN+$09F6
  2331 = 5A0B			CS	= DATAORIGIN+$09F7
  2332
  2333 = 5A07			@VarData	= BN
  2334 = 0005			@VarDataSize	= 5
  2335
  2336 2EF6 60				rts						; ret
  2337 				.endl
  2338
  2339 2EF7			.local	WPRINT						; FUNCTION
  2340
  2341 				; ------------------------------------------------------------
  2342
  2343 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
  2344 				; as Pointer
  2345 2EF7 B5 94			lda :STACKORIGIN,x
  2346 2EF9 8D 0D 5A			sta BN
  2347 2EFC CA				dex
  2348 2EFD 30 35			jmi @main
  2349
  2350 				; ------------------------------------------------------------
  2351
  2352 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
  2353 				; as Pointer
  2354 2EFF B5 94			lda :STACKORIGIN,x
  2355 2F01 8D 0E 5A			sta X
  2356 2F04 CA				dex
  2357 2F05 30 2D			jmi @main
  2358
  2359 				; ------------------------------------------------------------
  2360
  2361 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
  2362 				; as Pointer
  2363 2F07 B5 94			lda :STACKORIGIN,x
  2364 2F09 8D 0F 5A			sta Y
  2365 2F0C CA				dex
  2366 2F0D 30 25			jmi @main
  2367
  2368 				; ------------------------------------------------------------
  2369
  2370 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
  2371 				; as Pointer
  2372 2F0F B5 94			lda :STACKORIGIN,x
  2373 2F11 8D 10 5A			sta BI
  2374 2F14 CA				dex
  2375 2F15 30 1D			jmi @main
  2376
  2377 				; ------------------------------------------------------------
  2378
  2379 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  2380 				; as Pointer
  2381 2F17 B5 94			lda :STACKORIGIN,x
  2382 2F19 85 82			sta :bp2
  2383 2F1B B5 A4			lda :STACKORIGIN+STACKWIDTH,x
  2384 2F1D 85 83			sta :bp2+1
  2385 2F1F A0 00			ldy #$00
  2386 2F21 B1 82 99 11 5A C8 + 	mva:rne (:bp2),y adr.PS,y+
  2387 2F29 A9 11 8D DA 30 A9 + 	mwa #adr.PS PS
  2388 2F33 CA				dex
  2389 2F34			@main
  2390
  2391 				; optimize OK (A8LIBWIN), line = 364
  2392
  2393 2F34 A9 65			lda #$65
  2394 2F36 8D 11 5B			sta RESULT
  2395
  2396 				; optimize OK (A8LIBWIN), line = 367
  2397
  2398 2F39 AC 0D 5A			ldy BN
  2399 2F3C B9 3B 51			lda adr.BAW.BU,y
  2400 2F3F C9 01			cmp #$01
  2401 2F41 F0 03 4C D9 30		jne l_0CB2
  2402
  2403 				; optimize OK (A8LIBWIN), line = 370
  2404
  2405 2F46 AD 11 5A			lda adr.PS
  2406 2F49 8D 12 5B			sta BL
  2407
  2408 				; optimize OK (A8LIBWIN), line = 371
  2409
  2410 2F4C AD DC 30			lda CL
  2411 2F4F 85 88			sta SYSTEM.SETLENGTH.S
  2412 2F51 AD DD 30			lda CL+1
  2413 2F54 85 89			sta SYSTEM.SETLENGTH.S+1
  2414 2F56 AD 12 5B			lda BL
  2415 2F59 85 8C			sta SYSTEM.SETLENGTH.LEN
  2416 2F5B 20 83 27			jsr SYSTEM.SETLENGTH
  2417
  2418 				; optimize OK (A8LIBWIN), line = 372
  2419
  2420 2F5E A9 17			lda <adr.CL+$01
  2421 2F60 85 8C			sta SYSTEM.MOVE_048D.DEST
  2422 2F62 A9 5B			lda >adr.CL+$01
  2423 2F64 85 8D			sta SYSTEM.MOVE_048D.DEST+1
  2424 2F66 A9 12			lda <adr.PS+$01
  2425 2F68 85 88			sta SYSTEM.MOVE_048D.SOURCE
  2426 2F6A A9 5A			lda >adr.PS+$01
  2427 2F6C 85 89			sta SYSTEM.MOVE_048D.SOURCE+1
  2428 2F6E AD 12 5B			lda BL
  2429 2F71 85 84			sta SYSTEM.MOVE_048D.COUNT
  2430 2F73 A9 00			lda #$00
  2431 2F75 85 85			sta SYSTEM.MOVE_048D.COUNT+1
  2432 2F77				.local +MAIN.SYSTEM.MOVE_048D
  2433 2F77				m@INLINE
Macro: MAIN.SYSTEM.MOVE_048D.M@INLINE [Source: appdemo.a65]
     4 2F77 20 78 25			jsr @move
Source: appdemo.a65
  2434 					.endl
  2435
  2436 				; optimize OK (A8LIBWIN), line = 381
  2437
  2438 2F7A AD 0E 5A			lda X
  2439 2F7D C9 FF			cmp #$FF
  2440 2F7F F0 67			jeq l_0CEF
  2441 2F81 AC 0D 5A			ldy BN
  2442 2F84 B9 5C 51			lda adr.BAW.BW,y
  2443 2F87 38 ED 0E 5A			sub X
  2444 2F8B 85 9F			sta :STACKORIGIN+11
  2445 2F8D A9 00			lda #$00
  2446 2F8F E9 00			sbc #$00
  2447 2F91 85 AF			sta :STACKORIGIN+STACKWIDTH+11
  2448 2F93 A9 00			lda #$00
  2449 2F95 E9 00			sbc #$00
  2450 2F97 85 BF			sta :STACKORIGIN+STACKWIDTH*2+11
  2451 2F99 A9 00			lda #$00
  2452 2F9B E9 00			sbc #$00
  2453 2F9D 85 CF			sta :STACKORIGIN+STACKWIDTH*3+11
  2454 2F9F A5 9F			lda :STACKORIGIN+11
  2455 2FA1 38 E9 01			sub #$01
  2456 2FA4 85 9F			sta :STACKORIGIN+11
  2457 2FA6 A5 AF			lda :STACKORIGIN+STACKWIDTH+11
  2458 2FA8 E9 00			sbc #$00
  2459 2FAA 85 AF			sta :STACKORIGIN+STACKWIDTH+11
  2460 2FAC A5 BF			lda :STACKORIGIN+STACKWIDTH*2+11
  2461 2FAE E9 00			sbc #$00
  2462 2FB0 85 BF			sta :STACKORIGIN+STACKWIDTH*2+11
  2463 2FB2 A5 CF			lda :STACKORIGIN+STACKWIDTH*3+11
  2464 2FB4 E9 00			sbc #$00
  2465 2FB6 D0 0D			bne @+
  2466 2FB8 A5 BF			lda :STACKORIGIN+STACKWIDTH*2+11
  2467 2FBA D0 09			bne @+
  2468 2FBC A5 AF			lda :STACKORIGIN+STACKWIDTH+11
  2469 2FBE D0 05			bne @+
  2470 2FC0 AD 12 5B			lda BL
  2471 2FC3 C5 9F			cmp :STACKORIGIN+11
  2472 				@
  2473 2FC5 90 21			jcc l_0CEF
  2474 2FC7 F0 1F			jeq l_0CEF
  2475
  2476 				; optimize OK (A8LIBWIN), line = 384
  2477
  2478 2FC9 B9 5C 51			lda adr.BAW.BW,y
  2479 2FCC 38 ED 0E 5A			sub X
  2480 2FD0 38 E9 01			sub #$01
  2481 2FD3 8D 12 5B			sta BL
  2482
  2483 				; optimize OK (A8LIBWIN), line = 385
  2484
  2485 2FD6 AD DC 30			lda CL
  2486 2FD9 85 88			sta SYSTEM.SETLENGTH.S
  2487 2FDB AD DD 30			lda CL+1
  2488 2FDE 85 89			sta SYSTEM.SETLENGTH.S+1
  2489 2FE0 AD 12 5B			lda BL
  2490 2FE3 85 8C			sta SYSTEM.SETLENGTH.LEN
  2491 2FE5 20 83 27			jsr SYSTEM.SETLENGTH
  2492 2FE8			l_0CEF
  2493
  2494 				; optimize OK (A8LIBWIN), line = 389
  2495
  2496 2FE8 A9 17			lda <adr.CL+$01
  2497 2FEA 8D 33 50			sta A8LIBSTR.STRAI.PS
  2498 2FED A9 5B			lda >adr.CL+$01
  2499 2FEF 8D 34 50			sta A8LIBSTR.STRAI.PS+1
  2500 2FF2 AD 12 5B			lda BL
  2501 2FF5 8D 35 50			sta A8LIBSTR.STRAI.BS
  2502 2FF8 20 F2 28			jsr A8LIBSTR.STRAI
  2503
  2504 				; optimize OK (A8LIBWIN), line = 392
  2505
  2506 2FFB AC 0D 5A			ldy BN
  2507 2FFE B9 72 51			lda adr.BAW.BI,y
  2508 3001 C9 01			cmp #$01
  2509 3003 F0 07			jeq l_0D31x
  2510 3005 AD 10 5A			lda BI
  2511 3008 C9 01			cmp #$01
  2512 300A D0 13			jne l_0D31
  2513 300C			l_0D31x
  2514
  2515 				; optimize OK (A8LIBWIN), line = 394
  2516
  2517 300C A9 17			lda <adr.CL+$01
  2518 300E 8D 2E 50			sta A8LIBSTR.STRINV.PS
  2519 3011 A9 5B			lda >adr.CL+$01
  2520 3013 8D 2F 50			sta A8LIBSTR.STRINV.PS+1
  2521 3016 AD 12 5B			lda BL
  2522 3019 8D 30 50			sta A8LIBSTR.STRINV.BS
  2523 301C 20 BF 28			jsr A8LIBSTR.STRINV
  2524 301F			l_0D31
  2525
  2526 				; optimize OK (A8LIBWIN), line = 398
  2527
  2528 301F A5 58			lda $0058
  2529 3021 85 9D			sta :STACKORIGIN+9
  2530 3023 A5 59			lda $0058+1
  2531 3025 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2532 3027 AC 0D 5A			ldy BN
  2533 302A B9 51 51			lda adr.BAW.BY,y
  2534 302D 20 B2 26			jsr @mul40
  2535 3030 18 65 9D			add :STACKORIGIN+9
  2536 3033 85 9D			sta :STACKORIGIN+9
  2537 3035 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  2538 3037 65 85			adc :eax+1
  2539 3039 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2540 303B AC 0D 5A			ldy BN
  2541 303E A5 9D			lda :STACKORIGIN+9
  2542 3040 18 79 46 51			add adr.BAW.BX,y
  2543 3044 8D 14 5B			sta CS
  2544 3047 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  2545 3049 69 00			adc #$00
  2546 304B 8D 15 5B			sta CS+1
  2547
  2548 				; optimize OK (A8LIBWIN), line = 401
  2549
  2550 304E AD 0F 5A			lda Y
  2551 3051 20 B2 26			jsr @mul40
  2552 3054 18 6D 14 5B			add CS
  2553 3058 8D 14 5B			sta CS
  2554 305B AD 15 5B			lda CS+1
  2555 305E 65 85			adc :eax+1
  2556 3060 8D 15 5B			sta CS+1
  2557
  2558 				; optimize OK (A8LIBWIN), line = 404
  2559
  2560 3063 AD 0E 5A			lda X
  2561 3066 C9 FF			cmp #$FF
  2562 3068 F0 12			jeq l_0D6D
  2563
  2564 				; optimize OK (A8LIBWIN), line = 407
  2565
  2566 306A AD 14 5B			lda CS
  2567 306D 18 6D 0E 5A			add X
  2568 3071 8D 14 5B			sta CS
  2569 3074 90 03			scc
  2570 3076 EE 15 5B			inc CS+1
  2571 3079 4C B6 30			jmp l_0D7A
  2572 307C			l_0D6D
  2573
  2574 				; optimize OK (A8LIBWIN), line = 411
  2575
  2576 307C AC 0D 5A			ldy BN
  2577 307F B9 5C 51			lda adr.BAW.BW,y
  2578 3082 38 ED 12 5B			sub BL
  2579 3086 85 84			sta :eax
  2580 3088 A9 00			lda #$00
  2581 308A E9 00			sbc #$00
  2582 308C 85 85			sta :eax+1
  2583 308E A9 00			lda #$00
  2584 3090 E9 00			sbc #$00
  2585 3092 85 86			sta :eax+2
  2586 3094 A9 00			lda #$00
  2587 3096 E9 00			sbc #$00
  2588 3098 85 87			sta :eax+3
  2589 309A A9 02			lda #$02
  2590 309C 85 8C			sta :ecx
  2591 309E A9 00			lda #$00
  2592 30A0 85 8D			sta :ecx+1
  2593 30A2 20 81 26			jsr idivEAX_CX
  2594 30A5 AD 14 5B			lda CS
  2595 30A8 18 65 84			add :eax
  2596 30AB 8D 14 5B			sta CS
  2597 30AE AD 15 5B			lda CS+1
  2598 30B1 65 85			adc :eax+1
  2599 30B3 8D 15 5B			sta CS+1
  2600 30B6			l_0D7A
  2601
  2602 				; optimize OK (A8LIBWIN), line = 415
  2603
  2604 30B6 A9 17			lda <adr.CL+$01
  2605 30B8 85 88			sta SYSTEM.MOVE_048D.SOURCE
  2606 30BA A9 5B			lda >adr.CL+$01
  2607 30BC 85 89			sta SYSTEM.MOVE_048D.SOURCE+1
  2608 30BE AD 14 5B			lda CS
  2609 30C1 85 8C			sta SYSTEM.MOVE_048D.DEST
  2610 30C3 AD 15 5B			lda CS+1
  2611 30C6 85 8D			sta SYSTEM.MOVE_048D.DEST+1
  2612 30C8 AD 12 5B			lda BL
  2613 30CB 85 84			sta SYSTEM.MOVE_048D.COUNT
  2614 30CD A9 00			lda #$00
  2615 30CF 85 85			sta SYSTEM.MOVE_048D.COUNT+1
  2616 30D1				.local +MAIN.SYSTEM.MOVE_048D
  2617 30D1				m@INLINE
Macro: MAIN.SYSTEM.MOVE_048D.M@INLINE [Source: appdemo.a65]
     4 30D1 20 78 25			jsr @move
Source: appdemo.a65
  2618 					.endl
  2619
  2620 				; optimize OK (A8LIBWIN), line = 418
  2621
  2622 30D4 A9 00			lda #$00
  2623 30D6 8D 11 5B			sta RESULT
  2624 30D9			l_0CB2
  2625 30D9			@exit
  2626
  2627 				; ------------------------------------------------------------
  2628
  2629 = 5A0D			BN	= DATAORIGIN+$09F9
  2630 = 5A0E			X	= DATAORIGIN+$09FA
  2631 = 5A0F			Y	= DATAORIGIN+$09FB
  2632 = 5A10			BI	= DATAORIGIN+$09FC
  2633 = 5A11			adr.PS	= [DATAORIGIN+$09FD] .array [256]
  2634 30D9			.var PS	= adr.PS .word
  2635 = 5B11			RESULT	= DATAORIGIN+$0AFD
  2636 = 5B12			BL	= DATAORIGIN+$0AFE
  2637 = 5B13			TMP	= DATAORIGIN+$0AFF
  2638 = 5B14			CS	= DATAORIGIN+$0B00
  2639 = 5B16			adr.CL	= [DATAORIGIN+$0B02] .array [130]
  2640 30D9			.var CL	= adr.CL .word
  2641
  2642 = 5A0D			@VarData	= BN
  2643 = 018A			@VarDataSize	= 394
  2644
  2645 30D9 60				rts						; ret
  2646 = 30DA 11 5A		PS
  2646 = 30DC 16 5B		CL
  2646 				.endl
  2647
  2648 30DE			.local	WORN						; FUNCTION
  2649
  2650 				; ------------------------------------------------------------
  2651
  2652 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
  2653 				; as Pointer
  2654 30DE B5 94			lda :STACKORIGIN,x
  2655 30E0 8D 98 5B			sta BN
  2656 30E3 CA				dex
  2657 30E4 30 2D			jmi @main
  2658
  2659 				; ------------------------------------------------------------
  2660
  2661 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
  2662 				; as Pointer
  2663 30E6 B5 94			lda :STACKORIGIN,x
  2664 30E8 8D 99 5B			sta BT
  2665 30EB CA				dex
  2666 30EC 30 25			jmi @main
  2667
  2668 				; ------------------------------------------------------------
  2669
  2670 				; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
  2671 				; as Pointer
  2672 30EE B5 94			lda :STACKORIGIN,x
  2673 30F0 8D 9A 5B			sta BL
  2674 30F3 CA				dex
  2675 30F4 30 1D			jmi @main
  2676
  2677 				; ------------------------------------------------------------
  2678
  2679 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  2680 				; as Pointer
  2681 30F6 B5 94			lda :STACKORIGIN,x
  2682 30F8 85 82			sta :bp2
  2683 30FA B5 A4			lda :STACKORIGIN+STACKWIDTH,x
  2684 30FC 85 83			sta :bp2+1
  2685 30FE A0 00			ldy #$00
  2686 3100 B1 82 99 9B 5B C8 + 	mva:rne (:bp2),y adr.PS,y+
  2687 3108 A9 9B 8D FA 32 A9 + 	mwa #adr.PS PS
  2688 3112 CA				dex
  2689 3113			@main
  2690
  2691 				; optimize OK (A8LIBWIN), line = 440
  2692
  2693 3113 A9 65			lda #$65
  2694 3115 8D 9B 5C			sta RESULT
  2695
  2696 				; optimize OK (A8LIBWIN), line = 443
  2697
  2698 3118 AC 98 5B			ldy BN
  2699 311B B9 3B 51			lda adr.BAW.BU,y
  2700 311E C9 01			cmp #$01
  2701 3120 F0 03 4C F9 32		jne l_0DC2
  2702
  2703 				; optimize OK (A8LIBWIN), line = 446
  2704
  2705 3125 AD 9B 5B			lda adr.PS
  2706 3128 18 69 02			add #$02
  2707 312B 8D 9C 5C			sta BS
  2708
  2709 				; optimize OK (A8LIBWIN), line = 447
  2710
  2711 312E AD FC 32			lda CL
  2712 3131 85 88			sta SYSTEM.SETLENGTH.S
  2713 3133 AD FD 32			lda CL+1
  2714 3136 85 89			sta SYSTEM.SETLENGTH.S+1
  2715 3138 AD 9C 5C			lda BS
  2716 313B 85 8C			sta SYSTEM.SETLENGTH.LEN
  2717 313D 20 83 27			jsr SYSTEM.SETLENGTH
  2718
  2719 				; optimize OK (A8LIBWIN), line = 448
  2720
  2721 3140 A9 04			lda #$04
  2722 3142 8D A0 5C			sta adr.CL+$01
  2723
  2724 				; optimize OK (A8LIBWIN), line = 449
  2725
  2726 3145 AD 9B 5B			lda adr.PS
  2727 3148 85 84			sta SYSTEM.MOVE_048D.COUNT
  2728 314A A9 A1			lda <adr.CL+$02
  2729 314C 85 8C			sta SYSTEM.MOVE_048D.DEST
  2730 314E A9 5C			lda >adr.CL+$02
  2731 3150 85 8D			sta SYSTEM.MOVE_048D.DEST+1
  2732 3152 A9 9C			lda <adr.PS+$01
  2733 3154 85 88			sta SYSTEM.MOVE_048D.SOURCE
  2734 3156 A9 5B			lda >adr.PS+$01
  2735 3158 85 89			sta SYSTEM.MOVE_048D.SOURCE+1
  2736 315A A9 00			lda #$00
  2737 315C 85 85			sta SYSTEM.MOVE_048D.COUNT+1
  2738 315E				.local +MAIN.SYSTEM.MOVE_048D
  2739 315E				m@INLINE
Macro: MAIN.SYSTEM.MOVE_048D.M@INLINE [Source: appdemo.a65]
     4 315E 20 78 25			jsr @move
Source: appdemo.a65
  2740 					.endl
  2741
  2742 				; optimize OK (A8LIBWIN), line = 450
  2743
  2744 3161 AC 9C 5C			ldy BS
  2745 3164 A9 01			lda #$01
  2746 3166 99 9F 5C			sta adr.CL,y
  2747
  2748 				; optimize OK (A8LIBWIN), line = 453
  2749
  2750 3169 A9 A0			lda <adr.CL+$01
  2751 316B 8D 33 50			sta A8LIBSTR.STRAI.PS
  2752 316E A9 5C			lda >adr.CL+$01
  2753 3170 8D 34 50			sta A8LIBSTR.STRAI.PS+1
  2754 3173 AD 9C 5C			lda BS
  2755 3176 8D 35 50			sta A8LIBSTR.STRAI.BS
  2756 3179 20 F2 28			jsr A8LIBSTR.STRAI
  2757
  2758 				; optimize OK (A8LIBWIN), line = 456
  2759
  2760 317C AC 98 5B			ldy BN
  2761 317F B9 72 51			lda adr.BAW.BI,y
  2762 3182 C9 01			cmp #$01
  2763 3184 D0 16			jne l_0DF9
  2764
  2765 				; optimize OK (A8LIBWIN), line = 458
  2766
  2767 3186 A9 A0			lda <adr.CL+$01
  2768 3188 8D 2E 50			sta A8LIBSTR.STRINV.PS
  2769 318B A9 5C			lda >adr.CL+$01
  2770 318D 8D 2F 50			sta A8LIBSTR.STRINV.PS+1
  2771 3190 AD 9C 5C			lda BS
  2772 3193 8D 30 50			sta A8LIBSTR.STRINV.BS
  2773 3196 20 BF 28			jsr A8LIBSTR.STRINV
  2774 3199 4C B2 31			jmp l_0E08
  2775 319C			l_0DF9
  2776
  2777 				; optimize OK (A8LIBWIN), line = 463
  2778
  2779 319C AD 9C 5C			lda BS
  2780 319F 38 E9 02			sub #$02
  2781 31A2 8D 30 50			sta A8LIBSTR.STRINV.BS
  2782 31A5 A9 A1			lda <adr.CL+$02
  2783 31A7 8D 2E 50			sta A8LIBSTR.STRINV.PS
  2784 31AA A9 5C			lda >adr.CL+$02
  2785 31AC 8D 2F 50			sta A8LIBSTR.STRINV.PS+1
  2786 31AF 20 BF 28			jsr A8LIBSTR.STRINV
  2787 31B2			l_0E08
  2788
  2789 				; optimize OK (A8LIBWIN), line = 467
  2790
  2791 31B2 A5 58			lda $0058
  2792 31B4 85 9D			sta :STACKORIGIN+9
  2793 31B6 A5 59			lda $0058+1
  2794 31B8 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2795 31BA AC 98 5B			ldy BN
  2796 31BD B9 51 51			lda adr.BAW.BY,y
  2797 31C0 20 B2 26			jsr @mul40
  2798 31C3 18 65 9D			add :STACKORIGIN+9
  2799 31C6 8D 9D 5C			sta CS
  2800 31C9 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  2801 31CB 65 85			adc :eax+1
  2802 31CD 8D 9E 5C			sta CS+1
  2803
  2804 				; optimize OK (A8LIBWIN), line = 470
  2805
  2806 31D0 AD 99 5B			lda BT
  2807 31D3 C9 F2			cmp #$F2
  2808 31D5 D0 1B			jne l_0E35
  2809
  2810 				; optimize OK (A8LIBWIN), line = 472
  2811
  2812 31D7 AC 98 5B			ldy BN
  2813 31DA B9 67 51			lda adr.BAW.BH,y
  2814 31DD 38 E9 01			sub #$01
  2815 31E0 20 B2 26			jsr @mul40
  2816 31E3 18 6D 9D 5C			add CS
  2817 31E7 8D 9D 5C			sta CS
  2818 31EA AD 9E 5C			lda CS+1
  2819 31ED 65 85			adc :eax+1
  2820 31EF 8D 9E 5C			sta CS+1
  2821 31F2			l_0E35
  2822
  2823 				; optimize OK (A8LIBWIN), line = 476
  2824
  2825 31F2 AD 9A 5B			lda BL
  2826 31F5 C9 FB			cmp #$FB
  2827 31F7 D0 25			jne l_0E58
  2828
  2829 				; optimize OK (A8LIBWIN), line = 478
  2830
  2831 31F9 AC 98 5B			ldy BN
  2832 31FC B9 46 51			lda adr.BAW.BX,y
  2833 31FF 18 69 01			add #$01
  2834 3202 85 9D			sta :STACKORIGIN+9
  2835 3204 A9 00			lda #$00
  2836 3206 69 00			adc #$00
  2837 3208 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2838 320A AD 9D 5C			lda CS
  2839 320D 18 65 9D			add :STACKORIGIN+9
  2840 3210 8D 9D 5C			sta CS
  2841 3213 AD 9E 5C			lda CS+1
  2842 3216 65 AD			adc :STACKORIGIN+STACKWIDTH+9
  2843 3218 8D 9E 5C			sta CS+1
  2844 321B 4C D6 32			jmp l_0E6C
  2845 321E			l_0E58
  2846
  2847 				; optimize OK (A8LIBWIN), line = 481
  2848
  2849 321E AD 9A 5B			lda BL
  2850 3221 C9 FC			cmp #$FC
  2851 3223 D0 65			jne l_0E7E
  2852
  2853 				; optimize OK (A8LIBWIN), line = 483
  2854
  2855 3225 AC 98 5B			ldy BN
  2856 3228 B9 46 51			lda adr.BAW.BX,y
  2857 322B 18 79 5C 51			add adr.BAW.BW,y
  2858 322F 85 9D			sta :STACKORIGIN+9
  2859 3231 A9 00			lda #$00
  2860 3233 69 00			adc #$00
  2861 3235 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2862 3237 A9 00			lda #$00
  2863 3239 69 00			adc #$00
  2864 323B 85 BD			sta :STACKORIGIN+STACKWIDTH*2+9
  2865 323D A9 00			lda #$00
  2866 323F 69 00			adc #$00
  2867 3241 85 CD			sta :STACKORIGIN+STACKWIDTH*3+9
  2868 3243 A5 9D			lda :STACKORIGIN+9
  2869 3245 38 ED 9C 5C			sub BS
  2870 3249 85 9D			sta :STACKORIGIN+9
  2871 324B A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  2872 324D E9 00			sbc #$00
  2873 324F 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2874 3251 A5 BD			lda :STACKORIGIN+STACKWIDTH*2+9
  2875 3253 E9 00			sbc #$00
  2876 3255 85 BD			sta :STACKORIGIN+STACKWIDTH*2+9
  2877 3257 A5 CD			lda :STACKORIGIN+STACKWIDTH*3+9
  2878 3259 E9 00			sbc #$00
  2879 325B 85 CD			sta :STACKORIGIN+STACKWIDTH*3+9
  2880 325D A5 9D			lda :STACKORIGIN+9
  2881 325F 38 E9 01			sub #$01
  2882 3262 85 9D			sta :STACKORIGIN+9
  2883 3264 A5 AD			lda :STACKORIGIN+STACKWIDTH+9
  2884 3266 E9 00			sbc #$00
  2885 3268 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2886 326A A5 BD			lda :STACKORIGIN+STACKWIDTH*2+9
  2887 326C E9 00			sbc #$00
  2888 326E 85 BD			sta :STACKORIGIN+STACKWIDTH*2+9
  2889 3270 A5 CD			lda :STACKORIGIN+STACKWIDTH*3+9
  2890 3272 E9 00			sbc #$00
  2891 3274 85 CD			sta :STACKORIGIN+STACKWIDTH*3+9
  2892 3276 AD 9D 5C			lda CS
  2893 3279 18 65 9D			add :STACKORIGIN+9
  2894 327C 8D 9D 5C			sta CS
  2895 327F AD 9E 5C			lda CS+1
  2896 3282 65 AD			adc :STACKORIGIN+STACKWIDTH+9
  2897 3284 8D 9E 5C			sta CS+1
  2898 3287 4C D6 32			jmp l_0EA1
  2899 328A			l_0E7E
  2900
  2901 				; optimize OK (A8LIBWIN), line = 487
  2902
  2903 328A AC 98 5B			ldy BN
  2904 328D B9 46 51			lda adr.BAW.BX,y
  2905 3290 85 9D			sta :STACKORIGIN+9
  2906 3292 B9 5C 51			lda adr.BAW.BW,y
  2907 3295 38 ED 9C 5C			sub BS
  2908 3299 85 84			sta :eax
  2909 329B A9 00			lda #$00
  2910 329D E9 00			sbc #$00
  2911 329F 85 85			sta :eax+1
  2912 32A1 A9 00			lda #$00
  2913 32A3 E9 00			sbc #$00
  2914 32A5 85 86			sta :eax+2
  2915 32A7 A9 00			lda #$00
  2916 32A9 E9 00			sbc #$00
  2917 32AB 85 87			sta :eax+3
  2918 32AD A9 02			lda #$02
  2919 32AF 85 8C			sta :ecx
  2920 32B1 A9 00			lda #$00
  2921 32B3 85 8D			sta :ecx+1
  2922 32B5 20 81 26			jsr idivEAX_CX
  2923 32B8 A5 9D			lda :STACKORIGIN+9
  2924 32BA 18 65 84			add :eax
  2925 32BD 85 9D			sta :STACKORIGIN+9
  2926 32BF A9 00			lda #$00
  2927 32C1 65 85			adc :eax+1
  2928 32C3 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  2929 32C5 AD 9D 5C			lda CS
  2930 32C8 18 65 9D			add :STACKORIGIN+9
  2931 32CB 8D 9D 5C			sta CS
  2932 32CE AD 9E 5C			lda CS+1
  2933 32D1 65 AD			adc :STACKORIGIN+STACKWIDTH+9
  2934 32D3 8D 9E 5C			sta CS+1
  2935 32D6			l_0EA1
  2936 32D6			l_0E6C
  2937
  2938 				; optimize OK (A8LIBWIN), line = 491
  2939
  2940 32D6 A9 A0			lda <adr.CL+$01
  2941 32D8 85 88			sta SYSTEM.MOVE_048D.SOURCE
  2942 32DA A9 5C			lda >adr.CL+$01
  2943 32DC 85 89			sta SYSTEM.MOVE_048D.SOURCE+1
  2944 32DE AD 9D 5C			lda CS
  2945 32E1 85 8C			sta SYSTEM.MOVE_048D.DEST
  2946 32E3 AD 9E 5C			lda CS+1
  2947 32E6 85 8D			sta SYSTEM.MOVE_048D.DEST+1
  2948 32E8 AD 9C 5C			lda BS
  2949 32EB 85 84			sta SYSTEM.MOVE_048D.COUNT
  2950 32ED A9 00			lda #$00
  2951 32EF 85 85			sta SYSTEM.MOVE_048D.COUNT+1
  2952 32F1				.local +MAIN.SYSTEM.MOVE_048D
  2953 32F1				m@INLINE
Macro: MAIN.SYSTEM.MOVE_048D.M@INLINE [Source: appdemo.a65]
     4 32F1 20 78 25			jsr @move
Source: appdemo.a65
  2954 					.endl
  2955
  2956 				; optimize OK (A8LIBWIN), line = 494
  2957
  2958 32F4 A9 00			lda #$00
  2959 32F6 8D 9B 5C			sta RESULT
  2960 32F9			l_0DC2
  2961 32F9			@exit
  2962
  2963 				; ------------------------------------------------------------
  2964
  2965 = 5B98			BN	= DATAORIGIN+$0B84
  2966 = 5B99			BT	= DATAORIGIN+$0B85
  2967 = 5B9A			BL	= DATAORIGIN+$0B86
  2968 = 5B9B			adr.PS	= [DATAORIGIN+$0B87] .array [256]
  2969 32F9			.var PS	= adr.PS .word
  2970 = 5C9B			RESULT	= DATAORIGIN+$0C87
  2971 = 5C9C			BS	= DATAORIGIN+$0C88
  2972 = 5C9D			CS	= DATAORIGIN+$0C89
  2973 = 5C9F			adr.CL	= [DATAORIGIN+$0C8B] .array [37]
  2974 32F9			.var CL	= adr.CL .word
  2975
  2976 = 5B98			@VarData	= BN
  2977 = 012B			@VarDataSize	= 299
  2978
  2979 32F9 60				rts						; ret
  2980 = 32FA 9B 5B		PS
  2980 = 32FC 9F 5C		CL
  2980 				.endl
  2981
  2982 				; ------------------------------------------------------------
  2983
  2984 = 513B			adr.BAW	= DATAORIGIN+$0127	; [110] RECORD
  2985 32FE			.var BAW	= adr.BAW .word
  2986 = 513B			adr.BAW.BU	= [DATAORIGIN+$0127] .array [11]
  2987 32FE			.var BAW.BU	= adr.BAW.BU .word
  2988 = 5146			adr.BAW.BX	= [DATAORIGIN+$0132] .array [11]
  2989 32FE			.var BAW.BX	= adr.BAW.BX .word
  2990 = 5151			adr.BAW.BY	= [DATAORIGIN+$013D] .array [11]
  2991 32FE			.var BAW.BY	= adr.BAW.BY .word
  2992 = 515C			adr.BAW.BW	= [DATAORIGIN+$0148] .array [11]
  2993 32FE			.var BAW.BW	= adr.BAW.BW .word
  2994 = 5167			adr.BAW.BH	= [DATAORIGIN+$0153] .array [11]
  2995 32FE			.var BAW.BH	= adr.BAW.BH .word
  2996 = 5172			adr.BAW.BI	= [DATAORIGIN+$015E] .array [11]
  2997 32FE			.var BAW.BI	= adr.BAW.BI .word
  2998 = 517D			adr.BAW.CM	= [DATAORIGIN+$0169] .array [11] .word
  2999 32FE			.var BAW.CM	= adr.BAW.CM .word
  3000 = 5193			adr.BAW.CZ	= [DATAORIGIN+$017F] .array [11] .word
  3001 32FE			.var BAW.CZ	= adr.BAW.CZ .word
  3002 = 51A9			adr.VCUR	= DATAORIGIN+$0195	; [2] RECORD
  3003 32FE			.var VCUR	= adr.VCUR .word
  3004 = 51A9			VCUR.VX	= DATAORIGIN+$0195
  3005 = 51AA			VCUR.VY	= DATAORIGIN+$0196
  3006 = 51AB			adr.BAWM	= [DATAORIGIN+$0197] .array [2068]
  3007 32FE			.var BAWM	= adr.BAWM .word
  3008 = 59BF			CPWM	= DATAORIGIN+$09AB
  3009
  3010 = 32FE 3B 51		BAW
  3010 = 3300 3B 51		BAW.BU
  3010 = 3302 46 51		BAW.BX
  3010 = 3304 51 51		BAW.BY
  3010 = 3306 5C 51		BAW.BW
  3010 = 3308 67 51		BAW.BH
  3010 = 330A 72 51		BAW.BI
  3010 = 330C 7D 51		BAW.CM
  3010 = 330E 93 51		BAW.CZ
  3010 = 3310 A9 51		VCUR
  3010 = 3312 AB 51		BAWM
  3010 				.endl							; UNIT A8LIBWIN
  3011
  3012 				; ------------------------------------------------------------
  3013
  3014 3314			.local	A8LIBGADG					; UNIT
  3015
  3016 3314			.local	GALERT						; PROCEDURE
  3017
  3018 				; ------------------------------------------------------------
  3019
  3020 				; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
  3021 				; as Pointer
  3022 3314 B5 94			lda :STACKORIGIN,x
  3023 3316 85 82			sta :bp2
  3024 3318 B5 A4			lda :STACKORIGIN+STACKWIDTH,x
  3025 331A 85 83			sta :bp2+1
  3026 331C A0 00			ldy #$00
  3027 331E B1 82 99 C4 5C C8 + 	mva:rne (:bp2),y adr.PS,y+
  3028 3326 A9 C4 8D FA 33 A9 + 	mwa #adr.PS PS
  3029 3330 CA				dex
  3030 3331			@main
  3031
  3032 				; optimize OK (A8LIBGADG), line = 54
  3033
  3034 3331 AD C4 5C			lda adr.PS
  3035 3334 8D C5 5D			sta BL
  3036
  3037 				; optimize OK (A8LIBGADG), line = 55
  3038
  3039 3337 A9 26			lda #$26
  3040 3339 38 ED C5 5D			sub BL
  3041 333D 85 84			sta :eax
  3042 333F A9 00			lda #$00
  3043 3341 E9 00			sbc #$00
  3044 3343 85 85			sta :eax+1
  3045 3345 A9 00			lda #$00
  3046 3347 E9 00			sbc #$00
  3047 3349 85 86			sta :eax+2
  3048 334B A9 00			lda #$00
  3049 334D E9 00			sbc #$00
  3050 334F 85 87			sta :eax+3
  3051 3351 A9 02			lda #$02
  3052 3353 85 8C			sta :ecx
  3053 3355 A9 00			lda #$00
  3054 3357 85 8D			sta :ecx+1
  3055 3359 20 81 26			jsr idivEAX_CX
  3056 335C A5 84			lda :eax
  3057 335E 8D C6 5D			sta X
  3058
  3059 				; optimize OK (A8LIBGADG), line = 58
  3060
  3061 3361 AD C5 5D			lda BL
  3062 3364 18 69 02			add #$02
  3063 3367 8D C5 59			sta A8LIBWIN.WOPEN.W
  3064 336A AD C6 5D			lda X
  3065 336D 8D C3 59			sta A8LIBWIN.WOPEN.X
  3066 3370 A9 0A			lda #$0A
  3067 3372 8D C4 59			sta A8LIBWIN.WOPEN.Y
  3068 3375 A9 05			lda #$05
  3069 3377 8D C6 59			sta A8LIBWIN.WOPEN.H
  3070 337A A9 00			lda #$00
  3071 337C 8D C7 59			sta A8LIBWIN.WOPEN.BT
  3072 337F 20 50 2B			jsr A8LIBWIN.WOPEN
  3073 3382 AD C8 59			lda A8LIBWIN.WOPEN.RESULT
  3074 3385 8D C4 5D			sta BW
  3075
  3076 				; optimize FAIL ('A8LIBWIN.WORN', A8LIBGADG), line = 59
  3077
  3078 3388 E8				inx
  3079 3389 A9 19 95 94			mva #$19 :STACKORIGIN,x
  3080 338D A9 20 95 A4			mva #$20 :STACKORIGIN+STACKWIDTH,x
  3081 3391 E8				inx
  3082 3392 A9 FF 95 94			mva #$FF :STACKORIGIN,x
  3083 3396 E8				inx
  3084 3397 A9 F1 95 94			mva #$F1 :STACKORIGIN,x
  3085 339B E8				inx
  3086 339C AD C4 5D 95 94		mva BW :STACKORIGIN,x
  3087 33A1 20 DE 30			jsr A8LIBWIN.WORN
  3088
  3089 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 60
  3090
  3091 33A4 E8				inx
  3092 33A5 AD FA 33 95 94		mva PS :STACKORIGIN,x
  3093 33AA AD FB 33 95 A4		mva PS+1 :STACKORIGIN+STACKWIDTH,x
  3094 33AF E8				inx
  3095 33B0 A9 00 95 94			mva #$00 :STACKORIGIN,x
  3096 33B4 E8				inx
  3097 33B5 A9 01 95 94			mva #$01 :STACKORIGIN,x
  3098 33B9 E8				inx
  3099 33BA A9 FF 95 94			mva #$FF :STACKORIGIN,x
  3100 33BE E8				inx
  3101 33BF AD C4 5D 95 94		mva BW :STACKORIGIN,x
  3102 33C4 20 F7 2E			jsr A8LIBWIN.WPRINT
  3103
  3104 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 61
  3105
  3106 33C7 E8				inx
  3107 33C8 A9 21 95 94			mva #$21 :STACKORIGIN,x
  3108 33CC A9 20 95 A4			mva #$20 :STACKORIGIN+STACKWIDTH,x
  3109 33D0 E8				inx
  3110 33D1 A9 01 95 94			mva #$01 :STACKORIGIN,x
  3111 33D5 E8				inx
  3112 33D6 A9 03 95 94			mva #$03 :STACKORIGIN,x
  3113 33DA E8				inx
  3114 33DB A9 FF 95 94			mva #$FF :STACKORIGIN,x
  3115 33DF E8				inx
  3116 33E0 AD C4 5D 95 94		mva BW :STACKORIGIN,x
  3117 33E5 20 F7 2E			jsr A8LIBWIN.WPRINT
  3118
  3119 				; optimize OK (A8LIBGADG), line = 64
  3120
  3121 33E8 A9 00			lda #$00
  3122 33EA 20 0B 28			jsr A8LIBMISC.WAITKCX
  3123 33ED AD 28 50			lda A8LIBMISC.WAITKCX.RESULT
  3124 33F0 8D C6 5D			sta X
  3125
  3126 				; optimize OK (A8LIBGADG), line = 67
  3127
  3128 33F3 AD C4 5D			lda BW
  3129 33F6 20 25 2D			jsr A8LIBWIN.WCLOSE
  3130
  3131 				; ------------------------------------------------------------
  3132
  3133 = 5CC4			adr.PS	= [DATAORIGIN+$0CB0] .array [256]
  3134 33F9			.var PS	= adr.PS .word
  3135 = 5DC4			BW	= DATAORIGIN+$0DB0
  3136 = 5DC5			BL	= DATAORIGIN+$0DB1
  3137 = 5DC6			X	= DATAORIGIN+$0DB2
  3138
  3139 = 33FA			@VarData	= PS
  3140 = 0103			@VarDataSize	= 259
  3141
  3142 33F9			@exit
  3143 					.ifdef @new
  3144 					lda <@VarData
  3145 					sta :ztmp
  3146 					lda >@VarData
  3147 					ldy #@VarDataSize-1
  3148 					jmp @FreeMem
  3149 					els
  3150 33F9 60				rts						; ret
  3151 					eif
  3152 = 33FA C4 5C		PS
  3152 				.endl
  3153
  3154 33FC			.local	GPROG						; PROCEDURE
  3155
  3156 				; optimize OK (A8LIBGADG), line = 86
  3157
  3158 33FC A9 14			lda #$14
  3159 33FE 20 65 27			jsr SYSTEM.SPACE
  3160 3401 E8				inx
  3161 3402 AD 20 50			lda SYSTEM.SPACE.RESULT
  3162 3405 85 88			sta @move.src
  3163 3407 AD 21 50			lda SYSTEM.SPACE.RESULT+1
  3164 340A 85 89			sta @move.src+1
  3165 					@moveSTRING CL #22
  3165 				 MWA CL @MOVE.DST\ MWA #22 @MOVE.CNT\ JSR @MOVESTRING
  3165 340C AD 7E 34 85 8C AD +  MWA CL @MOVE.DST
  3165 3416 A9 16 85 84 A9 00 +  MWA #22 @MOVE.CNT
  3165 341E 20 15 26		 JSR @MOVESTRING
  3166 3421 CA				dex
  3167
  3168 				; optimize OK (A8LIBGADG), line = 90
  3169
  3170 3422 AD CA 5D			lda BS
  3171 3425 85 84			sta :eax
  3172 3427 4A				lsr @
  3173 3428 69 0D			adc #$0d
  3174 342A 65 84			adc :eax
  3175 342C 6A				ror @
  3176 342D 4A				lsr @
  3177 342E 4A				lsr @
  3178 342F 65 84			adc :eax
  3179 3431 6A				ror @
  3180 3432 65 84			adc :eax
  3181 3434 6A				ror @
  3182 3435 4A				lsr @
  3183 3436 4A				lsr @
  3184 3437 8D CB 5D			sta IL
  3185 343A A9 00			lda #$00
  3186 343C 8D CC 5D			sta IL+1
  3187
  3188 				; optimize OK (A8LIBGADG), line = 91
  3189
  3190 343F A9 CE			lda <adr.CL+$01
  3191 3441 85 88			sta SYSTEM.FILLCHAR_048B.A
  3192 3443 A9 5D			lda >adr.CL+$01
  3193 3445 85 89			sta SYSTEM.FILLCHAR_048B.A+1
  3194 3447 AD CB 5D			lda IL
  3195 344A 85 8C			sta SYSTEM.FILLCHAR_048B.COUNT
  3196 344C AD CC 5D			lda IL+1
  3197 344F 85 8D			sta SYSTEM.FILLCHAR_048B.COUNT+1
  3198 3451 A9 A0			lda #$A0
  3199 3453 85 84			sta SYSTEM.FILLCHAR_048B.VALUE
  3200 3455				.local +MAIN.SYSTEM.FILLCHAR_048B
  3201 3455				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_048B.M@INLINE [Source: appdemo.a65]
     4 3455 20 CD 25			jsr @fill
Source: appdemo.a65
  3202 					.endl
  3203
  3204 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 94
  3205
  3206 3458 E8				inx
  3207 3459 AD 7E 34 95 94		mva CL :STACKORIGIN,x
  3208 345E AD 7F 34 95 A4		mva CL+1 :STACKORIGIN+STACKWIDTH,x
  3209 3463 E8				inx
  3210 3464 A9 00 95 94			mva #$00 :STACKORIGIN,x
  3211 3468 E8				inx
  3212 3469 AD C9 5D 95 94		mva Y :STACKORIGIN,x
  3213 346E E8				inx
  3214 346F AD C8 5D 95 94		mva X :STACKORIGIN,x
  3215 3474 E8				inx
  3216 3475 AD C7 5D 95 94		mva BN :STACKORIGIN,x
  3217 347A 20 F7 2E			jsr A8LIBWIN.WPRINT
  3218
  3219 				; ------------------------------------------------------------
  3220
  3221 = 5DC7			BN	= DATAORIGIN+$0DB3
  3222 = 5DC8			X	= DATAORIGIN+$0DB4
  3223 = 5DC9			Y	= DATAORIGIN+$0DB5
  3224 = 5DCA			BS	= DATAORIGIN+$0DB6
  3225 = 5DCB			IL	= DATAORIGIN+$0DB7
  3226 = 5DCD			adr.CL	= [DATAORIGIN+$0DB9] .array [22]
  3227 347D			.var CL	= adr.CL .word
  3228
  3229 = 5DC7			@VarData	= BN
  3230 = 001C			@VarDataSize	= 28
  3231
  3232 347D			@exit
  3233 					.ifdef @new
  3234 					lda <@VarData
  3235 					sta :ztmp
  3236 					lda >@VarData
  3237 					ldy #@VarDataSize-1
  3238 					jmp @FreeMem
  3239 					els
  3240 347D 60				rts						; ret
  3241 					eif
  3242 = 347E CD 5D		CL
  3242 				.endl
  3243
  3244 3480			.local	GBUTTON						; FUNCTION
  3245
  3246 				; optimize OK (A8LIBGADG), line = 115
  3247
  3248 3480 A9 00			lda #$00
  3249 3482 8D EB 5D			sta BF
  3250
  3251 				; optimize OK (A8LIBGADG), line = 118
  3252
  3253 3485 AD E6 5D			lda BD
  3254 3488 8D EA 5D			sta RESULT
  3255
  3256 				; --- WhileProlog
  3257 348B 4C 08 36			jmp l_0F49
  3258 348E			l_0F4A
  3259
  3260 				; optimize OK (A8LIBGADG), line = 124
  3261
  3262 348E A9 00			lda #$00
  3263 3490 8D EE 5D			sta BP
  3264
  3265 				; optimize OK (A8LIBGADG), line = 127
  3266
  3267 3493 8D EC 5D			sta BL
  3268 3496 AC E7 5D			ldy BS
  3269 3499 88				dey
  3270 349A 8C 9E 34			sty @FORTMP_0F5A_0
  3271
  3272 349D			l_0F5D
  3273 				; --- ForToDoCondition
  3274 349D A9 00			lda @FORTMP_0F5A_0:#$00
  3275 349F CD EC 5D			cmp BL
  3276 34A2 B0 03 4C 73 35		jcc l_0F6B
  3277
  3278 				; optimize OK (A8LIBGADG), line = 130
  3279
  3280 34A7 AD EC 5D			lda BL
  3281 34AA 18 69 01			add #$01
  3282 34AD CD EA 5D			cmp RESULT
  3283 34B0 D0 49			jne l_0F83
  3284
  3285 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 132
  3286
  3287 34B2 E8				inx
  3288 34B3 AD EC 5D 95 94		mva BL :STACKORIGIN,x
  3289 34B8 A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3290 34BC				m@index2 0
Macro: M@INDEX2 [Source: macros.asm]
     1 34BC 16 94			asl :STACKORIGIN-0,x
     2 34BE 36 A4			rol :STACKORIGIN-0+STACKWIDTH,x
Source: appdemo.a65
  3291 34C0 AD 11 36			lda PA
  3292 34C3 18 75 94			add :STACKORIGIN,x
  3293 34C6 85 82			sta :bp2
  3294 34C8 AD 12 36			lda PA+1
  3295 34CB 75 A4			adc :STACKORIGIN+STACKWIDTH,x
  3296 34CD 85 83			sta :bp2+1
  3297 34CF A0 00			ldy #$00
  3298 34D1 B1 82 95 94			mva (:bp2),y :STACKORIGIN,x
  3299 34D5 C8				iny
  3300 34D6 B1 82 95 A4			mva (:bp2),y :STACKORIGIN+STACKWIDTH,x
  3301 34DA E8				inx
  3302 34DB A9 01 95 94			mva #$01 :STACKORIGIN,x
  3303 34DF E8				inx
  3304 34E0 AD E5 5D 95 94		mva Y :STACKORIGIN,x
  3305 34E5 E8				inx
  3306 34E6 AD E4 5D			lda X
  3307 34E9 18 6D EE 5D			add BP
  3308 34ED 95 94			sta :STACKORIGIN,x
  3309 34EF E8				inx
  3310 34F0 AD E3 5D 95 94		mva BN :STACKORIGIN,x
  3311 34F5 20 F7 2E			jsr A8LIBWIN.WPRINT
  3312 34F8 4C 41 35			jmp l_0FA3
  3313 34FB			l_0F83
  3314
  3315 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 135
  3316
  3317 34FB E8				inx
  3318 34FC AD EC 5D 95 94		mva BL :STACKORIGIN,x
  3319 3501 A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3320 3505				m@index2 0
Macro: M@INDEX2 [Source: macros.asm]
     1 3505 16 94			asl :STACKORIGIN-0,x
     2 3507 36 A4			rol :STACKORIGIN-0+STACKWIDTH,x
Source: appdemo.a65
  3321 3509 AD 11 36			lda PA
  3322 350C 18 75 94			add :STACKORIGIN,x
  3323 350F 85 82			sta :bp2
  3324 3511 AD 12 36			lda PA+1
  3325 3514 75 A4			adc :STACKORIGIN+STACKWIDTH,x
  3326 3516 85 83			sta :bp2+1
  3327 3518 A0 00			ldy #$00
  3328 351A B1 82 95 94			mva (:bp2),y :STACKORIGIN,x
  3329 351E C8				iny
  3330 351F B1 82 95 A4			mva (:bp2),y :STACKORIGIN+STACKWIDTH,x
  3331 3523 E8				inx
  3332 3524 A9 00 95 94			mva #$00 :STACKORIGIN,x
  3333 3528 E8				inx
  3334 3529 AD E5 5D 95 94		mva Y :STACKORIGIN,x
  3335 352E E8				inx
  3336 352F AD E4 5D			lda X
  3337 3532 18 6D EE 5D			add BP
  3338 3536 95 94			sta :STACKORIGIN,x
  3339 3538 E8				inx
  3340 3539 AD E3 5D 95 94		mva BN :STACKORIGIN,x
  3341 353E 20 F7 2E			jsr A8LIBWIN.WPRINT
  3342 3541			l_0FA3
  3343
  3344 				; optimize OK (A8LIBGADG), line = 139
  3345
  3346 3541 A9 00			lda #$00
  3347 3543 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  3348 3545 AD EC 5D			lda BL
  3349 3548 0A				asl @
  3350 3549 26 AD			rol :STACKORIGIN+STACKWIDTH+9
  3351 354B 18 6D 11 36			add PA
  3352 354F 85 82			sta :bp2
  3353 3551 AD 12 36			lda PA+1
  3354 3554 65 AD			adc :STACKORIGIN+STACKWIDTH+9
  3355 3556 85 83			sta :bp2+1
  3356 3558 A0 01			ldy #$01
  3357 355A B1 82			lda (:bp2),y
  3358 355C 85 81			sta :bp+1
  3359 355E 88				dey
  3360 355F B1 82			lda (:bp2),y
  3361 3561 A8				tay
  3362 3562 AD EE 5D			lda BP
  3363 3565 18 71 80			add (:bp),y
  3364 3568 8D EE 5D			sta BP
  3365
  3366 				; --- ForToDoEpilog
  3367 356B EE EC 5D			inc BL
  3368 356E F0 03 4C 9D 34		jne l_0F5D
  3369 3573			l_0F6B
  3370
  3371 				; optimize OK (A8LIBGADG), line = 143
  3372
  3373 3573 AD E6 5D			lda BD
  3374 3576 D0 08			jne l_0FD3
  3375
  3376 				; optimize OK (A8LIBGADG), line = 145
  3377
  3378 3578 A9 01			lda #$01
  3379 357A 8D EB 5D			sta BF
  3380 357D 4C 08 36			jmp l_0FE1
  3381 3580			l_0FD3
  3382
  3383 				; optimize OK (A8LIBGADG), line = 149
  3384
  3385 3580 A9 00			lda #$00
  3386 3582 20 0B 28			jsr A8LIBMISC.WAITKCX
  3387 3585 AD 28 50			lda A8LIBMISC.WAITKCX.RESULT
  3388 3588 8D ED 5D			sta BK
  3389
  3390 				; optimize OK (A8LIBGADG), line = 152
  3391
  3392 358B C9 86			cmp #$86
  3393 358D F0 0C			jeq l_101Cx
  3394 358F C9 06			cmp #$06
  3395 3591 F0 08			jeq l_101Cx
  3396 3593 C9 8E			cmp #$8E
  3397 3595 F0 04			jeq l_101Cx
  3398 3597 C9 0E			cmp #$0E
  3399 3599 D0 13			jne l_101C
  3400 359B			l_101Cx
  3401
  3402 				; optimize FAIL (0, A8LIBGADG), line = 155
  3403
  3404 359B CE EA 5D			dec RESULT
  3405
  3406 				; optimize OK (A8LIBGADG), line = 156
  3407
  3408 359E AD EA 5D			lda RESULT
  3409 35A1 C9 01			cmp #$01
  3410 35A3 B0 06			jcs l_1033
  3411
  3412 				; optimize OK (A8LIBGADG), line = 158
  3413
  3414 35A5 AD E7 5D			lda BS
  3415 35A8 8D EA 5D			sta RESULT
  3416 35AB			l_1033
  3417 35AB 4C 08 36			jmp l_1045
  3418 35AE			l_101C
  3419
  3420 				; optimize OK (A8LIBGADG), line = 161
  3421
  3422 35AE AD ED 5D			lda BK
  3423 35B1 C9 87			cmp #$87
  3424 35B3 F0 0C			jeq l_107Bx
  3425 35B5 C9 07			cmp #$07
  3426 35B7 F0 08			jeq l_107Bx
  3427 35B9 C9 8F			cmp #$8F
  3428 35BB F0 04			jeq l_107Bx
  3429 35BD C9 0F			cmp #$0F
  3430 35BF D0 13			jne l_107B
  3431 35C1			l_107Bx
  3432
  3433 				; optimize FAIL (0, A8LIBGADG), line = 164
  3434
  3435 35C1 EE EA 5D			inc RESULT
  3436
  3437 				; optimize OK (A8LIBGADG), line = 165
  3438
  3439 35C4 AD E7 5D			lda BS
  3440 35C7 CD EA 5D			cmp RESULT
  3441 35CA B0 05			jcs l_1094
  3442
  3443 				; optimize OK (A8LIBGADG), line = 167
  3444
  3445 35CC A9 01			lda #$01
  3446 35CE 8D EA 5D			sta RESULT
  3447 35D1			l_1094
  3448 35D1 4C 08 36			jmp l_10A4
  3449 35D4			l_107B
  3450
  3451 				; optimize OK (A8LIBGADG), line = 170
  3452
  3453 35D4 AD ED 5D			lda BK
  3454 35D7 C9 1C			cmp #$1C
  3455 35D9 D0 0D			jne l_10B6
  3456
  3457 				; optimize OK (A8LIBGADG), line = 172
  3458
  3459 35DB A9 FD			lda #$FD
  3460 35DD 8D EA 5D			sta RESULT
  3461
  3462 				; optimize OK (A8LIBGADG), line = 173
  3463
  3464 35E0 A9 01			lda #$01
  3465 35E2 8D EB 5D			sta BF
  3466 35E5 4C 08 36			jmp l_10C8
  3467 35E8			l_10B6
  3468
  3469 				; optimize OK (A8LIBGADG), line = 175
  3470
  3471 35E8 AD ED 5D			lda BK
  3472 35EB C9 2C			cmp #$2C
  3473 35ED D0 0D			jne l_10DA
  3474
  3475 				; optimize OK (A8LIBGADG), line = 177
  3476
  3477 35EF A9 FE			lda #$FE
  3478 35F1 8D EA 5D			sta RESULT
  3479
  3480 				; optimize OK (A8LIBGADG), line = 178
  3481
  3482 35F4 A9 01			lda #$01
  3483 35F6 8D EB 5D			sta BF
  3484 35F9 4C 08 36			jmp l_10EC
  3485 35FC			l_10DA
  3486
  3487 				; optimize OK (A8LIBGADG), line = 180
  3488
  3489 35FC AD ED 5D			lda BK
  3490 35FF C9 0C			cmp #$0C
  3491 3601 D0 05			jne l_10FE
  3492
  3493 				; optimize OK (A8LIBGADG), line = 182
  3494
  3495 3603 A9 01			lda #$01
  3496 3605 8D EB 5D			sta BF
  3497 3608			l_10FE
  3498 3608			l_10EC
  3499 3608			l_10C8
  3500 3608			l_10A4
  3501 3608			l_1045
  3502 3608			l_0FE1
  3503 3608			l_0F49
  3504
  3505 				; optimize OK (A8LIBGADG), line = 121
  3506
  3507 3608 AD EB 5D			lda BF
  3508 360B D0 03 4C 8E 34		jeq l_0F4A
  3509 3610			@exit
  3510
  3511 				; ------------------------------------------------------------
  3512
  3513 = 5DE3			BN	= DATAORIGIN+$0DCF
  3514 = 5DE4			X	= DATAORIGIN+$0DD0
  3515 = 5DE5			Y	= DATAORIGIN+$0DD1
  3516 = 5DE6			BD	= DATAORIGIN+$0DD2
  3517 = 5DE7			BS	= DATAORIGIN+$0DD3
  3518 = 5DE8			adr.PA	= [DATAORIGIN+$0DD4] .array [1] .word
  3519 3610			.var PA	= adr.PA .word
  3520 = 5DEA			RESULT	= DATAORIGIN+$0DD6
  3521 = 5DEB			BF	= DATAORIGIN+$0DD7
  3522 = 5DEC			BL	= DATAORIGIN+$0DD8
  3523 = 5DED			BK	= DATAORIGIN+$0DD9
  3524 = 5DEE			BP	= DATAORIGIN+$0DDA
  3525
  3526 = 5DE3			@VarData	= BN
  3527 = 000B			@VarDataSize	= 11
  3528
  3529 3610 60				rts						; ret
  3530 = 3611 E8 5D		PA
  3530 				.endl
  3531
  3532 3613			.local	GCHECK						; FUNCTION
  3533
  3534 				; optimize OK (A8LIBGADG), line = 205
  3535
  3536 3613 A9 00			lda #$00
  3537 3615 8D F6 5D			sta BF
  3538
  3539 				; optimize OK (A8LIBGADG), line = 208
  3540
  3541 3618 AD F4 5D			lda BD
  3542 361B 8D F5 5D			sta RESULT
  3543
  3544 				; optimize OK (A8LIBGADG), line = 209
  3545
  3546 361E 8D F8 5D			sta BC
  3547
  3548 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 212
  3549
  3550 3621 E8				inx
  3551 3622 A9 27 95 94			mva #$27 :STACKORIGIN,x
  3552 3626 A9 20 95 A4			mva #$20 :STACKORIGIN+STACKWIDTH,x
  3553 362A E8				inx
  3554 362B A9 00 95 94			mva #$00 :STACKORIGIN,x
  3555 362F E8				inx
  3556 3630 AD F2 5D 95 94		mva Y :STACKORIGIN,x
  3557 3635 E8				inx
  3558 3636 AD F1 5D 95 94		mva X :STACKORIGIN,x
  3559 363B E8				inx
  3560 363C AD F0 5D 95 94		mva BN :STACKORIGIN,x
  3561 3641 20 F7 2E			jsr A8LIBWIN.WPRINT
  3562
  3563 				; --- WhileProlog
  3564 3644 4C F5 36			jmp l_1130
  3565 3647			l_1131
  3566
  3567 				; optimize OK (A8LIBGADG), line = 218
  3568
  3569 3647 AD F8 5D			lda BC
  3570 364A C9 01			cmp #$01
  3571 364C D0 0C			jne l_1143
  3572 364E A9 01 8D F9 5D		mva #$01 adr.TMPSTR
  3573 3653 A9 58 8D FA 5D		mva #$58 adr.TMPSTR+1
  3574 3658 D0 0A			jne l_114D
  3575 365A			l_1143
  3576 365A A9 01 8D F9 5D		mva #$01 adr.TMPSTR
  3577 365F A9 20 8D FA 5D		mva #$20 adr.TMPSTR+1
  3578 3664			l_114D
  3579
  3580 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 225
  3581
  3582 3664 E8				inx
  3583 3665 AD 8C 37 95 94		mva TMPSTR :STACKORIGIN,x
  3584 366A AD 8D 37 95 A4		mva TMPSTR+1 :STACKORIGIN+STACKWIDTH,x
  3585 366F E8				inx
  3586 3670 A9 01 95 94			mva #$01 :STACKORIGIN,x
  3587 3674 E8				inx
  3588 3675 AD F2 5D 95 94		mva Y :STACKORIGIN,x
  3589 367A E8				inx
  3590 367B AC F1 5D			ldy X
  3591 367E C8				iny
  3592 367F 94 94			sty :STACKORIGIN,x
  3593 3681 E8				inx
  3594 3682 AD F0 5D 95 94		mva BN :STACKORIGIN,x
  3595 3687 20 F7 2E			jsr A8LIBWIN.WPRINT
  3596
  3597 				; optimize OK (A8LIBGADG), line = 228
  3598
  3599 368A AD F3 5D			lda BI
  3600 368D D0 08			jne l_1170
  3601
  3602 				; optimize OK (A8LIBGADG), line = 230
  3603
  3604 368F A9 01			lda #$01
  3605 3691 8D F6 5D			sta BF
  3606 3694 4C F5 36			jmp l_117E
  3607 3697			l_1170
  3608
  3609 				; optimize OK (A8LIBGADG), line = 234
  3610
  3611 3697 A9 00			lda #$00
  3612 3699 20 0B 28			jsr A8LIBMISC.WAITKCX
  3613 369C AD 28 50			lda A8LIBMISC.WAITKCX.RESULT
  3614 369F 8D F7 5D			sta BK
  3615
  3616 				; optimize OK (A8LIBGADG), line = 237
  3617
  3618 36A2 C9 1C			cmp #$1C
  3619 36A4 D0 0D			jne l_1195
  3620
  3621 				; optimize OK (A8LIBGADG), line = 240
  3622
  3623 36A6 A9 FD			lda #$FD
  3624 36A8 8D F5 5D			sta RESULT
  3625
  3626 				; optimize OK (A8LIBGADG), line = 241
  3627
  3628 36AB A9 01			lda #$01
  3629 36AD 8D F6 5D			sta BF
  3630 36B0 4C F5 36			jmp l_11A7
  3631 36B3			l_1195
  3632
  3633 				; optimize OK (A8LIBGADG), line = 243
  3634
  3635 36B3 AD F7 5D			lda BK
  3636 36B6 C9 2C			cmp #$2C
  3637 36B8 D0 0D			jne l_11B9
  3638
  3639 				; optimize OK (A8LIBGADG), line = 246
  3640
  3641 36BA A9 FE			lda #$FE
  3642 36BC 8D F5 5D			sta RESULT
  3643
  3644 				; optimize OK (A8LIBGADG), line = 247
  3645
  3646 36BF A9 01			lda #$01
  3647 36C1 8D F6 5D			sta BF
  3648 36C4 4C F5 36			jmp l_11CB
  3649 36C7			l_11B9
  3650
  3651 				; optimize OK (A8LIBGADG), line = 249
  3652
  3653 36C7 AD F7 5D			lda BK
  3654 36CA C9 21			cmp #$21
  3655 36CC F0 08			jeq l_11F5x
  3656 36CE C9 16			cmp #$16
  3657 36D0 F0 04			jeq l_11F5x
  3658 36D2 C9 56			cmp #$56
  3659 36D4 D0 1F			jne l_11F5
  3660 36D6			l_11F5x
  3661
  3662 				; optimize OK (A8LIBGADG), line = 252
  3663
  3664 36D6 AD F8 5D			lda BC
  3665 36D9 C9 01			cmp #$01
  3666 36DB D0 08			jne l_1208
  3667
  3668 				; optimize OK (A8LIBGADG), line = 254
  3669
  3670 36DD A9 02			lda #$02
  3671 36DF 8D F8 5D			sta BC
  3672 36E2 4C EA 36			jmp l_1216
  3673 36E5			l_1208
  3674
  3675 				; optimize OK (A8LIBGADG), line = 257
  3676
  3677 36E5 A9 01			lda #$01
  3678 36E7 8D F8 5D			sta BC
  3679 36EA			l_1216
  3680
  3681 				; optimize OK (A8LIBGADG), line = 259
  3682
  3683 36EA AD F8 5D			lda BC
  3684 36ED 8D F5 5D			sta RESULT
  3685
  3686 				; optimize OK (A8LIBGADG), line = 260
  3687
  3688 36F0 A9 01			lda #$01
  3689 36F2 8D F6 5D			sta BF
  3690 36F5			l_11F5
  3691 36F5			l_11CB
  3692 36F5			l_11A7
  3693 36F5			l_117E
  3694 36F5			l_1130
  3695
  3696 				; optimize OK (A8LIBGADG), line = 215
  3697
  3698 36F5 AD F6 5D			lda BF
  3699 36F8 D0 03 4C 47 36		jeq l_1131
  3700
  3701 				; optimize OK (A8LIBGADG), line = 266
  3702
  3703 36FD AD F5 5D			lda RESULT
  3704 3700 CD F8 5D			cmp BC
  3705 3703 D0 43			jne l_1243
  3706
  3707 				; optimize OK (A8LIBGADG), line = 269
  3708
  3709 3705 C9 01			cmp #$01
  3710 3707 D0 0C			jne l_1256
  3711 3709 A9 01 8D F9 5D		mva #$01 adr.TMPSTR
  3712 370E A9 58 8D FA 5D		mva #$58 adr.TMPSTR+1
  3713 3713 D0 0A			jne l_1260
  3714 3715			l_1256
  3715 3715 A9 01 8D F9 5D		mva #$01 adr.TMPSTR
  3716 371A A9 20 8D FA 5D		mva #$20 adr.TMPSTR+1
  3717 371F			l_1260
  3718
  3719 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 276
  3720
  3721 371F E8				inx
  3722 3720 AD 8C 37 95 94		mva TMPSTR :STACKORIGIN,x
  3723 3725 AD 8D 37 95 A4		mva TMPSTR+1 :STACKORIGIN+STACKWIDTH,x
  3724 372A E8				inx
  3725 372B A9 00 95 94			mva #$00 :STACKORIGIN,x
  3726 372F E8				inx
  3727 3730 AD F2 5D 95 94		mva Y :STACKORIGIN,x
  3728 3735 E8				inx
  3729 3736 AC F1 5D			ldy X
  3730 3739 C8				iny
  3731 373A 94 94			sty :STACKORIGIN,x
  3732 373C E8				inx
  3733 373D AD F0 5D 95 94		mva BN :STACKORIGIN,x
  3734 3742 20 F7 2E			jsr A8LIBWIN.WPRINT
  3735 3745 4C 8B 37			jmp l_127A
  3736 3748			l_1243
  3737
  3738 				; optimize OK (A8LIBGADG), line = 280
  3739
  3740 3748 AD F4 5D			lda BD
  3741 374B C9 01			cmp #$01
  3742 374D D0 0C			jne l_128C
  3743 374F A9 01 8D F9 5D		mva #$01 adr.TMPSTR
  3744 3754 A9 58 8D FA 5D		mva #$58 adr.TMPSTR+1
  3745 3759 D0 0A			jne l_1296
  3746 375B			l_128C
  3747 375B A9 01 8D F9 5D		mva #$01 adr.TMPSTR
  3748 3760 A9 20 8D FA 5D		mva #$20 adr.TMPSTR+1
  3749 3765			l_1296
  3750
  3751 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 287
  3752
  3753 3765 E8				inx
  3754 3766 AD 8C 37 95 94		mva TMPSTR :STACKORIGIN,x
  3755 376B AD 8D 37 95 A4		mva TMPSTR+1 :STACKORIGIN+STACKWIDTH,x
  3756 3770 E8				inx
  3757 3771 A9 00 95 94			mva #$00 :STACKORIGIN,x
  3758 3775 E8				inx
  3759 3776 AD F2 5D 95 94		mva Y :STACKORIGIN,x
  3760 377B E8				inx
  3761 377C AC F1 5D			ldy X
  3762 377F C8				iny
  3763 3780 94 94			sty :STACKORIGIN,x
  3764 3782 E8				inx
  3765 3783 AD F0 5D 95 94		mva BN :STACKORIGIN,x
  3766 3788 20 F7 2E			jsr A8LIBWIN.WPRINT
  3767 378B			l_127A
  3768 378B			@exit
  3769
  3770 				; ------------------------------------------------------------
  3771
  3772 = 5DF0			BN	= DATAORIGIN+$0DDC
  3773 = 5DF1			X	= DATAORIGIN+$0DDD
  3774 = 5DF2			Y	= DATAORIGIN+$0DDE
  3775 = 5DF3			BI	= DATAORIGIN+$0DDF
  3776 = 5DF4			BD	= DATAORIGIN+$0DE0
  3777 = 5DF5			RESULT	= DATAORIGIN+$0DE1
  3778 = 5DF6			BF	= DATAORIGIN+$0DE2
  3779 = 5DF7			BK	= DATAORIGIN+$0DE3
  3780 = 5DF8			BC	= DATAORIGIN+$0DE4
  3781 = 5DF9			adr.TMPSTR	= [DATAORIGIN+$0DE5] .array [256]
  3782 378B			.var TMPSTR	= adr.TMPSTR .word
  3783
  3784 = 5DF0			@VarData	= BN
  3785 = 0108			@VarDataSize	= 264
  3786
  3787 378B 60				rts						; ret
  3788 = 378C F9 5D		TMPSTR
  3788 				.endl
  3789
  3790 378E			.local	GRADIO						; FUNCTION
  3791
  3792 				; optimize OK (A8LIBGADG), line = 309
  3793
  3794 378E A9 00			lda #$00
  3795 3790 8D 03 5F			sta BF
  3796
  3797 				; optimize OK (A8LIBGADG), line = 312
  3798
  3799 3793 AD FE 5E			lda BI
  3800 3796 8D 02 5F			sta RESULT
  3801
  3802 				; optimize OK (A8LIBGADG), line = 313
  3803
  3804 3799 8D 06 5F			sta BC
  3805
  3806 				; --- WhileProlog
  3807 379C 4C 8F 39			jmp l_12BD
  3808 379F			l_12BE
  3809
  3810 				; optimize OK (A8LIBGADG), line = 319
  3811
  3812 379F A9 00			lda #$00
  3813 37A1 8D 07 5F			sta XP
  3814
  3815 				; optimize OK (A8LIBGADG), line = 320
  3816
  3817 37A4 8D 08 5F			sta YP
  3818
  3819 				; optimize OK (A8LIBGADG), line = 323
  3820
  3821 37A7 8D 04 5F			sta BL
  3822 37AA AC FF 5E			ldy BS
  3823 37AD 88				dey
  3824 37AE 8C B2 37			sty @FORTMP_12D2_0
  3825
  3826 37B1			l_12D5
  3827 				; --- ForToDoCondition
  3828 37B1 A9 00			lda @FORTMP_12D2_0:#$00
  3829 37B3 CD 04 5F			cmp BL
  3830 37B6 B0 03 4C E4 38		jcc l_12E3
  3831
  3832 				; optimize OK (A8LIBGADG), line = 326
  3833
  3834 37BB AD FB 5E			lda Y
  3835 37BE 18 6D 08 5F			add YP
  3836 37C2 8D 05 5A			sta A8LIBWIN.WPOS.Y
  3837 37C5 AD FA 5E			lda X
  3838 37C8 18 6D 07 5F			add XP
  3839 37CC 8D 04 5A			sta A8LIBWIN.WPOS.X
  3840 37CF AD F9 5E			lda BN
  3841 37D2 8D 03 5A			sta A8LIBWIN.WPOS.BN
  3842 37D5 20 50 2E			jsr A8LIBWIN.WPOS
  3843
  3844 				; optimize OK (A8LIBGADG), line = 327
  3845
  3846 37D8 AD 04 5F			lda BL
  3847 37DB 18 69 01			add #$01
  3848 37DE CD 06 5F			cmp BC
  3849 37E1 D0 16			jne l_131D
  3850 37E3 AD FD 5E			lda BE
  3851 37E6 F0 11			jeq l_131D
  3852
  3853 				; optimize OK (A8LIBGADG), line = 329
  3854
  3855 37E8 AD F9 5E			lda BN
  3856 37EB 8D 07 5A			sta A8LIBWIN.WPUT.BN
  3857 37EE A9 9F			lda #$9F
  3858 37F0 8D 08 5A			sta A8LIBWIN.WPUT.X
  3859 37F3 20 8A 2E			jsr A8LIBWIN.WPUT
  3860 37F6 4C 07 38			jmp l_132C
  3861 37F9			l_131D
  3862
  3863 				; optimize OK (A8LIBGADG), line = 332
  3864
  3865 37F9 AD F9 5E			lda BN
  3866 37FC 8D 07 5A			sta A8LIBWIN.WPUT.BN
  3867 37FF A9 20			lda #$20
  3868 3801 8D 08 5A			sta A8LIBWIN.WPUT.X
  3869 3804 20 8A 2E			jsr A8LIBWIN.WPUT
  3870 3807			l_132C
  3871
  3872 				; optimize OK (A8LIBGADG), line = 336
  3873
  3874 3807 AD FB 5E			lda Y
  3875 380A 18 6D 08 5F			add YP
  3876 380E 8D 05 5A			sta A8LIBWIN.WPOS.Y
  3877 3811 AD FA 5E			lda X
  3878 3814 18 6D 07 5F			add XP
  3879 3818 18 69 01			add #$01
  3880 381B 8D 04 5A			sta A8LIBWIN.WPOS.X
  3881 381E AD F9 5E			lda BN
  3882 3821 8D 03 5A			sta A8LIBWIN.WPOS.BN
  3883 3824 20 50 2E			jsr A8LIBWIN.WPOS
  3884
  3885 				; optimize OK (A8LIBGADG), line = 337
  3886
  3887 3827 AD 04 5F			lda BL
  3888 382A 18 69 01			add #$01
  3889 382D CD 02 5F			cmp RESULT
  3890 3830 D0 11			jne l_1363
  3891
  3892 				; optimize OK (A8LIBGADG), line = 339
  3893
  3894 3832 AD F9 5E			lda BN
  3895 3835 8D 07 5A			sta A8LIBWIN.WPUT.BN
  3896 3838 A9 14			lda #$14
  3897 383A 8D 08 5A			sta A8LIBWIN.WPUT.X
  3898 383D 20 8A 2E			jsr A8LIBWIN.WPUT
  3899 3840 4C 51 38			jmp l_1372
  3900 3843			l_1363
  3901
  3902 				; optimize OK (A8LIBGADG), line = 342
  3903
  3904 3843 AD F9 5E			lda BN
  3905 3846 8D 07 5A			sta A8LIBWIN.WPUT.BN
  3906 3849 A9 6F			lda #$6F
  3907 384B 8D 08 5A			sta A8LIBWIN.WPUT.X
  3908 384E 20 8A 2E			jsr A8LIBWIN.WPUT
  3909 3851			l_1372
  3910
  3911 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 346
  3912
  3913 3851 E8				inx
  3914 3852 AD 04 5F 95 94		mva BL :STACKORIGIN,x
  3915 3857 A9 00 95 A4			mva #$00 :STACKORIGIN+STACKWIDTH,x
  3916 385B				m@index2 0
Macro: M@INDEX2 [Source: macros.asm]
     1 385B 16 94			asl :STACKORIGIN-0,x
     2 385D 36 A4			rol :STACKORIGIN-0+STACKWIDTH,x
Source: appdemo.a65
  3917 385F AD 98 39			lda PS
  3918 3862 18 75 94			add :STACKORIGIN,x
  3919 3865 85 82			sta :bp2
  3920 3867 AD 99 39			lda PS+1
  3921 386A 75 A4			adc :STACKORIGIN+STACKWIDTH,x
  3922 386C 85 83			sta :bp2+1
  3923 386E A0 00			ldy #$00
  3924 3870 B1 82 95 94			mva (:bp2),y :STACKORIGIN,x
  3925 3874 C8				iny
  3926 3875 B1 82 95 A4			mva (:bp2),y :STACKORIGIN+STACKWIDTH,x
  3927 3879 E8				inx
  3928 387A A9 00 95 94			mva #$00 :STACKORIGIN,x
  3929 387E E8				inx
  3930 387F AD FB 5E			lda Y
  3931 3882 18 6D 08 5F			add YP
  3932 3886 95 94			sta :STACKORIGIN,x
  3933 3888 E8				inx
  3934 3889 AD FA 5E			lda X
  3935 388C 18 6D 07 5F			add XP
  3936 3890 95 94			sta :STACKORIGIN,x
  3937 3892 E8				inx
  3938 3893 A9 03 95 94			mva #$03 :STACKORIGIN,x
  3939 3897 20 27 25			jsr addAL_CL
  3940 389A AD F9 5E 95 94		mva BN :STACKORIGIN,x
  3941 389F 20 F7 2E			jsr A8LIBWIN.WPRINT
  3942
  3943 				; optimize OK (A8LIBGADG), line = 349
  3944
  3945 38A2 AD FC 5E			lda BD
  3946 38A5 C9 01			cmp #$01
  3947 38A7 D0 30			jne l_13A9
  3948
  3949 				; optimize OK (A8LIBGADG), line = 352
  3950
  3951 38A9 A9 00			lda #$00
  3952 38AB 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  3953 38AD AD 04 5F			lda BL
  3954 38B0 0A				asl @
  3955 38B1 26 AD			rol :STACKORIGIN+STACKWIDTH+9
  3956 38B3 18 6D 98 39			add PS
  3957 38B7 85 82			sta :bp2
  3958 38B9 AD 99 39			lda PS+1
  3959 38BC 65 AD			adc :STACKORIGIN+STACKWIDTH+9
  3960 38BE 85 83			sta :bp2+1
  3961 38C0 A0 01			ldy #$01
  3962 38C2 B1 82			lda (:bp2),y
  3963 38C4 85 81			sta :bp+1
  3964 38C6 88				dey
  3965 38C7 B1 82			lda (:bp2),y
  3966 38C9 A8				tay
  3967 38CA B1 80			lda (:bp),y
  3968 38CC 18 69 04			add #$04
  3969 38CF 18 6D 07 5F			add XP
  3970 38D3 8D 07 5F			sta XP
  3971 38D6 4C DC 38			jmp l_13BA
  3972 38D9			l_13A9
  3973
  3974 				; optimize FAIL (0, A8LIBGADG), line = 356
  3975
  3976 38D9 EE 08 5F			inc YP
  3977 38DC			l_13BA
  3978
  3979 				; --- ForToDoEpilog
  3980 38DC EE 04 5F			inc BL
  3981 38DF F0 03 4C B1 37		jne l_12D5
  3982 38E4			l_12E3
  3983
  3984 				; optimize OK (A8LIBGADG), line = 361
  3985
  3986 38E4 AD FD 5E			lda BE
  3987 38E7 D0 08			jne l_13D5
  3988
  3989 				; optimize OK (A8LIBGADG), line = 363
  3990
  3991 38E9 A9 01			lda #$01
  3992 38EB 8D 03 5F			sta BF
  3993 38EE 4C 8F 39			jmp l_13E3
  3994 38F1			l_13D5
  3995
  3996 				; optimize OK (A8LIBGADG), line = 368
  3997
  3998 38F1 A9 00			lda #$00
  3999 38F3 20 0B 28			jsr A8LIBMISC.WAITKCX
  4000 38F6 AD 28 50			lda A8LIBMISC.WAITKCX.RESULT
  4001 38F9 8D 05 5F			sta BK
  4002
  4003 				; optimize OK (A8LIBGADG), line = 372
  4004
  4005 38FC C9 86			cmp #$86
  4006 38FE F0 0C			jeq l_141Ex
  4007 3900 C9 06			cmp #$06
  4008 3902 F0 08			jeq l_141Ex
  4009 3904 C9 8E			cmp #$8E
  4010 3906 F0 04			jeq l_141Ex
  4011 3908 C9 0E			cmp #$0E
  4012 390A D0 13			jne l_141E
  4013 390C			l_141Ex
  4014
  4015 				; optimize FAIL (0, A8LIBGADG), line = 375
  4016
  4017 390C CE 06 5F			dec BC
  4018
  4019 				; optimize OK (A8LIBGADG), line = 376
  4020
  4021 390F AD 06 5F			lda BC
  4022 3912 C9 01			cmp #$01
  4023 3914 B0 06			jcs l_1435
  4024
  4025 				; optimize OK (A8LIBGADG), line = 378
  4026
  4027 3916 AD FF 5E			lda BS
  4028 3919 8D 06 5F			sta BC
  4029 391C			l_1435
  4030 391C 4C 8F 39			jmp l_1447
  4031 391F			l_141E
  4032
  4033 				; optimize OK (A8LIBGADG), line = 382
  4034
  4035 391F AD 05 5F			lda BK
  4036 3922 C9 87			cmp #$87
  4037 3924 F0 0C			jeq l_147Dx
  4038 3926 C9 07			cmp #$07
  4039 3928 F0 08			jeq l_147Dx
  4040 392A C9 8F			cmp #$8F
  4041 392C F0 04			jeq l_147Dx
  4042 392E C9 0F			cmp #$0F
  4043 3930 D0 13			jne l_147D
  4044 3932			l_147Dx
  4045
  4046 				; optimize FAIL (0, A8LIBGADG), line = 385
  4047
  4048 3932 EE 06 5F			inc BC
  4049
  4050 				; optimize OK (A8LIBGADG), line = 386
  4051
  4052 3935 AD FF 5E			lda BS
  4053 3938 CD 06 5F			cmp BC
  4054 393B B0 05			jcs l_1496
  4055
  4056 				; optimize OK (A8LIBGADG), line = 388
  4057
  4058 393D A9 01			lda #$01
  4059 393F 8D 06 5F			sta BC
  4060 3942			l_1496
  4061 3942 4C 8F 39			jmp l_14A6
  4062 3945			l_147D
  4063
  4064 				; optimize OK (A8LIBGADG), line = 392
  4065
  4066 3945 AD 05 5F			lda BK
  4067 3948 C9 1C			cmp #$1C
  4068 394A D0 0D			jne l_14B8
  4069
  4070 				; optimize OK (A8LIBGADG), line = 394
  4071
  4072 394C A9 FD			lda #$FD
  4073 394E 8D 02 5F			sta RESULT
  4074
  4075 				; optimize OK (A8LIBGADG), line = 395
  4076
  4077 3951 A9 01			lda #$01
  4078 3953 8D 03 5F			sta BF
  4079 3956 4C 8F 39			jmp l_14CA
  4080 3959			l_14B8
  4081
  4082 				; optimize OK (A8LIBGADG), line = 398
  4083
  4084 3959 AD 05 5F			lda BK
  4085 395C C9 2C			cmp #$2C
  4086 395E D0 0D			jne l_14DC
  4087
  4088 				; optimize OK (A8LIBGADG), line = 400
  4089
  4090 3960 A9 FE			lda #$FE
  4091 3962 8D 02 5F			sta RESULT
  4092
  4093 				; optimize OK (A8LIBGADG), line = 401
  4094
  4095 3965 A9 01			lda #$01
  4096 3967 8D 03 5F			sta BF
  4097 396A 4C 8F 39			jmp l_14EE
  4098 396D			l_14DC
  4099
  4100 				; optimize OK (A8LIBGADG), line = 404
  4101
  4102 396D AD 05 5F			lda BK
  4103 3970 C9 21			cmp #$21
  4104 3972 D0 09			jne l_1500
  4105
  4106 				; optimize OK (A8LIBGADG), line = 406
  4107
  4108 3974 AD 06 5F			lda BC
  4109 3977 8D 02 5F			sta RESULT
  4110 397A 4C 8F 39			jmp l_1510
  4111 397D			l_1500
  4112
  4113 				; optimize OK (A8LIBGADG), line = 409
  4114
  4115 397D AD 05 5F			lda BK
  4116 3980 C9 0C			cmp #$0C
  4117 3982 D0 0B			jne l_1522
  4118
  4119 				; optimize OK (A8LIBGADG), line = 411
  4120
  4121 3984 AD 06 5F			lda BC
  4122 3987 8D 02 5F			sta RESULT
  4123
  4124 				; optimize OK (A8LIBGADG), line = 412
  4125
  4126 398A A9 01			lda #$01
  4127 398C 8D 03 5F			sta BF
  4128 398F			l_1522
  4129 398F			l_1510
  4130 398F			l_14EE
  4131 398F			l_14CA
  4132 398F			l_14A6
  4133 398F			l_1447
  4134 398F			l_13E3
  4135 398F			l_12BD
  4136
  4137 				; optimize OK (A8LIBGADG), line = 316
  4138
  4139 398F AD 03 5F			lda BF
  4140 3992 D0 03 4C 9F 37		jeq l_12BE
  4141 3997			@exit
  4142
  4143 				; ------------------------------------------------------------
  4144
  4145 = 5EF9			BN	= DATAORIGIN+$0EE5
  4146 = 5EFA			X	= DATAORIGIN+$0EE6
  4147 = 5EFB			Y	= DATAORIGIN+$0EE7
  4148 = 5EFC			BD	= DATAORIGIN+$0EE8
  4149 = 5EFD			BE	= DATAORIGIN+$0EE9
  4150 = 5EFE			BI	= DATAORIGIN+$0EEA
  4151 = 5EFF			BS	= DATAORIGIN+$0EEB
  4152 = 5F00			adr.PS	= [DATAORIGIN+$0EEC] .array [1] .word
  4153 3997			.var PS	= adr.PS .word
  4154 = 5F02			RESULT	= DATAORIGIN+$0EEE
  4155 = 5F03			BF	= DATAORIGIN+$0EEF
  4156 = 5F04			BL	= DATAORIGIN+$0EF0
  4157 = 5F05			BK	= DATAORIGIN+$0EF1
  4158 = 5F06			BC	= DATAORIGIN+$0EF2
  4159 = 5F07			XP	= DATAORIGIN+$0EF3
  4160 = 5F08			YP	= DATAORIGIN+$0EF4
  4161
  4162 = 5EF9			@VarData	= BN
  4163 = 000F			@VarDataSize	= 15
  4164
  4165 3997 60				rts						; ret
  4166 = 3998 00 5F		PS
  4166 				.endl
  4167
  4168 399A			.local	GSPIN						; FUNCTION
  4169
  4170 				; optimize OK (A8LIBGADG), line = 437
  4171
  4172 399A A9 00			lda #$00
  4173 399C 8D 14 5F			sta BF
  4174
  4175 				; optimize OK (A8LIBGADG), line = 440
  4176
  4177 399F AD 0F 5F			lda BI
  4178 39A2 8D 12 5F			sta BD
  4179
  4180 				; optimize OK (A8LIBGADG), line = 443
  4181
  4182 39A5 AD 0E 5F			lda BM
  4183 39A8 C9 FB			cmp #$FB
  4184 39AA 90 05			jcc l_1558
  4185
  4186 				; optimize OK (A8LIBGADG), line = 445
  4187
  4188 39AC A9 FA			lda #$FA
  4189 39AE 8D 0E 5F			sta BM
  4190 39B1			l_1558
  4191
  4192 				; optimize OK (A8LIBGADG), line = 449
  4193
  4194 39B1 AD 10 5F			lda BE
  4195 39B4 D0 2C			jne l_1571
  4196
  4197 				; optimize OK (A8LIBGADG), line = 451
  4198
  4199 39B6 AD 12 5F			lda BD
  4200 39B9 20 3F 2A			jsr A8LIBSTR.BYTETOSTR3
  4201 39BC E8				inx
  4202 39BD AD BA 2A			lda A8LIBSTR.BYTETOSTR3.RESULT
  4203 39C0 85 88			sta @move.src
  4204 39C2 AD BB 2A			lda A8LIBSTR.BYTETOSTR3.RESULT+1
  4205 39C5 85 89			sta @move.src+1
  4206 					@moveSTRING CL #5
  4206 				 MWA CL @MOVE.DST\ MWA #5 @MOVE.CNT\ JSR @MOVESTRING
  4206 39C7 AD 6E 3B 85 8C AD +  MWA CL @MOVE.DST
  4206 39D1 A9 05 85 84 A9 00 +  MWA #5 @MOVE.CNT
  4206 39D9 20 15 26		 JSR @MOVESTRING
  4207 39DC CA				dex
  4208
  4209 				; optimize OK (A8LIBGADG), line = 452
  4210
  4211 39DD A9 01			lda #$01
  4212 39DF 8D 14 5F			sta BF
  4213 39E2			l_1571
  4214
  4215 				; --- WhileProlog
  4216 39E2 4C 40 3B			jmp l_157E
  4217 39E5			l_157F
  4218
  4219 				; optimize OK (A8LIBGADG), line = 459
  4220
  4221 39E5 AD 12 5F			lda BD
  4222 39E8 20 3F 2A			jsr A8LIBSTR.BYTETOSTR3
  4223 39EB E8				inx
  4224 39EC AD BA 2A			lda A8LIBSTR.BYTETOSTR3.RESULT
  4225 39EF 85 88			sta @move.src
  4226 39F1 AD BB 2A			lda A8LIBSTR.BYTETOSTR3.RESULT+1
  4227 39F4 85 89			sta @move.src+1
  4228 					@moveSTRING CL #5
  4228 				 MWA CL @MOVE.DST\ MWA #5 @MOVE.CNT\ JSR @MOVESTRING
  4228 39F6 AD 6E 3B 85 8C AD +  MWA CL @MOVE.DST
  4228 3A00 A9 05 85 84 A9 00 +  MWA #5 @MOVE.CNT
  4228 3A08 20 15 26		 JSR @MOVESTRING
  4229
  4230 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 460
  4231
  4232 3A0B AD 6E 3B 95 94		mva CL :STACKORIGIN,x
  4233 3A10 AD 6F 3B 95 A4		mva CL+1 :STACKORIGIN+STACKWIDTH,x
  4234 3A15 E8				inx
  4235 3A16 A9 01 95 94			mva #$01 :STACKORIGIN,x
  4236 3A1A E8				inx
  4237 3A1B AD 0C 5F 95 94		mva Y :STACKORIGIN,x
  4238 3A20 E8				inx
  4239 3A21 AD 0B 5F 95 94		mva X :STACKORIGIN,x
  4240 3A26 E8				inx
  4241 3A27 AD 0A 5F 95 94		mva BN :STACKORIGIN,x
  4242 3A2C 20 F7 2E			jsr A8LIBWIN.WPRINT
  4243
  4244 				; optimize OK (A8LIBGADG), line = 463
  4245
  4246 3A2F AD 10 5F			lda BE
  4247 3A32 C9 01			cmp #$01
  4248 3A34 F0 03 4C 40 3B		jne l_15A2
  4249
  4250 				; optimize OK (A8LIBGADG), line = 466
  4251
  4252 3A39 A9 00			lda #$00
  4253 3A3B 20 0B 28			jsr A8LIBMISC.WAITKCX
  4254 3A3E AD 28 50			lda A8LIBMISC.WAITKCX.RESULT
  4255 3A41 8D 13 5F			sta BK
  4256
  4257 				; optimize OK (A8LIBGADG), line = 469
  4258
  4259 3A44 C9 86			cmp #$86
  4260 3A46 F0 0C			jeq l_15DEx
  4261 3A48 C9 06			cmp #$06
  4262 3A4A F0 08			jeq l_15DEx
  4263 3A4C C9 8F			cmp #$8F
  4264 3A4E F0 04			jeq l_15DEx
  4265 3A50 C9 0F			cmp #$0F
  4266 3A52 D0 19			jne l_15DE
  4267 3A54			l_15DEx
  4268
  4269 				; optimize OK (A8LIBGADG), line = 472
  4270
  4271 3A54 AD 12 5F			lda BD
  4272 3A57 F0 03			jeq l_15F1
  4273
  4274 				; optimize FAIL (0, A8LIBGADG), line = 474
  4275
  4276 3A59 CE 12 5F			dec BD
  4277 3A5C			l_15F1
  4278
  4279 				; optimize OK (A8LIBGADG), line = 476
  4280
  4281 3A5C AD 12 5F			lda BD
  4282 3A5F CD 0D 5F			cmp BL
  4283 3A62 B0 06			jcs l_160C
  4284
  4285 				; optimize OK (A8LIBGADG), line = 478
  4286
  4287 3A64 AD 0D 5F			lda BL
  4288 3A67 8D 12 5F			sta BD
  4289 3A6A			l_160C
  4290 3A6A 4C 40 3B			jmp l_161E
  4291 3A6D			l_15DE
  4292
  4293 				; optimize OK (A8LIBGADG), line = 481
  4294
  4295 3A6D AD 13 5F			lda BK
  4296 3A70 C9 87			cmp #$87
  4297 3A72 F0 0C			jeq l_1654x
  4298 3A74 C9 07			cmp #$07
  4299 3A76 F0 08			jeq l_1654x
  4300 3A78 C9 8E			cmp #$8E
  4301 3A7A F0 04			jeq l_1654x
  4302 3A7C C9 0E			cmp #$0E
  4303 3A7E D0 11			jne l_1654
  4304 3A80			l_1654x
  4305
  4306 				; optimize FAIL (0, A8LIBGADG), line = 484
  4307
  4308 3A80 EE 12 5F			inc BD
  4309
  4310 				; optimize OK (A8LIBGADG), line = 485
  4311
  4312 3A83 AD 0E 5F			lda BM
  4313 3A86 CD 12 5F			cmp BD
  4314 3A89 B0 03			jcs l_166D
  4315
  4316 				; optimize OK (A8LIBGADG), line = 487
  4317
  4318 3A8B 8D 12 5F			sta BD
  4319 3A8E			l_166D
  4320 3A8E 4C 40 3B			jmp l_167F
  4321 3A91			l_1654
  4322
  4323 				; optimize OK (A8LIBGADG), line = 490
  4324
  4325 3A91 AD 13 5F			lda BK
  4326 3A94 C9 1C			cmp #$1C
  4327 3A96 D0 34			jne l_1691
  4328
  4329 				; optimize OK (A8LIBGADG), line = 492
  4330
  4331 3A98 A9 FD			lda #$FD
  4332 3A9A 8D 11 5F			sta RESULT
  4333
  4334 				; optimize OK (A8LIBGADG), line = 493
  4335
  4336 3A9D A9 01			lda #$01
  4337 3A9F 8D 14 5F			sta BF
  4338
  4339 				; optimize OK (A8LIBGADG), line = 494
  4340
  4341 3AA2 AD 0F 5F			lda BI
  4342 3AA5 20 3F 2A			jsr A8LIBSTR.BYTETOSTR3
  4343 3AA8 E8				inx
  4344 3AA9 AD BA 2A			lda A8LIBSTR.BYTETOSTR3.RESULT
  4345 3AAC 85 88			sta @move.src
  4346 3AAE AD BB 2A			lda A8LIBSTR.BYTETOSTR3.RESULT+1
  4347 3AB1 85 89			sta @move.src+1
  4348 					@moveSTRING CL #5
  4348 				 MWA CL @MOVE.DST\ MWA #5 @MOVE.CNT\ JSR @MOVESTRING
  4348 3AB3 AD 6E 3B 85 8C AD +  MWA CL @MOVE.DST
  4348 3ABD A9 05 85 84 A9 00 +  MWA #5 @MOVE.CNT
  4348 3AC5 20 15 26		 JSR @MOVESTRING
  4349 3AC8 CA				dex
  4350 3AC9 4C 40 3B			jmp l_16A7
  4351 3ACC			l_1691
  4352
  4353 				; optimize OK (A8LIBGADG), line = 496
  4354
  4355 3ACC AD 13 5F			lda BK
  4356 3ACF C9 2C			cmp #$2C
  4357 3AD1 D0 34			jne l_16B9
  4358
  4359 				; optimize OK (A8LIBGADG), line = 498
  4360
  4361 3AD3 A9 FE			lda #$FE
  4362 3AD5 8D 11 5F			sta RESULT
  4363
  4364 				; optimize OK (A8LIBGADG), line = 499
  4365
  4366 3AD8 A9 01			lda #$01
  4367 3ADA 8D 14 5F			sta BF
  4368
  4369 				; optimize OK (A8LIBGADG), line = 500
  4370
  4371 3ADD AD 0F 5F			lda BI
  4372 3AE0 20 3F 2A			jsr A8LIBSTR.BYTETOSTR3
  4373 3AE3 E8				inx
  4374 3AE4 AD BA 2A			lda A8LIBSTR.BYTETOSTR3.RESULT
  4375 3AE7 85 88			sta @move.src
  4376 3AE9 AD BB 2A			lda A8LIBSTR.BYTETOSTR3.RESULT+1
  4377 3AEC 85 89			sta @move.src+1
  4378 					@moveSTRING CL #5
  4378 				 MWA CL @MOVE.DST\ MWA #5 @MOVE.CNT\ JSR @MOVESTRING
  4378 3AEE AD 6E 3B 85 8C AD +  MWA CL @MOVE.DST
  4378 3AF8 A9 05 85 84 A9 00 +  MWA #5 @MOVE.CNT
  4378 3B00 20 15 26		 JSR @MOVESTRING
  4379 3B03 CA				dex
  4380 3B04 4C 40 3B			jmp l_16CF
  4381 3B07			l_16B9
  4382
  4383 				; optimize OK (A8LIBGADG), line = 502
  4384
  4385 3B07 AD 13 5F			lda BK
  4386 3B0A C9 0C			cmp #$0C
  4387 3B0C D0 32			jne l_16E1
  4388
  4389 				; optimize OK (A8LIBGADG), line = 504
  4390
  4391 3B0E AD 12 5F			lda BD
  4392 3B11 8D 11 5F			sta RESULT
  4393
  4394 				; optimize OK (A8LIBGADG), line = 505
  4395
  4396 3B14 A9 01			lda #$01
  4397 3B16 8D 14 5F			sta BF
  4398
  4399 				; optimize OK (A8LIBGADG), line = 506
  4400
  4401 3B19 AD 12 5F			lda BD
  4402 3B1C 20 3F 2A			jsr A8LIBSTR.BYTETOSTR3
  4403 3B1F E8				inx
  4404 3B20 AD BA 2A			lda A8LIBSTR.BYTETOSTR3.RESULT
  4405 3B23 85 88			sta @move.src
  4406 3B25 AD BB 2A			lda A8LIBSTR.BYTETOSTR3.RESULT+1
  4407 3B28 85 89			sta @move.src+1
  4408 					@moveSTRING CL #5
  4408 				 MWA CL @MOVE.DST\ MWA #5 @MOVE.CNT\ JSR @MOVESTRING
  4408 3B2A AD 6E 3B 85 8C AD +  MWA CL @MOVE.DST
  4408 3B34 A9 05 85 84 A9 00 +  MWA #5 @MOVE.CNT
  4408 3B3C 20 15 26		 JSR @MOVESTRING
  4409 3B3F CA				dex
  4410 3B40			l_16E1
  4411 3B40			l_16CF
  4412 3B40			l_16A7
  4413 3B40			l_167F
  4414 3B40			l_161E
  4415 3B40			l_15A2
  4416 3B40			l_157E
  4417
  4418 				; optimize OK (A8LIBGADG), line = 456
  4419
  4420 3B40 AD 14 5F			lda BF
  4421 3B43 D0 03 4C E5 39		jeq l_157F
  4422
  4423 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 512
  4424
  4425 3B48 E8				inx
  4426 3B49 AD 6E 3B 95 94		mva CL :STACKORIGIN,x
  4427 3B4E AD 6F 3B 95 A4		mva CL+1 :STACKORIGIN+STACKWIDTH,x
  4428 3B53 E8				inx
  4429 3B54 A9 00 95 94			mva #$00 :STACKORIGIN,x
  4430 3B58 E8				inx
  4431 3B59 AD 0C 5F 95 94		mva Y :STACKORIGIN,x
  4432 3B5E E8				inx
  4433 3B5F AD 0B 5F 95 94		mva X :STACKORIGIN,x
  4434 3B64 E8				inx
  4435 3B65 AD 0A 5F 95 94		mva BN :STACKORIGIN,x
  4436 3B6A 20 F7 2E			jsr A8LIBWIN.WPRINT
  4437 3B6D			@exit
  4438
  4439 				; ------------------------------------------------------------
  4440
  4441 = 5F0A			BN	= DATAORIGIN+$0EF6
  4442 = 5F0B			X	= DATAORIGIN+$0EF7
  4443 = 5F0C			Y	= DATAORIGIN+$0EF8
  4444 = 5F0D			BL	= DATAORIGIN+$0EF9
  4445 = 5F0E			BM	= DATAORIGIN+$0EFA
  4446 = 5F0F			BI	= DATAORIGIN+$0EFB
  4447 = 5F10			BE	= DATAORIGIN+$0EFC
  4448 = 5F11			RESULT	= DATAORIGIN+$0EFD
  4449 = 5F12			BD	= DATAORIGIN+$0EFE
  4450 = 5F13			BK	= DATAORIGIN+$0EFF
  4451 = 5F14			BF	= DATAORIGIN+$0F00
  4452 = 5F15			adr.CL	= [DATAORIGIN+$0F01] .array [5]
  4453 3B6D			.var CL	= adr.CL .word
  4454
  4455 = 5F0A			@VarData	= BN
  4456 = 000F			@VarDataSize	= 15
  4457
  4458 3B6D 60				rts						; ret
  4459 = 3B6E 15 5F		CL
  4459 				.endl
  4460
  4461 3B70			.local	GINPUT						; FUNCTION
  4462
  4463 				; optimize OK (A8LIBGADG), line = 534
  4464
  4465 3B70 A9 00			lda #$00
  4466 3B72 8D 21 5F			sta RESULT
  4467
  4468 				; optimize OK (A8LIBGADG), line = 535
  4469
  4470 3B75 8D 24 5F			sta BD
  4471
  4472 				; optimize OK (A8LIBGADG), line = 536
  4473
  4474 3B78 8D 25 5F			sta BE
  4475
  4476 				; optimize OK (A8LIBGADG), line = 537
  4477
  4478 3B7B 8D 22 5F			sta BF
  4479
  4480 				; optimize OK (A8LIBGADG), line = 540
  4481
  4482 3B7E AC 20 5F			ldy PS+1
  4483 3B81 84 81			sty :bp+1
  4484 3B83 AC 1F 5F			ldy PS
  4485 3B86 B1 80			lda (:bp),y
  4486 3B88 8D 29 5F			sta BZ
  4487
  4488 				; optimize OK (A8LIBGADG), line = 543
  4489
  4490 3B8B AC 20 5F			ldy PS+1
  4491 3B8E 84 81			sty :bp+1
  4492 3B90 AC 1F 5F			ldy PS
  4493 3B93 B1 80			lda (:bp),y
  4494 3B95 85 8C			sta SYSTEM.SETLENGTH.LEN
  4495 3B97 AD 50 40			lda CE
  4496 3B9A 85 88			sta SYSTEM.SETLENGTH.S
  4497 3B9C AD 51 40			lda CE+1
  4498 3B9F 85 89			sta SYSTEM.SETLENGTH.S+1
  4499 3BA1 20 83 27			jsr SYSTEM.SETLENGTH
  4500
  4501 				; optimize OK (A8LIBGADG), line = 544
  4502
  4503 3BA4 AC 20 5F			ldy PS+1
  4504 3BA7 84 81			sty :bp+1
  4505 3BA9 AC 1F 5F			ldy PS
  4506 3BAC B1 80			lda (:bp),y
  4507 3BAE 85 84			sta SYSTEM.MOVE_048D.COUNT
  4508 3BB0 A9 56			lda <adr.CE+$01
  4509 3BB2 85 8C			sta SYSTEM.MOVE_048D.DEST
  4510 3BB4 A9 5F			lda >adr.CE+$01
  4511 3BB6 85 8D			sta SYSTEM.MOVE_048D.DEST+1
  4512 3BB8 AD 1F 5F			lda PS
  4513 3BBB 18 69 01			add #$01
  4514 3BBE 85 88			sta SYSTEM.MOVE_048D.SOURCE
  4515 3BC0 AD 20 5F			lda PS+1
  4516 3BC3 69 00			adc #$00
  4517 3BC5 85 89			sta SYSTEM.MOVE_048D.SOURCE+1
  4518 3BC7 A9 00			lda #$00
  4519 3BC9 85 85			sta SYSTEM.MOVE_048D.COUNT+1
  4520 3BCB				.local +MAIN.SYSTEM.MOVE_048D
  4521 3BCB				m@INLINE
Macro: MAIN.SYSTEM.MOVE_048D.M@INLINE [Source: appdemo.a65]
     4 3BCB 20 78 25			jsr @move
Source: appdemo.a65
  4522 					.endl
  4523
  4524 				; --- WhileProlog
  4525 3BCE 4C F2 3F			jmp l_1729
  4526 3BD1			l_172A
  4527
  4528 				; optimize OK (A8LIBGADG), line = 550
  4529
  4530 3BD1 AD 4E 40			lda CD
  4531 3BD4 85 88			sta SYSTEM.SETLENGTH.S
  4532 3BD6 AD 4F 40			lda CD+1
  4533 3BD9 85 89			sta SYSTEM.SETLENGTH.S+1
  4534 3BDB AD 1E 5F			lda BS
  4535 3BDE 85 8C			sta SYSTEM.SETLENGTH.LEN
  4536 3BE0 20 83 27			jsr SYSTEM.SETLENGTH
  4537
  4538 				; optimize OK (A8LIBGADG), line = 551
  4539
  4540 3BE3 A9 2C			lda <adr.CD+$01
  4541 3BE5 85 8C			sta SYSTEM.MOVE_048D.DEST
  4542 3BE7 A9 5F			lda >adr.CD+$01
  4543 3BE9 85 8D			sta SYSTEM.MOVE_048D.DEST+1
  4544 3BEB AD 24 5F			lda BD
  4545 3BEE 18 69 01			add #$01
  4546 3BF1 85 9F			sta :STACKORIGIN+11
  4547 3BF3 A9 00			lda #$00
  4548 3BF5 69 00			adc #$00
  4549 3BF7 85 AF			sta :STACKORIGIN+STACKWIDTH+11
  4550 3BF9 A9 55			lda <adr.CE
  4551 3BFB 18 65 9F			add :STACKORIGIN+11
  4552 3BFE 85 88			sta SYSTEM.MOVE_048D.SOURCE
  4553 3C00 A9 5F			lda >adr.CE
  4554 3C02 65 AF			adc :STACKORIGIN+STACKWIDTH+11
  4555 3C04 85 89			sta SYSTEM.MOVE_048D.SOURCE+1
  4556 3C06 AD 1E 5F			lda BS
  4557 3C09 85 84			sta SYSTEM.MOVE_048D.COUNT
  4558 3C0B A9 00			lda #$00
  4559 3C0D 85 85			sta SYSTEM.MOVE_048D.COUNT+1
  4560 3C0F				.local +MAIN.SYSTEM.MOVE_048D
  4561 3C0F				m@INLINE
Macro: MAIN.SYSTEM.MOVE_048D.M@INLINE [Source: appdemo.a65]
     4 3C0F 20 78 25			jsr @move
Source: appdemo.a65
  4562 					.endl
  4563
  4564 				; optimize OK (A8LIBGADG), line = 554
  4565
  4566 3C12 AD 25 5F			lda BE
  4567 3C15 38 ED 24 5F			sub BD
  4568 3C19 8D 2A 5F			sta BI
  4569
  4570 				; optimize OK (A8LIBGADG), line = 555
  4571
  4572 3C1C AD 1E 5F			lda BS
  4573 3C1F 38 E9 01			sub #$01
  4574 3C22 CD 2A 5F			cmp BI
  4575 3C25 B0 07			jcs l_1760
  4576
  4577 				; optimize OK (A8LIBGADG), line = 557
  4578
  4579 3C27 AC 1E 5F			ldy BS
  4580 3C2A 88				dey
  4581 3C2B 8C 2A 5F			sty BI
  4582 3C2E			l_1760
  4583
  4584 				; optimize OK (A8LIBGADG), line = 559
  4585
  4586 3C2E AC 2A 5F			ldy BI
  4587 3C31 B9 2C 5F			lda adr.CD+$01,y
  4588 3C34 49 80			eor #$80
  4589 3C36 99 2C 5F			sta adr.CD+$01,y
  4590
  4591 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 562
  4592
  4593 3C39 E8				inx
  4594 3C3A AD 4E 40 95 94		mva CD :STACKORIGIN,x
  4595 3C3F AD 4F 40 95 A4		mva CD+1 :STACKORIGIN+STACKWIDTH,x
  4596 3C44 E8				inx
  4597 3C45 A9 01 95 94			mva #$01 :STACKORIGIN,x
  4598 3C49 E8				inx
  4599 3C4A AD 1C 5F 95 94		mva Y :STACKORIGIN,x
  4600 3C4F E8				inx
  4601 3C50 AD 1B 5F 95 94		mva X :STACKORIGIN,x
  4602 3C55 E8				inx
  4603 3C56 AD 1A 5F 95 94		mva BN :STACKORIGIN,x
  4604 3C5B 20 F7 2E			jsr A8LIBWIN.WPRINT
  4605
  4606 				; optimize OK (A8LIBGADG), line = 565
  4607
  4608 3C5E A9 00			lda #$00
  4609 3C60 20 0B 28			jsr A8LIBMISC.WAITKCX
  4610 3C63 AD 28 50			lda A8LIBMISC.WAITKCX.RESULT
  4611 3C66 8D 26 5F			sta BK
  4612
  4613 				; optimize OK (A8LIBGADG), line = 568
  4614
  4615 3C69 20 EF 27			jsr A8LIBMISC.IKC2ATA
  4616 3C6C AD 26 50			lda A8LIBMISC.IKC2ATA.RESULT
  4617 3C6F 8D 27 5F			sta BC
  4618
  4619 				; optimize OK (A8LIBGADG), line = 571
  4620
  4621 3C72 AD 26 5F			lda BK
  4622 3C75 C9 87			cmp #$87
  4623 3C77 D0 06			jne l_17B0
  4624
  4625 				; optimize FAIL (0, A8LIBGADG), line = 573
  4626
  4627 3C79 EE 25 5F			inc BE
  4628 3C7C 4C BE 3F			jmp l_17BE
  4629 3C7F			l_17B0
  4630
  4631 				; optimize OK (A8LIBGADG), line = 576
  4632
  4633 3C7F AD 26 5F			lda BK
  4634 3C82 C9 86			cmp #$86
  4635 3C84 D0 0B			jne l_17D0
  4636
  4637 				; optimize OK (A8LIBGADG), line = 579
  4638
  4639 3C86 AD 25 5F			lda BE
  4640 3C89 F0 03			jeq l_17E3
  4641
  4642 				; optimize FAIL (0, A8LIBGADG), line = 581
  4643
  4644 3C8B CE 25 5F			dec BE
  4645 3C8E			l_17E3
  4646 3C8E 4C BE 3F			jmp l_17F3
  4647 3C91			l_17D0
  4648
  4649 				; optimize OK (A8LIBGADG), line = 585
  4650
  4651 3C91 AD 26 5F			lda BK
  4652 3C94 C9 FE			cmp #$FE
  4653 3C96 D0 08			jne l_1805
  4654
  4655 				; optimize OK (A8LIBGADG), line = 587
  4656
  4657 3C98 A9 00			lda #$00
  4658 3C9A 8D 25 5F			sta BE
  4659 3C9D 4C BE 3F			jmp l_1813
  4660 3CA0			l_1805
  4661
  4662 				; optimize OK (A8LIBGADG), line = 590
  4663
  4664 3CA0 AD 26 5F			lda BK
  4665 3CA3 C9 EA			cmp #$EA
  4666 3CA5 D0 09			jne l_1825
  4667
  4668 				; optimize OK (A8LIBGADG), line = 592
  4669
  4670 3CA7 AD 29 5F			lda BZ
  4671 3CAA 8D 25 5F			sta BE
  4672 3CAD 4C BE 3F			jmp l_1835
  4673 3CB0			l_1825
  4674
  4675 				; optimize OK (A8LIBGADG), line = 596
  4676
  4677 3CB0 AD 26 5F			lda BK
  4678 3CB3 C9 34			cmp #$34
  4679 3CB5 D0 13			jne l_1847
  4680
  4681 				; optimize OK (A8LIBGADG), line = 599
  4682
  4683 3CB7 AD 25 5F			lda BE
  4684 3CBA F0 0B			jeq l_185A
  4685
  4686 				; optimize FAIL (0, A8LIBGADG), line = 601
  4687
  4688 3CBC CE 25 5F			dec BE
  4689
  4690 				; optimize OK (A8LIBGADG), line = 602
  4691
  4692 3CBF AC 25 5F			ldy BE
  4693 3CC2 A9 20			lda #$20
  4694 3CC4 99 56 5F			sta adr.CE+$01,y
  4695 3CC7			l_185A
  4696 3CC7 4C BE 3F			jmp l_1875
  4697 3CCA			l_1847
  4698
  4699 				; optimize OK (A8LIBGADG), line = 606
  4700
  4701 3CCA AD 26 5F			lda BK
  4702 3CCD C9 74			cmp #$74
  4703 3CCF D0 1B			jne l_1887
  4704
  4705 				; optimize OK (A8LIBGADG), line = 608
  4706
  4707 3CD1 A9 56			lda <adr.CE+$01
  4708 3CD3 85 88			sta SYSTEM.FILLCHAR_048B.A
  4709 3CD5 A9 5F			lda >adr.CE+$01
  4710 3CD7 85 89			sta SYSTEM.FILLCHAR_048B.A+1
  4711 3CD9 AD 29 5F			lda BZ
  4712 3CDC 85 8C			sta SYSTEM.FILLCHAR_048B.COUNT
  4713 3CDE A9 00			lda #$00
  4714 3CE0 85 8D			sta SYSTEM.FILLCHAR_048B.COUNT+1
  4715 3CE2 A9 20			lda #$20
  4716 3CE4 85 84			sta SYSTEM.FILLCHAR_048B.VALUE
  4717 3CE6				.local +MAIN.SYSTEM.FILLCHAR_048B
  4718 3CE6				m@INLINE
Macro: MAIN.SYSTEM.FILLCHAR_048B.M@INLINE [Source: appdemo.a65]
     4 3CE6 20 CD 25			jsr @fill
Source: appdemo.a65
  4719 					.endl
  4720 3CE9 4C BE 3F			jmp l_1897
  4721 3CEC			l_1887
  4722
  4723 				; optimize OK (A8LIBGADG), line = 611
  4724
  4725 3CEC AD 26 5F			lda BK
  4726 3CEF C9 B4			cmp #$B4
  4727 3CF1 D0 40			jne l_18A9
  4728
  4729 				; optimize OK (A8LIBGADG), line = 614
  4730
  4731 3CF3 AD 50 40			lda CE
  4732 3CF6 85 88			sta SYSTEM.SETLENGTH.S
  4733 3CF8 AD 51 40			lda CE+1
  4734 3CFB 85 89			sta SYSTEM.SETLENGTH.S+1
  4735 3CFD AD 29 5F			lda BZ
  4736 3D00 85 8C			sta SYSTEM.SETLENGTH.LEN
  4737 3D02 20 83 27			jsr SYSTEM.SETLENGTH
  4738
  4739 				; optimize OK (A8LIBGADG), line = 615
  4740
  4741 3D05 AC 25 5F			ldy BE
  4742 3D08 C8				iny
  4743 3D09 8C 28 5F			sty BL
  4744 3D0C AC 29 5F			ldy BZ
  4745 3D0F 88				dey
  4746 3D10 8C 14 3D			sty @FORTMP_18C2_0
  4747
  4748 3D13			l_18C5
  4749 				; --- ForToDoCondition
  4750 3D13 A9 00			lda @FORTMP_18C2_0:#$00
  4751 3D15 CD 28 5F			cmp BL
  4752 3D18 90 0E			jcc l_18D3
  4753
  4754 				; optimize OK (A8LIBGADG), line = 617
  4755
  4756 3D1A AC 28 5F			ldy BL
  4757 3D1D B9 56 5F			lda adr.CE+$01,y
  4758 3D20 99 55 5F			sta adr.CE,y
  4759
  4760 				; --- ForToDoEpilog
  4761 3D23 EE 28 5F			inc BL
  4762 3D26 D0 EB			jne l_18C5
  4763 3D28			l_18D3
  4764
  4765 				; optimize OK (A8LIBGADG), line = 621
  4766
  4767 3D28 AC 29 5F			ldy BZ
  4768 3D2B A9 20			lda #$20
  4769 3D2D 99 55 5F			sta adr.CE,y
  4770 3D30 4C BE 3F			jmp l_18F8
  4771 3D33			l_18A9
  4772
  4773 				; optimize OK (A8LIBGADG), line = 624
  4774
  4775 3D33 AD 26 5F			lda BK
  4776 3D36 C9 B7			cmp #$B7
  4777 3D38 D0 37			jne l_190A
  4778
  4779 				; optimize OK (A8LIBGADG), line = 627
  4780
  4781 3D3A AD 25 5F			lda BE
  4782 3D3D CD 29 5F			cmp BZ
  4783 3D40 B0 2C			jcs l_191F
  4784
  4785 				; optimize OK (A8LIBGADG), line = 630
  4786
  4787 3D42 AD 29 5F			lda BZ
  4788 3D45 8D 28 5F			sta BL
  4789
  4790 				; --- WhileProlog
  4791 3D48 4C 57 3D			jmp l_1928
  4792 3D4B			l_1929
  4793
  4794 				; optimize OK (A8LIBGADG), line = 633
  4795
  4796 3D4B AC 28 5F			ldy BL
  4797 3D4E B9 55 5F			lda adr.CE,y
  4798 3D51 99 56 5F			sta adr.CE+$01,y
  4799
  4800 				; optimize FAIL (0, A8LIBGADG), line = 634
  4801
  4802 3D54 CE 28 5F			dec BL
  4803 3D57			l_1928
  4804
  4805 				; optimize OK (A8LIBGADG), line = 631
  4806
  4807 3D57 AD 25 5F			lda BE
  4808 3D5A 18 69 01			add #$01
  4809 3D5D 85 9E			sta :STACKORIGIN+10
  4810 3D5F AD 28 5F			lda BL
  4811 3D62 C5 9E			cmp :STACKORIGIN+10
  4812 3D64 90 E5			jcc l_1929
  4813
  4814 				; optimize OK (A8LIBGADG), line = 638
  4815
  4816 3D66 AC 25 5F			ldy BE
  4817 3D69 A9 20			lda #$20
  4818 3D6B 99 56 5F			sta adr.CE+$01,y
  4819 3D6E			l_191F
  4820 3D6E 4C BE 3F			jmp l_1965
  4821 3D71			l_190A
  4822
  4823 				; optimize OK (A8LIBGADG), line = 642
  4824
  4825 3D71 AD 26 5F			lda BK
  4826 3D74 C9 0C			cmp #$0C
  4827 3D76 D0 40			jne l_1977
  4828
  4829 				; optimize OK (A8LIBGADG), line = 645
  4830
  4831 3D78 AD 55 5F			lda adr.CE
  4832 3D7B 85 8C			sta SYSTEM.SETLENGTH.LEN
  4833 3D7D AD 1F 5F			lda PS
  4834 3D80 85 88			sta SYSTEM.SETLENGTH.S
  4835 3D82 AD 20 5F			lda PS+1
  4836 3D85 85 89			sta SYSTEM.SETLENGTH.S+1
  4837 3D87 20 83 27			jsr SYSTEM.SETLENGTH
  4838
  4839 				; optimize OK (A8LIBGADG), line = 646
  4840
  4841 3D8A AD 55 5F			lda adr.CE
  4842 3D8D 85 84			sta SYSTEM.MOVE_048D.COUNT
  4843 3D8F AD 1F 5F			lda PS
  4844 3D92 18 69 01			add #$01
  4845 3D95 85 8C			sta SYSTEM.MOVE_048D.DEST
  4846 3D97 AD 20 5F			lda PS+1
  4847 3D9A 69 00			adc #$00
  4848 3D9C 85 8D			sta SYSTEM.MOVE_048D.DEST+1
  4849 3D9E A9 56			lda <adr.CE+$01
  4850 3DA0 85 88			sta SYSTEM.MOVE_048D.SOURCE
  4851 3DA2 A9 5F			lda >adr.CE+$01
  4852 3DA4 85 89			sta SYSTEM.MOVE_048D.SOURCE+1
  4853 3DA6 A9 00			lda #$00
  4854 3DA8 85 85			sta SYSTEM.MOVE_048D.COUNT+1
  4855 3DAA				.local +MAIN.SYSTEM.MOVE_048D
  4856 3DAA				m@INLINE
Macro: MAIN.SYSTEM.MOVE_048D.M@INLINE [Source: appdemo.a65]
     4 3DAA 20 78 25			jsr @move
Source: appdemo.a65
  4857 					.endl
  4858
  4859 				; optimize OK (A8LIBGADG), line = 647
  4860
  4861 3DAD A9 01			lda #$01
  4862 3DAF 8D 21 5F			sta RESULT
  4863
  4864 				; optimize OK (A8LIBGADG), line = 648
  4865
  4866 3DB2 8D 22 5F			sta BF
  4867 3DB5 4C BE 3F			jmp l_198F
  4868 3DB8			l_1977
  4869
  4870 				; optimize OK (A8LIBGADG), line = 651
  4871
  4872 3DB8 AD 26 5F			lda BK
  4873 3DBB C9 1C			cmp #$1C
  4874 3DBD D0 49			jne l_19A1
  4875
  4876 				; optimize OK (A8LIBGADG), line = 654
  4877
  4878 3DBF AC 20 5F			ldy PS+1
  4879 3DC2 84 81			sty :bp+1
  4880 3DC4 AC 1F 5F			ldy PS
  4881 3DC7 B1 80			lda (:bp),y
  4882 3DC9 85 8C			sta SYSTEM.SETLENGTH.LEN
  4883 3DCB AD 50 40			lda CE
  4884 3DCE 85 88			sta SYSTEM.SETLENGTH.S
  4885 3DD0 AD 51 40			lda CE+1
  4886 3DD3 85 89			sta SYSTEM.SETLENGTH.S+1
  4887 3DD5 20 83 27			jsr SYSTEM.SETLENGTH
  4888
  4889 				; optimize OK (A8LIBGADG), line = 655
  4890
  4891 3DD8 AD 55 5F			lda adr.CE
  4892 3DDB 85 84			sta SYSTEM.MOVE_048D.COUNT
  4893 3DDD A9 56			lda <adr.CE+$01
  4894 3DDF 85 8C			sta SYSTEM.MOVE_048D.DEST
  4895 3DE1 A9 5F			lda >adr.CE+$01
  4896 3DE3 85 8D			sta SYSTEM.MOVE_048D.DEST+1
  4897 3DE5 AD 1F 5F			lda PS
  4898 3DE8 18 69 01			add #$01
  4899 3DEB 85 88			sta SYSTEM.MOVE_048D.SOURCE
  4900 3DED AD 20 5F			lda PS+1
  4901 3DF0 69 00			adc #$00
  4902 3DF2 85 89			sta SYSTEM.MOVE_048D.SOURCE+1
  4903 3DF4 A9 00			lda #$00
  4904 3DF6 85 85			sta SYSTEM.MOVE_048D.COUNT+1
  4905 3DF8				.local +MAIN.SYSTEM.MOVE_048D
  4906 3DF8				m@INLINE
Macro: MAIN.SYSTEM.MOVE_048D.M@INLINE [Source: appdemo.a65]
     4 3DF8 20 78 25			jsr @move
Source: appdemo.a65
  4907 					.endl
  4908
  4909 				; optimize OK (A8LIBGADG), line = 656
  4910
  4911 3DFB A9 FD			lda #$FD
  4912 3DFD 8D 21 5F			sta RESULT
  4913
  4914 				; optimize OK (A8LIBGADG), line = 657
  4915
  4916 3E00 A9 01			lda #$01
  4917 3E02 8D 22 5F			sta BF
  4918 3E05 4C BE 3F			jmp l_19B9
  4919 3E08			l_19A1
  4920
  4921 				; optimize OK (A8LIBGADG), line = 660
  4922
  4923 3E08 AD 26 5F			lda BK
  4924 3E0B C9 2C			cmp #$2C
  4925 3E0D D0 49			jne l_19CB
  4926
  4927 				; optimize OK (A8LIBGADG), line = 663
  4928
  4929 3E0F AC 20 5F			ldy PS+1
  4930 3E12 84 81			sty :bp+1
  4931 3E14 AC 1F 5F			ldy PS
  4932 3E17 B1 80			lda (:bp),y
  4933 3E19 85 8C			sta SYSTEM.SETLENGTH.LEN
  4934 3E1B AD 50 40			lda CE
  4935 3E1E 85 88			sta SYSTEM.SETLENGTH.S
  4936 3E20 AD 51 40			lda CE+1
  4937 3E23 85 89			sta SYSTEM.SETLENGTH.S+1
  4938 3E25 20 83 27			jsr SYSTEM.SETLENGTH
  4939
  4940 				; optimize OK (A8LIBGADG), line = 664
  4941
  4942 3E28 AD 55 5F			lda adr.CE
  4943 3E2B 85 84			sta SYSTEM.MOVE_048D.COUNT
  4944 3E2D A9 56			lda <adr.CE+$01
  4945 3E2F 85 8C			sta SYSTEM.MOVE_048D.DEST
  4946 3E31 A9 5F			lda >adr.CE+$01
  4947 3E33 85 8D			sta SYSTEM.MOVE_048D.DEST+1
  4948 3E35 AD 1F 5F			lda PS
  4949 3E38 18 69 01			add #$01
  4950 3E3B 85 88			sta SYSTEM.MOVE_048D.SOURCE
  4951 3E3D AD 20 5F			lda PS+1
  4952 3E40 69 00			adc #$00
  4953 3E42 85 89			sta SYSTEM.MOVE_048D.SOURCE+1
  4954 3E44 A9 00			lda #$00
  4955 3E46 85 85			sta SYSTEM.MOVE_048D.COUNT+1
  4956 3E48				.local +MAIN.SYSTEM.MOVE_048D
  4957 3E48				m@INLINE
Macro: MAIN.SYSTEM.MOVE_048D.M@INLINE [Source: appdemo.a65]
     4 3E48 20 78 25			jsr @move
Source: appdemo.a65
  4958 					.endl
  4959
  4960 				; optimize OK (A8LIBGADG), line = 665
  4961
  4962 3E4B A9 FE			lda #$FE
  4963 3E4D 8D 21 5F			sta RESULT
  4964
  4965 				; optimize OK (A8LIBGADG), line = 666
  4966
  4967 3E50 A9 01			lda #$01
  4968 3E52 8D 22 5F			sta BF
  4969 3E55 4C BE 3F			jmp l_19E3
  4970 3E58			l_19CB
  4971
  4972 				; optimize OK (A8LIBGADG), line = 670
  4973
  4974 3E58 AD 27 5F			lda BC
  4975 3E5B C9 01			cmp #$01
  4976 3E5D B0 03 4C BE 3F		jcc l_1A01
  4977 3E62 A9 BF			lda #$BF
  4978 3E64 CD 27 5F			cmp BC
  4979 3E67 B0 03 4C BE 3F		jcc l_1A01
  4980
  4981 				; optimize OK (A8LIBGADG), line = 673
  4982
  4983 3E6C A9 00			lda #$00
  4984 3E6E 8D 23 5F			sta BP
  4985
  4986 				; optimize OK (A8LIBGADG), line = 677
  4987
  4988 3E71 A0 01			ldy #1
  4989 3E73 AD 1D 5F			lda BT
  4990 3E76 F0 01			beq @+
  4991 3E78 88				dey
  4992 				@
  4993 3E79 84 9D			sty :STACKORIGIN+9
  4994 3E7B A0 01			ldy #1
  4995 3E7D AD 27 5F			lda BC
  4996 3E80 C9 1C			cmp #$1C
  4997 3E82 90 03			bcc @+
  4998 3E84 F0 01			beq @+
  4999 3E86 88				dey
  5000 				@
  5001 3E87 84 9E			sty :STACKORIGIN+10
  5002 3E89 A0 01			ldy #1
  5003 3E8B AD 27 5F			lda BC
  5004 3E8E C9 20			cmp #$20
  5005 3E90 B0 01			bcs @+
  5006 3E92 88				dey
  5007 				@
  5008 3E93 98				tya
  5009 3E94 05 9E			ora :STACKORIGIN+10
  5010 3E96 25 9D			and :STACKORIGIN+9
  5011 3E98 F0 08			jeq l_1A30
  5012
  5013 				; optimize OK (A8LIBGADG), line = 679
  5014
  5015 3E9A A9 01			lda #$01
  5016 3E9C 8D 23 5F			sta BP
  5017 3E9F 4C AD 3F			jmp l_1A3E
  5018 3EA2			l_1A30
  5019
  5020 				; optimize OK (A8LIBGADG), line = 682
  5021
  5022 3EA2 AD 1D 5F			lda BT
  5023 3EA5 C9 01			cmp #$01
  5024 3EA7 D0 6B			jne l_1A50
  5025
  5026 				; optimize OK (A8LIBGADG), line = 684
  5027
  5028 3EA9 A0 01			ldy #1
  5029 3EAB AD 27 5F			lda BC
  5030 3EAE C9 20			cmp #$20
  5031 3EB0 F0 01			beq @+
  5032 3EB2 88				dey
  5033 				@
  5034 3EB3 84 9D			sty :STACKORIGIN+9
  5035 3EB5 A0 01			ldy #1
  5036 3EB7 AD 27 5F			lda BC
  5037 3EBA C9 30			cmp #$30
  5038 3EBC B0 01			bcs @+
  5039 3EBE 88				dey
  5040 				@
  5041 3EBF 84 9E			sty :STACKORIGIN+10
  5042 3EC1 A0 01			ldy #1
  5043 3EC3 A9 39			lda #$39
  5044 3EC5 CD 27 5F			cmp BC
  5045 3EC8 B0 01			bcs @+
  5046 3ECA 88				dey
  5047 				@
  5048 3ECB 98				tya
  5049 3ECC 25 9E			and :STACKORIGIN+10
  5050 3ECE 05 9D			ora :STACKORIGIN+9
  5051 3ED0 85 9D			sta :STACKORIGIN+9
  5052 3ED2 A0 01			ldy #1
  5053 3ED4 AD 27 5F			lda BC
  5054 3ED7 C9 41			cmp #$41
  5055 3ED9 B0 01			bcs @+
  5056 3EDB 88				dey
  5057 				@
  5058 3EDC 84 9E			sty :STACKORIGIN+10
  5059 3EDE A0 01			ldy #1
  5060 3EE0 A9 5A			lda #$5A
  5061 3EE2 CD 27 5F			cmp BC
  5062 3EE5 B0 01			bcs @+
  5063 3EE7 88				dey
  5064 				@
  5065 3EE8 98				tya
  5066 3EE9 25 9E			and :STACKORIGIN+10
  5067 3EEB 05 9D			ora :STACKORIGIN+9
  5068 3EED 85 9D			sta :STACKORIGIN+9
  5069 3EEF A0 01			ldy #1
  5070 3EF1 AD 27 5F			lda BC
  5071 3EF4 C9 61			cmp #$61
  5072 3EF6 B0 01			bcs @+
  5073 3EF8 88				dey
  5074 				@
  5075 3EF9 84 9E			sty :STACKORIGIN+10
  5076 3EFB A0 01			ldy #1
  5077 3EFD A9 7A			lda #$7A
  5078 3EFF CD 27 5F			cmp BC
  5079 3F02 B0 01			bcs @+
  5080 3F04 88				dey
  5081 				@
  5082 3F05 98				tya
  5083 3F06 25 9E			and :STACKORIGIN+10
  5084 3F08 05 9D			ora :STACKORIGIN+9
  5085 3F0A F0 05			jeq l_1AAB
  5086
  5087 				; optimize OK (A8LIBGADG), line = 688
  5088
  5089 3F0C A9 01			lda #$01
  5090 3F0E 8D 23 5F			sta BP
  5091 3F11			l_1AAB
  5092 3F11 4C AD 3F			jmp l_1ABB
  5093 3F14			l_1A50
  5094
  5095 				; optimize OK (A8LIBGADG), line = 692
  5096
  5097 3F14 AD 1D 5F			lda BT
  5098 3F17 C9 02			cmp #$02
  5099 3F19 D0 4E			jne l_1ACD
  5100
  5101 				; optimize OK (A8LIBGADG), line = 694
  5102
  5103 3F1B A0 01			ldy #1
  5104 3F1D AD 27 5F			lda BC
  5105 3F20 C9 20			cmp #$20
  5106 3F22 F0 01			beq @+
  5107 3F24 88				dey
  5108 				@
  5109 3F25 84 9D			sty :STACKORIGIN+9
  5110 3F27 A0 01			ldy #1
  5111 3F29 AD 27 5F			lda BC
  5112 3F2C C9 41			cmp #$41
  5113 3F2E B0 01			bcs @+
  5114 3F30 88				dey
  5115 				@
  5116 3F31 84 9E			sty :STACKORIGIN+10
  5117 3F33 A0 01			ldy #1
  5118 3F35 A9 5A			lda #$5A
  5119 3F37 CD 27 5F			cmp BC
  5120 3F3A B0 01			bcs @+
  5121 3F3C 88				dey
  5122 				@
  5123 3F3D 98				tya
  5124 3F3E 25 9E			and :STACKORIGIN+10
  5125 3F40 05 9D			ora :STACKORIGIN+9
  5126 3F42 85 9D			sta :STACKORIGIN+9
  5127 3F44 A0 01			ldy #1
  5128 3F46 AD 27 5F			lda BC
  5129 3F49 C9 61			cmp #$61
  5130 3F4B B0 01			bcs @+
  5131 3F4D 88				dey
  5132 				@
  5133 3F4E 84 9E			sty :STACKORIGIN+10
  5134 3F50 A0 01			ldy #1
  5135 3F52 A9 7A			lda #$7A
  5136 3F54 CD 27 5F			cmp BC
  5137 3F57 B0 01			bcs @+
  5138 3F59 88				dey
  5139 				@
  5140 3F5A 98				tya
  5141 3F5B 25 9E			and :STACKORIGIN+10
  5142 3F5D 05 9D			ora :STACKORIGIN+9
  5143 3F5F F0 05			jeq l_1B10
  5144
  5145 				; optimize OK (A8LIBGADG), line = 697
  5146
  5147 3F61 A9 01			lda #$01
  5148 3F63 8D 23 5F			sta BP
  5149 3F66			l_1B10
  5150 3F66 4C AD 3F			jmp l_1B20
  5151 3F69			l_1ACD
  5152
  5153 				; optimize OK (A8LIBGADG), line = 701
  5154
  5155 3F69 AD 1D 5F			lda BT
  5156 3F6C C9 03			cmp #$03
  5157 3F6E D0 3D			jne l_1B32
  5158
  5159 				; optimize OK (A8LIBGADG), line = 703
  5160
  5161 3F70 A0 01			ldy #1
  5162 3F72 AD 27 5F			lda BC
  5163 3F75 C9 2D			cmp #$2D
  5164 3F77 F0 01			beq @+
  5165 3F79 88				dey
  5166 				@
  5167 3F7A 84 9D			sty :STACKORIGIN+9
  5168 3F7C A0 01			ldy #1
  5169 3F7E AD 27 5F			lda BC
  5170 3F81 C9 2E			cmp #$2E
  5171 3F83 F0 01			beq @+
  5172 3F85 88				dey
  5173 				@
  5174 3F86 98				tya
  5175 3F87 05 9D			ora :STACKORIGIN+9
  5176 3F89 85 9D			sta :STACKORIGIN+9
  5177 3F8B A0 01			ldy #1
  5178 3F8D AD 27 5F			lda BC
  5179 3F90 C9 30			cmp #$30
  5180 3F92 B0 01			bcs @+
  5181 3F94 88				dey
  5182 				@
  5183 3F95 84 9E			sty :STACKORIGIN+10
  5184 3F97 A0 01			ldy #1
  5185 3F99 A9 39			lda #$39
  5186 3F9B CD 27 5F			cmp BC
  5187 3F9E B0 01			bcs @+
  5188 3FA0 88				dey
  5189 				@
  5190 3FA1 98				tya
  5191 3FA2 25 9E			and :STACKORIGIN+10
  5192 3FA4 05 9D			ora :STACKORIGIN+9
  5193 3FA6 F0 05			jeq l_1B69
  5194
  5195 				; optimize OK (A8LIBGADG), line = 706
  5196
  5197 3FA8 A9 01			lda #$01
  5198 3FAA 8D 23 5F			sta BP
  5199 3FAD			l_1B69
  5200 3FAD			l_1B32
  5201 3FAD			l_1B20
  5202 3FAD			l_1ABB
  5203 3FAD			l_1A3E
  5204
  5205 				; optimize OK (A8LIBGADG), line = 711
  5206
  5207 3FAD AD 23 5F			lda BP
  5208 3FB0 F0 0C			jeq l_1B7E
  5209
  5210 				; optimize OK (A8LIBGADG), line = 713
  5211
  5212 3FB2 AC 25 5F			ldy BE
  5213 3FB5 AD 27 5F			lda BC
  5214 3FB8 99 56 5F			sta adr.CE+$01,y
  5215
  5216 				; optimize FAIL (0, A8LIBGADG), line = 714
  5217
  5218 3FBB EE 25 5F			inc BE
  5219 3FBE			l_1B7E
  5220 3FBE			l_1A01
  5221 3FBE			l_19E3
  5222 3FBE			l_19B9
  5223 3FBE			l_198F
  5224 3FBE			l_1965
  5225 3FBE			l_18F8
  5226 3FBE			l_1897
  5227 3FBE			l_1875
  5228 3FBE			l_1835
  5229 3FBE			l_1813
  5230 3FBE			l_17F3
  5231 3FBE			l_17BE
  5232
  5233 				; optimize OK (A8LIBGADG), line = 721
  5234
  5235 3FBE AD 29 5F			lda BZ
  5236 3FC1 38 E9 01			sub #$01
  5237 3FC4 CD 25 5F			cmp BE
  5238 3FC7 B0 07			jcs l_1BAC
  5239
  5240 				; optimize OK (A8LIBGADG), line = 723
  5241
  5242 3FC9 AC 29 5F			ldy BZ
  5243 3FCC 88				dey
  5244 3FCD 8C 25 5F			sty BE
  5245 3FD0			l_1BAC
  5246
  5247 				; optimize OK (A8LIBGADG), line = 727
  5248
  5249 3FD0 AD 25 5F			lda BE
  5250 3FD3 CD 1E 5F			cmp BS
  5251 3FD6 90 0D			jcc l_1BCD
  5252
  5253 				; optimize OK (A8LIBGADG), line = 729
  5254
  5255 3FD8 38 ED 1E 5F			sub BS
  5256 3FDC 18 69 01			add #$01
  5257 3FDF 8D 24 5F			sta BD
  5258 3FE2 4C F2 3F			jmp l_1BE7
  5259 3FE5			l_1BCD
  5260
  5261 				; optimize OK (A8LIBGADG), line = 732
  5262
  5263 3FE5 AD 25 5F			lda BE
  5264 3FE8 CD 1E 5F			cmp BS
  5265 3FEB B0 05			jcs l_1BFB
  5266
  5267 				; optimize OK (A8LIBGADG), line = 734
  5268
  5269 3FED A9 00			lda #$00
  5270 3FEF 8D 24 5F			sta BD
  5271 3FF2			l_1BFB
  5272 3FF2			l_1BE7
  5273 3FF2			l_1729
  5274
  5275 				; optimize OK (A8LIBGADG), line = 547
  5276
  5277 3FF2 AD 22 5F			lda BF
  5278 3FF5 D0 03 4C D1 3B		jeq l_172A
  5279
  5280 				; optimize OK (A8LIBGADG), line = 739
  5281
  5282 3FFA AD 4E 40			lda CD
  5283 3FFD 85 88			sta SYSTEM.SETLENGTH.S
  5284 3FFF AD 4F 40			lda CD+1
  5285 4002 85 89			sta SYSTEM.SETLENGTH.S+1
  5286 4004 AD 1E 5F			lda BS
  5287 4007 85 8C			sta SYSTEM.SETLENGTH.LEN
  5288 4009 20 83 27			jsr SYSTEM.SETLENGTH
  5289
  5290 				; optimize OK (A8LIBGADG), line = 740
  5291
  5292 400C A9 2C			lda <adr.CD+$01
  5293 400E 85 8C			sta SYSTEM.MOVE_048D.DEST
  5294 4010 A9 5F			lda >adr.CD+$01
  5295 4012 85 8D			sta SYSTEM.MOVE_048D.DEST+1
  5296 4014 A9 56			lda <adr.CE+$01
  5297 4016 85 88			sta SYSTEM.MOVE_048D.SOURCE
  5298 4018 A9 5F			lda >adr.CE+$01
  5299 401A 85 89			sta SYSTEM.MOVE_048D.SOURCE+1
  5300 401C AD 1E 5F			lda BS
  5301 401F 85 84			sta SYSTEM.MOVE_048D.COUNT
  5302 4021 A9 00			lda #$00
  5303 4023 85 85			sta SYSTEM.MOVE_048D.COUNT+1
  5304 4025				.local +MAIN.SYSTEM.MOVE_048D
  5305 4025				m@INLINE
Macro: MAIN.SYSTEM.MOVE_048D.M@INLINE [Source: appdemo.a65]
     4 4025 20 78 25			jsr @move
Source: appdemo.a65
  5306 					.endl
  5307
  5308 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBGADG), line = 741
  5309
  5310 4028 E8				inx
  5311 4029 AD 4E 40 95 94		mva CD :STACKORIGIN,x
  5312 402E AD 4F 40 95 A4		mva CD+1 :STACKORIGIN+STACKWIDTH,x
  5313 4033 E8				inx
  5314 4034 A9 00 95 94			mva #$00 :STACKORIGIN,x
  5315 4038 E8				inx
  5316 4039 AD 1C 5F 95 94		mva Y :STACKORIGIN,x
  5317 403E E8				inx
  5318 403F AD 1B 5F 95 94		mva X :STACKORIGIN,x
  5319 4044 E8				inx
  5320 4045 AD 1A 5F 95 94		mva BN :STACKORIGIN,x
  5321 404A 20 F7 2E			jsr A8LIBWIN.WPRINT
  5322 404D			@exit
  5323
  5324 				; ------------------------------------------------------------
  5325
  5326 = 5F1A			BN	= DATAORIGIN+$0F06
  5327 = 5F1B			X	= DATAORIGIN+$0F07
  5328 = 5F1C			Y	= DATAORIGIN+$0F08
  5329 = 5F1D			BT	= DATAORIGIN+$0F09
  5330 = 5F1E			BS	= DATAORIGIN+$0F0A
  5331 = 5F1F			PS	= DATAORIGIN+$0F0B
  5332 = 5F21			RESULT	= DATAORIGIN+$0F0D
  5333 = 5F22			BF	= DATAORIGIN+$0F0E
  5334 = 5F23			BP	= DATAORIGIN+$0F0F
  5335 = 5F24			BD	= DATAORIGIN+$0F10
  5336 = 5F25			BE	= DATAORIGIN+$0F11
  5337 = 5F26			BK	= DATAORIGIN+$0F12
  5338 = 5F27			BC	= DATAORIGIN+$0F13
  5339 = 5F28			BL	= DATAORIGIN+$0F14
  5340 = 5F29			BZ	= DATAORIGIN+$0F15
  5341 = 5F2A			BI	= DATAORIGIN+$0F16
  5342 = 5F2B			adr.CD	= [DATAORIGIN+$0F17] .array [42]
  5343 404D			.var CD	= adr.CD .word
  5344 = 5F55			adr.CE	= [DATAORIGIN+$0F41] .array [129]
  5345 404D			.var CE	= adr.CE .word
  5346
  5347 = 5F1A			@VarData	= BN
  5348 = 00BB			@VarDataSize	= 187
  5349
  5350 404D 60				rts						; ret
  5351 = 404E 2B 5F		CD
  5351 = 4050 55 5F		CE
  5351 				.endl
  5352
  5353 				; ------------------------------------------------------------
  5354
  5355 				.endl							; UNIT A8LIBGADG
  5356
  5357 				; ------------------------------------------------------------
  5358
  5359 4052			.local	A8LIBMENU					; UNIT
  5360
  5361 4052			.local	MENUV						; FUNCTION
  5362
  5363 				; optimize OK (A8LIBMENU), line = 56
  5364
  5365 4052 A9 00			lda #$00
  5366 4054 8D E0 5F			sta BF
  5367
  5368 				; optimize OK (A8LIBMENU), line = 59
  5369
  5370 4057 AD DB 5F			lda BS
  5371 405A 8D DF 5F			sta RESULT
  5372
  5373 				; --- WhileProlog
  5374 405D 4C AE 41			jmp l_1C34
  5375 4060			l_1C35
  5376
  5377 				; optimize OK (A8LIBMENU), line = 65
  5378
  5379 4060 A9 00			lda #$00
  5380 4062 8D E1 5F			sta BL
  5381 4065 AC DC 5F			ldy BC
  5382 4068 88				dey
  5383 4069 8C 6D 40			sty @FORTMP_1C41_0
  5384
  5385 406C			l_1C44
  5386 				; --- ForToDoCondition
  5387 406C A9 00			lda @FORTMP_1C41_0:#$00
  5388 406E CD E1 5F			cmp BL
  5389 4071 B0 03 4C 23 41		jcc l_1C52
  5390
  5391 				; optimize OK (A8LIBMENU), line = 67
  5392
  5393 4076 A9 00			lda #$00
  5394 4078 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  5395 407A AD E1 5F			lda BL
  5396 407D 0A				asl @
  5397 407E 26 AD			rol :STACKORIGIN+STACKWIDTH+9
  5398 4080 18 6D 5B 42			add PS
  5399 4084 85 82			sta :bp2
  5400 4086 AD 5C 42			lda PS+1
  5401 4089 65 AD			adc :STACKORIGIN+STACKWIDTH+9
  5402 408B 85 83			sta :bp2+1
  5403 408D A0 00			ldy #$00
  5404 408F B1 82			lda (:bp2),y
  5405 4091 85 88			sta @move.src
  5406 4093 C8				iny
  5407 4094 B1 82			lda (:bp2),y
  5408 4096 85 89			sta @move.src+1
  5409 4098 AC 5F 42 84 82 AC + 	mwy TMPSTR :bp2
  5410 40A2 A0 00			ldy #$00
  5411 40A4 B1 88 91 82 C8 D0 + 	mva:rne (@move.src),y (:bp2),y+
  5412
  5413 				; optimize OK (A8LIBMENU), line = 68
  5414
  5415 40AB AD 0C 60			lda adr.TMPSTR
  5416 40AE 85 8C			sta SYSTEM.SETLENGTH.LEN
  5417 40B0 AD 5D 42			lda CL
  5418 40B3 85 88			sta SYSTEM.SETLENGTH.S
  5419 40B5 AD 5E 42			lda CL+1
  5420 40B8 85 89			sta SYSTEM.SETLENGTH.S+1
  5421 40BA 20 83 27			jsr SYSTEM.SETLENGTH
  5422
  5423 				; optimize OK (A8LIBMENU), line = 69
  5424
  5425 40BD AD E4 5F			lda adr.CL
  5426 40C0 85 84			sta SYSTEM.MOVE_048D.COUNT
  5427 40C2 A9 E5			lda <adr.CL+$01
  5428 40C4 85 8C			sta SYSTEM.MOVE_048D.DEST
  5429 40C6 A9 5F			lda >adr.CL+$01
  5430 40C8 85 8D			sta SYSTEM.MOVE_048D.DEST+1
  5431 40CA A9 0D			lda <adr.TMPSTR+$01
  5432 40CC 85 88			sta SYSTEM.MOVE_048D.SOURCE
  5433 40CE A9 60			lda >adr.TMPSTR+$01
  5434 40D0 85 89			sta SYSTEM.MOVE_048D.SOURCE+1
  5435 40D2 A9 00			lda #$00
  5436 40D4 85 85			sta SYSTEM.MOVE_048D.COUNT+1
  5437 40D6				.local +MAIN.SYSTEM.MOVE_048D
  5438 40D6				m@INLINE
Macro: MAIN.SYSTEM.MOVE_048D.M@INLINE [Source: appdemo.a65]
     4 40D6 20 78 25			jsr @move
Source: appdemo.a65
  5439 					.endl
  5440
  5441 				; optimize OK (A8LIBMENU), line = 72
  5442
  5443 40D9 AD E1 5F			lda BL
  5444 40DC 18 69 01			add #$01
  5445 40DF CD DF 5F			cmp RESULT
  5446 40E2 D0 08			jne l_1C75
  5447
  5448 				; optimize OK (A8LIBMENU), line = 74
  5449
  5450 40E4 A9 01			lda #$01
  5451 40E6 8D E3 5F			sta TMP
  5452 40E9 4C F1 40			jmp l_1C83
  5453 40EC			l_1C75
  5454
  5455 				; optimize OK (A8LIBMENU), line = 77
  5456
  5457 40EC A9 00			lda #$00
  5458 40EE 8D E3 5F			sta TMP
  5459 40F1			l_1C83
  5460
  5461 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBMENU), line = 79
  5462
  5463 40F1 E8				inx
  5464 40F2 AD 5D 42 95 94		mva CL :STACKORIGIN,x
  5465 40F7 AD 5E 42 95 A4		mva CL+1 :STACKORIGIN+STACKWIDTH,x
  5466 40FC E8				inx
  5467 40FD AD E3 5F 95 94		mva TMP :STACKORIGIN,x
  5468 4102 E8				inx
  5469 4103 AD D9 5F			lda Y
  5470 4106 18 6D E1 5F			add BL
  5471 410A 95 94			sta :STACKORIGIN,x
  5472 410C E8				inx
  5473 410D AD D8 5F 95 94		mva X :STACKORIGIN,x
  5474 4112 E8				inx
  5475 4113 AD D7 5F 95 94		mva BN :STACKORIGIN,x
  5476 4118 20 F7 2E			jsr A8LIBWIN.WPRINT
  5477
  5478 				; --- ForToDoEpilog
  5479 411B EE E1 5F			inc BL
  5480 411E F0 03 4C 6C 40		jne l_1C44
  5481 4123			l_1C52
  5482
  5483 				; optimize OK (A8LIBMENU), line = 83
  5484
  5485 4123 A9 00			lda #$00
  5486 4125 20 0B 28			jsr A8LIBMISC.WAITKCX
  5487 4128 AD 28 50			lda A8LIBMISC.WAITKCX.RESULT
  5488 412B 8D E2 5F			sta BK
  5489
  5490 				; optimize OK (A8LIBMENU), line = 86
  5491
  5492 412E C9 8F			cmp #$8F
  5493 4130 F0 0C			jeq l_1CDCx
  5494 4132 C9 0F			cmp #$0F
  5495 4134 F0 08			jeq l_1CDCx
  5496 4136 C9 87			cmp #$87
  5497 4138 F0 04			jeq l_1CDCx
  5498 413A C9 07			cmp #$07
  5499 413C D0 13			jne l_1CDC
  5500 413E			l_1CDCx
  5501
  5502 				; optimize FAIL (0, A8LIBMENU), line = 89
  5503
  5504 413E EE DF 5F			inc RESULT
  5505
  5506 				; optimize OK (A8LIBMENU), line = 92
  5507
  5508 4141 AD DC 5F			lda BC
  5509 4144 CD DF 5F			cmp RESULT
  5510 4147 B0 05			jcs l_1CF5
  5511
  5512 				; optimize OK (A8LIBMENU), line = 94
  5513
  5514 4149 A9 01			lda #$01
  5515 414B 8D DF 5F			sta RESULT
  5516 414E			l_1CF5
  5517 414E 4C 74 41			jmp l_1D05
  5518 4151			l_1CDC
  5519
  5520 				; optimize OK (A8LIBMENU), line = 97
  5521
  5522 4151 AD E2 5F			lda BK
  5523 4154 C9 8E			cmp #$8E
  5524 4156 F0 0C			jeq l_1D3Bx
  5525 4158 C9 0E			cmp #$0E
  5526 415A F0 08			jeq l_1D3Bx
  5527 415C C9 86			cmp #$86
  5528 415E F0 04			jeq l_1D3Bx
  5529 4160 C9 06			cmp #$06
  5530 4162 D0 10			jne l_1D3B
  5531 4164			l_1D3Bx
  5532
  5533 				; optimize FAIL (0, A8LIBMENU), line = 100
  5534
  5535 4164 CE DF 5F			dec RESULT
  5536
  5537 				; optimize OK (A8LIBMENU), line = 103
  5538
  5539 4167 AD DF 5F			lda RESULT
  5540 416A C9 01			cmp #$01
  5541 416C B0 06			jcs l_1D52
  5542
  5543 				; optimize OK (A8LIBMENU), line = 105
  5544
  5545 416E AD DC 5F			lda BC
  5546 4171 8D DF 5F			sta RESULT
  5547 4174			l_1D52
  5548 4174			l_1D3B
  5549 4174			l_1D05
  5550
  5551 				; optimize OK (A8LIBMENU), line = 110
  5552
  5553 4174 AD DF 5F			lda RESULT
  5554 4177 8D E1 5F			sta BL
  5555
  5556 				; optimize OK (A8LIBMENU), line = 113
  5557
  5558 417A AD E2 5F			lda BK
  5559 417D C9 1C			cmp #$1C
  5560 417F D0 0D			jne l_1D75
  5561
  5562 				; optimize OK (A8LIBMENU), line = 115
  5563
  5564 4181 A9 FD			lda #$FD
  5565 4183 8D DF 5F			sta RESULT
  5566
  5567 				; optimize OK (A8LIBMENU), line = 116
  5568
  5569 4186 A9 01			lda #$01
  5570 4188 8D E0 5F			sta BF
  5571 418B 4C AE 41			jmp l_1D87
  5572 418E			l_1D75
  5573
  5574 				; optimize OK (A8LIBMENU), line = 119
  5575
  5576 418E AD E2 5F			lda BK
  5577 4191 C9 2C			cmp #$2C
  5578 4193 D0 0D			jne l_1D99
  5579
  5580 				; optimize OK (A8LIBMENU), line = 121
  5581
  5582 4195 A9 FE			lda #$FE
  5583 4197 8D DF 5F			sta RESULT
  5584
  5585 				; optimize OK (A8LIBMENU), line = 122
  5586
  5587 419A A9 01			lda #$01
  5588 419C 8D E0 5F			sta BF
  5589 419F 4C AE 41			jmp l_1DAB
  5590 41A2			l_1D99
  5591
  5592 				; optimize OK (A8LIBMENU), line = 125
  5593
  5594 41A2 AD E2 5F			lda BK
  5595 41A5 C9 0C			cmp #$0C
  5596 41A7 D0 05			jne l_1DBD
  5597
  5598 				; optimize OK (A8LIBMENU), line = 127
  5599
  5600 41A9 A9 01			lda #$01
  5601 41AB 8D E0 5F			sta BF
  5602 41AE			l_1DBD
  5603 41AE			l_1DAB
  5604 41AE			l_1D87
  5605 41AE			l_1C34
  5606
  5607 				; optimize OK (A8LIBMENU), line = 62
  5608
  5609 41AE AD E0 5F			lda BF
  5610 41B1 D0 03 4C 60 40		jeq l_1C35
  5611
  5612 				; optimize OK (A8LIBMENU), line = 132
  5613
  5614 41B6 AD DA 5F			lda BI
  5615 41B9 F0 03 4C 5A 42		jne l_1DDF
  5616
  5617 				; optimize OK (A8LIBMENU), line = 134
  5618
  5619 41BE AD E1 5F			lda BL
  5620 41C1 38 E9 01			sub #$01
  5621 41C4 85 9D			sta :STACKORIGIN+9
  5622 41C6 A9 00			lda #$00
  5623 41C8 E9 00			sbc #$00
  5624 41CA 06 9D			asl :STACKORIGIN+9
  5625 41CC 2A				rol @
  5626 41CD 85 AD			sta :STACKORIGIN+STACKWIDTH+9
  5627 41CF AD 5B 42			lda PS
  5628 41D2 18 65 9D			add :STACKORIGIN+9
  5629 41D5 85 82			sta :bp2
  5630 41D7 AD 5C 42			lda PS+1
  5631 41DA 65 AD			adc :STACKORIGIN+STACKWIDTH+9
  5632 41DC 85 83			sta :bp2+1
  5633 41DE A0 00			ldy #$00
  5634 41E0 B1 82			lda (:bp2),y
  5635 41E2 85 88			sta @move.src
  5636 41E4 C8				iny
  5637 41E5 B1 82			lda (:bp2),y
  5638 41E7 85 89			sta @move.src+1
  5639 41E9 AC 5F 42 84 82 AC + 	mwy TMPSTR :bp2
  5640 41F3 A0 00			ldy #$00
  5641 41F5 B1 88 91 82 C8 D0 + 	mva:rne (@move.src),y (:bp2),y+
  5642
  5643 				; optimize OK (A8LIBMENU), line = 135
  5644
  5645 41FC AD 0C 60			lda adr.TMPSTR
  5646 41FF 85 8C			sta SYSTEM.SETLENGTH.LEN
  5647 4201 AD 5D 42			lda CL
  5648 4204 85 88			sta SYSTEM.SETLENGTH.S
  5649 4206 AD 5E 42			lda CL+1
  5650 4209 85 89			sta SYSTEM.SETLENGTH.S+1
  5651 420B 20 83 27			jsr SYSTEM.SETLENGTH
  5652
  5653 				; optimize OK (A8LIBMENU), line = 136
  5654
  5655 420E AD E4 5F			lda adr.CL
  5656 4211 85 84			sta SYSTEM.MOVE_048D.COUNT
  5657 4213 A9 E5			lda <adr.CL+$01
  5658 4215 85 8C			sta SYSTEM.MOVE_048D.DEST
  5659 4217 A9 5F			lda >adr.CL+$01
  5660 4219 85 8D			sta SYSTEM.MOVE_048D.DEST+1
  5661 421B A9 0D			lda <adr.TMPSTR+$01
  5662 421D 85 88			sta SYSTEM.MOVE_048D.SOURCE
  5663 421F A9 60			lda >adr.TMPSTR+$01
  5664 4221 85 89			sta SYSTEM.MOVE_048D.SOURCE+1
  5665 4223 A9 00			lda #$00
  5666 4225 85 85			sta SYSTEM.MOVE_048D.COUNT+1
  5667 4227				.local +MAIN.SYSTEM.MOVE_048D
  5668 4227				m@INLINE
Macro: MAIN.SYSTEM.MOVE_048D.M@INLINE [Source: appdemo.a65]
     4 4227 20 78 25			jsr @move
Source: appdemo.a65
  5669 					.endl
  5670
  5671 				; optimize FAIL ('A8LIBWIN.WPRINT', A8LIBMENU), line = 137
  5672
  5673 422A E8				inx
  5674 422B AD 5D 42 95 94		mva CL :STACKORIGIN,x
  5675 4230 AD 5E 42 95 A4		mva CL+1 :STACKORIGIN+STACKWIDTH,x
  5676 4235 E8				inx
  5677 4236 A9 00 95 94			mva #$00 :STACKORIGIN,x
  5678 423A E8				inx
  5679 423B AD D9 5F			lda Y
  5680 423E 18 6D E1 5F			add BL
  5681 4242 95 94			sta :STACKORIGIN,x
  5682 4244 E8				inx
  5683 4245 A9 01 95 94			mva #$01 :STACKORIGIN,x
  5684 4249 20 3A 25			jsr subAL_CL
  5685 424C AD D8 5F 95 94		mva X :STACKORIGIN,x
  5686 4251 E8				inx
  5687 4252 AD D7 5F 95 94		mva BN :STACKORIGIN,x
  5688 4257 20 F7 2E			jsr A8LIBWIN.WPRINT
  5689 425A			l_1DDF
  5690 425A			@exit
  5691
  5692 				; ------------------------------------------------------------
  5693
  5694 = 5FD7			BN	= DATAORIGIN+$0FC3
  5695 = 5FD8			X	= DATAORIGIN+$0FC4
  5696 = 5FD9			Y	= DATAORIGIN+$0FC5
  5697 = 5FDA			BI	= DATAORIGIN+$0FC6
  5698 = 5FDB			BS	= DATAORIGIN+$0FC7
  5699 = 5FDC			BC	= DATAORIGIN+$0FC8
  5700 = 5FDD			adr.PS	= [DATAORIGIN+$0FC9] .array [1] .word
  5701 425A			.var PS	= adr.PS .word
  5702 = 5FDF			RESULT	= DATAORIGIN+$0FCB
  5703 = 5FE0			BF	= DATAORIGIN+$0FCC
  5704 = 5FE1			BL	= DATAORIGIN+$0FCD
  5705 = 5FE2			BK	= DATAORIGIN+$0FCE
  5706 = 5FE3			TMP	= DATAORIGIN+$0FCF
  5707 = 5FE4			adr.CL	= [DATAORIGIN+$0FD0] .array [40]
  5708 425A			.var CL	= adr.CL .word
  5709 = 600C			adr.TMPSTR	= [DATAORIGIN+$0FF8] .array [256]
  5710 425A			.var TMPSTR	= adr.TMPSTR .word
  5711
  5712 = 5FD7			@VarData	= BN
  5713 = 0134			@VarDataSize	= 308
  5714
  5715 425A 60				rts						; ret
  5716 = 425B DD 5F		PS
  5716 = 425D E4 5F		CL
  5716 = 425F 0C 60		TMPSTR
  5716 				.endl
  5717
  5718 				; ------------------------------------------------------------
  5719
  5720 				.endl							; UNIT A8LIBMENU
  5721
  5722 4261			.local	FORMINPUT					; FUNCTION
  5723
  5724 				; optimize OK (appdemo.pas), line = 38
  5725
  5726 4261 A9 00			lda #$00
  5727 4263 8D 0D 61			sta RESULT
  5728
  5729 				; optimize OK (appdemo.pas), line = 39
  5730
  5731 4266 A9 01			lda #$01
  5732 4268 8D 0E 61			sta BRA
  5733
  5734 				; optimize OK (appdemo.pas), line = 40
  5735
  5736 426B 8D 0F 61			sta BRB
  5737
  5738 				; optimize OK (appdemo.pas), line = 41
  5739
  5740 426E A9 02			lda #$02
  5741 4270 8D 10 61			sta BCHAP
  5742
  5743 				; optimize OK (appdemo.pas), line = 42
  5744
  5745 4273 A9 01			lda #$01
  5746 4275 8D 11 61			sta BCHBP
  5747
  5748 				; optimize OK (appdemo.pas), line = 43
  5749
  5750 4278 A9 02			lda #$02
  5751 427A 8D 12 61			sta BCHCP
  5752
  5753 				; optimize OK (appdemo.pas), line = 44
  5754
  5755 427D A9 0A			lda #$0A
  5756 427F 8D 13 61			sta BV
  5757 4282 A0 F1			ldy #256-15
  5758 4284 B9 7C 1F 99 D7 60 + 	mva:rne CODEORIGIN+$006D+15-256,y adr.CF+15-256,y+
  5759
  5760 				; optimize OK (appdemo.pas), line = 48
  5761
  5762 428D A9 1C			lda #$1C
  5763 428F 8D CD 61			sta adr.CF+$05
  5764
  5765 				; optimize OK (appdemo.pas), line = 49
  5766
  5767 4292 A9 1D			lda #$1D
  5768 4294 8D CE 61			sta adr.CF+$06
  5769
  5770 				; optimize OK (appdemo.pas), line = 50
  5771
  5772 4297 A9 1E			lda #$1E
  5773 4299 8D CF 61			sta adr.CF+$07
  5774
  5775 				; optimize OK (appdemo.pas), line = 51
  5776
  5777 429C A9 1F			lda #$1F
  5778 429E 8D D0 61			sta adr.CF+$08
  5779
  5780 				; optimize OK (appdemo.pas), line = 52
  5781
  5782 42A1 A9 7F			lda #$7F
  5783 42A3 8D D1 61			sta adr.CF+$09
  5784
  5785 				; optimize OK (appdemo.pas), line = 53
  5786
  5787 42A6 A9 1B			lda #$1B
  5788 42A8 8D D2 61			sta adr.CF+$0A
  5789
  5790 				; optimize OK (appdemo.pas), line = 54
  5791
  5792 42AB A9 03			lda #$03
  5793 42AD 8D D3 61			sta adr.CF+$0B
  5794 42B0 A0 F1			ldy #256-15
  5795 42B2 B9 8C 1F 99 E7 60 + 	mva:rne CODEORIGIN+$007D+15-256,y adr.CI+15-256,y+
  5796
  5797 				; optimize OK (appdemo.pas), line = 57
  5798
  5799 42BB A9 1E			lda #$1E
  5800 42BD 8D DD 61			sta adr.CI+$05
  5801
  5802 				; optimize OK (appdemo.pas), line = 58
  5803
  5804 42C0 A9 1F			lda #$1F
  5805 42C2 8D DE 61			sta adr.CI+$06
  5806
  5807 				; optimize OK (appdemo.pas), line = 59
  5808
  5809 42C5 A9 1B			lda #$1B
  5810 42C7 8D DF 61			sta adr.CI+$07
  5811
  5812 				; optimize OK (appdemo.pas), line = 60
  5813
  5814 42CA A9 03			lda #$03
  5815 42CC 8D E0 61			sta adr.CI+$08
  5816 42CF A0 F1			ldy #256-15
  5817 42D1 B9 7C 1F 99 F7 60 + 	mva:rne CODEORIGIN+$006D+15-256,y adr.CR+15-256,y+
  5818
  5819 				; optimize OK (appdemo.pas), line = 63
  5820
  5821 42DA A9 1C			lda #$1C
  5822 42DC 8D ED 61			sta adr.CR+$05
  5823
  5824 				; optimize OK (appdemo.pas), line = 64
  5825
  5826 42DF A9 1D			lda #$1D
  5827 42E1 8D EE 61			sta adr.CR+$06
  5828
  5829 				; optimize OK (appdemo.pas), line = 65
  5830
  5831 42E4 A9 1E			lda #$1E
  5832 42E6 8D EF 61			sta adr.CR+$07
  5833
  5834 				; optimize OK (appdemo.pas), line = 66
  5835
  5836 42E9 A9 1F			lda #$1F
  5837 42EB 8D F0 61			sta adr.CR+$08
  5838
  5839 				; optimize OK (appdemo.pas), line = 67
  5840
  5841 42EE A9 7F			lda #$7F
  5842 42F0 8D F1 61			sta adr.CR+$09
  5843
  5844 				; optimize OK (appdemo.pas), line = 68
  5845
  5846 42F3 A9 1B			lda #$1B
  5847 42F5 8D F2 61			sta adr.CR+$0A
  5848
  5849 				; optimize OK (appdemo.pas), line = 69
  5850
  5851 42F8 A9 03			lda #$03
  5852 42FA 8D F4 61			sta adr.CR+$0C
  5853 42FD A0 F1			ldy #256-15
  5854 42FF B9 9C 1F 99 07 61 + 	mva:rne CODEORIGIN+$008D+15-256,y adr.CX+15-256,y+
  5855
  5856 				; optimize OK (appdemo.pas), line = 72
  5857
  5858 4308 A9 7F			lda #$7F
  5859 430A 8D FF 61			sta adr.CX+$07
  5860
  5861 				; optimize OK (appdemo.pas), line = 73
  5862
  5863 430D A9 1B			lda #$1B
  5864 430F 8D 00 62			sta adr.CX+$08
  5865
  5866 				; optimize OK (appdemo.pas), line = 74
  5867
  5868 4312 A9 03			lda #$03
  5869 4314 8D 01 62			sta adr.CX+$09
  5870 4317 A0 D7			ldy #256-41
  5871 4319 B9 C6 1F 99 49 60 + 	mva:rne CODEORIGIN+$009D+41-256,y adr.CA+41-256,y+
  5872 4322 A0 D7			ldy #256-41
  5873 4324 B9 F0 1F 99 73 60 + 	mva:rne CODEORIGIN+$00C7+41-256,y adr.CB+41-256,y+
  5874 432D A0 D7			ldy #256-41
  5875 432F B9 1A 20 99 9D 60 + 	mva:rne CODEORIGIN+$00F1+41-256,y adr.CC+41-256,y+
  5876 4338 A0 D7			ldy #256-41
  5877 433A B9 44 20 99 C7 60 + 	mva:rne CODEORIGIN+$011B+41-256,y adr.CD+41-256,y+
  5878
  5879 				; optimize OK (appdemo.pas), line = 81
  5880
  5881 4343 A9 14			lda #$14
  5882 4345 8D 9F 61			sta adr.CD+$01
  5883
  5884 				; optimize OK (appdemo.pas), line = 82
  5885
  5886 4348 8D B5 61			sta adr.CD+$17
  5887
  5888 				; optimize OK (appdemo.pas), line = 85
  5889
  5890 434B AD 0E 61			lda BRA
  5891 434E 8D 1B 61			sta BRAP
  5892
  5893 				; optimize OK (appdemo.pas), line = 86
  5894
  5895 4351 AD 0F 61			lda BRB
  5896 4354 8D 1C 61			sta BRBP
  5897
  5898 				; optimize OK (appdemo.pas), line = 87
  5899
  5900 4357 AD 13 61			lda BV
  5901 435A 8D 1A 61			sta BVP
  5902
  5903 				; optimize OK (appdemo.pas), line = 90
  5904
  5905 435D A9 02			lda #$02
  5906 435F 8D C3 59			sta A8LIBWIN.WOPEN.X
  5907 4362 A9 04			lda #$04
  5908 4364 8D C4 59			sta A8LIBWIN.WOPEN.Y
  5909 4367 A9 24			lda #$24
  5910 4369 8D C5 59			sta A8LIBWIN.WOPEN.W
  5911 436C A9 12			lda #$12
  5912 436E 8D C6 59			sta A8LIBWIN.WOPEN.H
  5913 4371 A9 00			lda #$00
  5914 4373 8D C7 59			sta A8LIBWIN.WOPEN.BT
  5915 4376 20 50 2B			jsr A8LIBWIN.WOPEN
  5916 4379 AD C8 59			lda A8LIBWIN.WOPEN.RESULT
  5917 437C 8D 14 61			sta BW1
  5918
  5919 				; optimize FAIL ('A8LIBWIN.WORN', appdemo.pas), line = 91
  5920
  5921 437F E8				inx
  5922 4380 A9 45 95 94			mva #$45 :STACKORIGIN,x
  5923 4384 A9 21 95 A4			mva #$21 :STACKORIGIN+STACKWIDTH,x
  5924 4388 E8				inx
  5925 4389 A9 FB 95 94			mva #$FB :STACKORIGIN,x
  5926 438D E8				inx
  5927 438E A9 F1 95 94			mva #$F1 :STACKORIGIN,x
  5928 4392 E8				inx
  5929 4393 AD 14 61 95 94		mva BW1 :STACKORIGIN,x
  5930 4398 20 DE 30			jsr A8LIBWIN.WORN
  5931
  5932 				; optimize FAIL ('A8LIBWIN.WORN', appdemo.pas), line = 92
  5933
  5934 439B E8				inx
  5935 439C A9 51 95 94			mva #$51 :STACKORIGIN,x
  5936 43A0 A9 21 95 A4			mva #$21 :STACKORIGIN+STACKWIDTH,x
  5937 43A4 E8				inx
  5938 43A5 A9 FC 95 94			mva #$FC :STACKORIGIN,x
  5939 43A9 E8				inx
  5940 43AA A9 F1 95 94			mva #$F1 :STACKORIGIN,x
  5941 43AE E8				inx
  5942 43AF AD 14 61 95 94		mva BW1 :STACKORIGIN,x
  5943 43B4 20 DE 30			jsr A8LIBWIN.WORN
  5944
  5945 				; optimize FAIL ('A8LIBWIN.WORN', appdemo.pas), line = 93
  5946
  5947 43B7 E8				inx
  5948 43B8 AD 7B 4A 95 94		mva CF :STACKORIGIN,x
  5949 43BD AD 7C 4A 95 A4		mva CF+1 :STACKORIGIN+STACKWIDTH,x
  5950 43C2 E8				inx
  5951 43C3 A9 FB 95 94			mva #$FB :STACKORIGIN,x
  5952 43C7 E8				inx
  5953 43C8 A9 F2 95 94			mva #$F2 :STACKORIGIN,x
  5954 43CC E8				inx
  5955 43CD AD 14 61 95 94		mva BW1 :STACKORIGIN,x
  5956 43D2 20 DE 30			jsr A8LIBWIN.WORN
  5957
  5958 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 95
  5959
  5960 43D5 E8				inx
  5961 43D6 A9 57 95 94			mva #$57 :STACKORIGIN,x
  5962 43DA A9 21 95 A4			mva #$21 :STACKORIGIN+STACKWIDTH,x
  5963 43DE E8				inx
  5964 43DF A9 00 95 94			mva #$00 :STACKORIGIN,x
  5965 43E3 E8				inx
  5966 43E4 A9 01 95 94			mva #$01 :STACKORIGIN,x
  5967 43E8 E8				inx
  5968 43E9 95 94			sta :STACKORIGIN,x
  5969 43EB E8				inx
  5970 43EC AD 14 61 95 94		mva BW1 :STACKORIGIN,x
  5971 43F1 20 F7 2E			jsr A8LIBWIN.WPRINT
  5972
  5973 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 96
  5974
  5975 43F4 E8				inx
  5976 43F5 A9 64 95 94			mva #$64 :STACKORIGIN,x
  5977 43F9 A9 21 95 A4			mva #$21 :STACKORIGIN+STACKWIDTH,x
  5978 43FD E8				inx
  5979 43FE A9 00 95 94			mva #$00 :STACKORIGIN,x
  5980 4402 E8				inx
  5981 4403 A9 02 95 94			mva #$02 :STACKORIGIN,x
  5982 4407 E8				inx
  5983 4408 95 94			sta :STACKORIGIN,x
  5984 440A E8				inx
  5985 440B AD 14 61 95 94		mva BW1 :STACKORIGIN,x
  5986 4410 20 F7 2E			jsr A8LIBWIN.WPRINT
  5987
  5988 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 97
  5989
  5990 4413 E8				inx
  5991 4414 A9 6C 95 94			mva #$6C :STACKORIGIN,x
  5992 4418 A9 21 95 A4			mva #$21 :STACKORIGIN+STACKWIDTH,x
  5993 441C E8				inx
  5994 441D A9 00 95 94			mva #$00 :STACKORIGIN,x
  5995 4421 E8				inx
  5996 4422 A9 03 95 94			mva #$03 :STACKORIGIN,x
  5997 4426 E8				inx
  5998 4427 A9 02 95 94			mva #$02 :STACKORIGIN,x
  5999 442B E8				inx
  6000 442C AD 14 61 95 94		mva BW1 :STACKORIGIN,x
  6001 4431 20 F7 2E			jsr A8LIBWIN.WPRINT
  6002
  6003 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 98
  6004
  6005 4434 E8				inx
  6006 4435 A9 74 95 94			mva #$74 :STACKORIGIN,x
  6007 4439 A9 21 95 A4			mva #$21 :STACKORIGIN+STACKWIDTH,x
  6008 443D E8				inx
  6009 443E A9 00 95 94			mva #$00 :STACKORIGIN,x
  6010 4442 E8				inx
  6011 4443 A9 04 95 94			mva #$04 :STACKORIGIN,x
  6012 4447 E8				inx
  6013 4448 A9 02 95 94			mva #$02 :STACKORIGIN,x
  6014 444C E8				inx
  6015 444D AD 14 61 95 94		mva BW1 :STACKORIGIN,x
  6016 4452 20 F7 2E			jsr A8LIBWIN.WPRINT
  6017
  6018 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 99
  6019
  6020 4455 E8				inx
  6021 4456 A9 7C 95 94			mva #$7C :STACKORIGIN,x
  6022 445A A9 21 95 A4			mva #$21 :STACKORIGIN+STACKWIDTH,x
  6023 445E E8				inx
  6024 445F A9 00 95 94			mva #$00 :STACKORIGIN,x
  6025 4463 E8				inx
  6026 4464 A9 05 95 94			mva #$05 :STACKORIGIN,x
  6027 4468 E8				inx
  6028 4469 A9 02 95 94			mva #$02 :STACKORIGIN,x
  6029 446D E8				inx
  6030 446E AD 14 61 95 94		mva BW1 :STACKORIGIN,x
  6031 4473 20 F7 2E			jsr A8LIBWIN.WPRINT
  6032
  6033 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 100
  6034
  6035 4476 E8				inx
  6036 4477 A9 84 95 94			mva #$84 :STACKORIGIN,x
  6037 447B A9 21 95 A4			mva #$21 :STACKORIGIN+STACKWIDTH,x
  6038 447F E8				inx
  6039 4480 A9 00 95 94			mva #$00 :STACKORIGIN,x
  6040 4484 E8				inx
  6041 4485 A9 06 95 94			mva #$06 :STACKORIGIN,x
  6042 4489 E8				inx
  6043 448A A9 02 95 94			mva #$02 :STACKORIGIN,x
  6044 448E E8				inx
  6045 448F AD 14 61 95 94		mva BW1 :STACKORIGIN,x
  6046 4494 20 F7 2E			jsr A8LIBWIN.WPRINT
  6047
  6048 				; optimize OK (appdemo.pas), line = 101
  6049
  6050 4497 AD 14 61			lda BW1
  6051 449A 8D 0A 5F			sta A8LIBGADG.GSPIN.BN
  6052 449D A9 08			lda #$08
  6053 449F 8D 0B 5F			sta A8LIBGADG.GSPIN.X
  6054 44A2 A9 06			lda #$06
  6055 44A4 8D 0C 5F			sta A8LIBGADG.GSPIN.Y
  6056 44A7 A9 00			lda #$00
  6057 44A9 8D 0D 5F			sta A8LIBGADG.GSPIN.BL
  6058 44AC A9 64			lda #$64
  6059 44AE 8D 0E 5F			sta A8LIBGADG.GSPIN.BM
  6060 44B1 AD 1A 61			lda BVP
  6061 44B4 8D 0F 5F			sta A8LIBGADG.GSPIN.BI
  6062 44B7 A9 00			lda #$00
  6063 44B9 8D 10 5F			sta A8LIBGADG.GSPIN.BE
  6064 44BC 20 9A 39			jsr A8LIBGADG.GSPIN
  6065
  6066 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 103
  6067
  6068 44BF E8				inx
  6069 44C0 A9 8C 95 94			mva #$8C :STACKORIGIN,x
  6070 44C4 A9 21 95 A4			mva #$21 :STACKORIGIN+STACKWIDTH,x
  6071 44C8 E8				inx
  6072 44C9 A9 00 95 94			mva #$00 :STACKORIGIN,x
  6073 44CD E8				inx
  6074 44CE A9 08 95 94			mva #$08 :STACKORIGIN,x
  6075 44D2 E8				inx
  6076 44D3 A9 01 95 94			mva #$01 :STACKORIGIN,x
  6077 44D7 E8				inx
  6078 44D8 AD 14 61 95 94		mva BW1 :STACKORIGIN,x
  6079 44DD 20 F7 2E			jsr A8LIBWIN.WPRINT
  6080
  6081 				; optimize OK (appdemo.pas), line = 104
  6082
  6083 44E0 AD 14 61			lda BW1
  6084 44E3 8D F9 5E			sta A8LIBGADG.GRADIO.BN
  6085 44E6 A9 02			lda #$02
  6086 44E8 8D FA 5E			sta A8LIBGADG.GRADIO.X
  6087 44EB A9 09			lda #$09
  6088 44ED 8D FB 5E			sta A8LIBGADG.GRADIO.Y
  6089 44F0 A9 01			lda #$01
  6090 44F2 8D FC 5E			sta A8LIBGADG.GRADIO.BD
  6091 44F5 A9 00			lda #$00
  6092 44F7 8D FD 5E			sta A8LIBGADG.GRADIO.BE
  6093 44FA AD 1B 61			lda BRAP
  6094 44FD 8D FE 5E			sta A8LIBGADG.GRADIO.BI
  6095 4500 A9 03			lda #$03
  6096 4502 8D FF 5E			sta A8LIBGADG.GRADIO.BS
  6097 4505 A9 F8			lda #$F8
  6098 4507 8D 98 39			sta A8LIBGADG.GRADIO.PS
  6099 450A A9 24			lda #$24
  6100 450C 8D 99 39			sta A8LIBGADG.GRADIO.PS+1
  6101 450F 20 8E 37			jsr A8LIBGADG.GRADIO
  6102
  6103 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 106
  6104
  6105 4512 E8				inx
  6106 4513 A9 9F 95 94			mva #$9F :STACKORIGIN,x
  6107 4517 A9 21 95 A4			mva #$21 :STACKORIGIN+STACKWIDTH,x
  6108 451B E8				inx
  6109 451C A9 00 95 94			mva #$00 :STACKORIGIN,x
  6110 4520 E8				inx
  6111 4521 A9 0B 95 94			mva #$0B :STACKORIGIN,x
  6112 4525 E8				inx
  6113 4526 A9 01 95 94			mva #$01 :STACKORIGIN,x
  6114 452A E8				inx
  6115 452B AD 14 61 95 94		mva BW1 :STACKORIGIN,x
  6116 4530 20 F7 2E			jsr A8LIBWIN.WPRINT
  6117
  6118 				; optimize OK (appdemo.pas), line = 107
  6119
  6120 4533 AD 14 61			lda BW1
  6121 4536 8D F9 5E			sta A8LIBGADG.GRADIO.BN
  6122 4539 A9 02			lda #$02
  6123 453B 8D FA 5E			sta A8LIBGADG.GRADIO.X
  6124 453E A9 0C			lda #$0C
  6125 4540 8D FB 5E			sta A8LIBGADG.GRADIO.Y
  6126 4543 A9 02			lda #$02
  6127 4545 8D FC 5E			sta A8LIBGADG.GRADIO.BD
  6128 4548 A9 00			lda #$00
  6129 454A 8D FD 5E			sta A8LIBGADG.GRADIO.BE
  6130 454D AD 1C 61			lda BRBP
  6131 4550 8D FE 5E			sta A8LIBGADG.GRADIO.BI
  6132 4553 A9 03			lda #$03
  6133 4555 8D FF 5E			sta A8LIBGADG.GRADIO.BS
  6134 4558 A9 FE			lda #$FE
  6135 455A 8D 98 39			sta A8LIBGADG.GRADIO.PS
  6136 455D A9 24			lda #$24
  6137 455F 8D 99 39			sta A8LIBGADG.GRADIO.PS+1
  6138 4562 20 8E 37			jsr A8LIBGADG.GRADIO
  6139
  6140 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 109
  6141
  6142 4565 E8				inx
  6143 4566 A9 B2 95 94			mva #$B2 :STACKORIGIN,x
  6144 456A A9 21 95 A4			mva #$21 :STACKORIGIN+STACKWIDTH,x
  6145 456E E8				inx
  6146 456F A9 00 95 94			mva #$00 :STACKORIGIN,x
  6147 4573 E8				inx
  6148 4574 A9 0B 95 94			mva #$0B :STACKORIGIN,x
  6149 4578 E8				inx
  6150 4579 A9 14 95 94			mva #$14 :STACKORIGIN,x
  6151 457D E8				inx
  6152 457E AD 14 61 95 94		mva BW1 :STACKORIGIN,x
  6153 4583 20 F7 2E			jsr A8LIBWIN.WPRINT
  6154
  6155 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 110
  6156
  6157 4586 E8				inx
  6158 4587 A9 BF 95 94			mva #$BF :STACKORIGIN,x
  6159 458B A9 21 95 A4			mva #$21 :STACKORIGIN+STACKWIDTH,x
  6160 458F E8				inx
  6161 4590 A9 00 95 94			mva #$00 :STACKORIGIN,x
  6162 4594 E8				inx
  6163 4595 A9 0C 95 94			mva #$0C :STACKORIGIN,x
  6164 4599 E8				inx
  6165 459A A9 19 95 94			mva #$19 :STACKORIGIN,x
  6166 459E E8				inx
  6167 459F AD 14 61 95 94		mva BW1 :STACKORIGIN,x
  6168 45A4 20 F7 2E			jsr A8LIBWIN.WPRINT
  6169
  6170 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 111
  6171
  6172 45A7 E8				inx
  6173 45A8 A9 C5 95 94			mva #$C5 :STACKORIGIN,x
  6174 45AC A9 21 95 A4			mva #$21 :STACKORIGIN+STACKWIDTH,x
  6175 45B0 E8				inx
  6176 45B1 A9 00 95 94			mva #$00 :STACKORIGIN,x
  6177 45B5 E8				inx
  6178 45B6 A9 0D 95 94			mva #$0D :STACKORIGIN,x
  6179 45BA E8				inx
  6180 45BB A9 19 95 94			mva #$19 :STACKORIGIN,x
  6181 45BF E8				inx
  6182 45C0 AD 14 61 95 94		mva BW1 :STACKORIGIN,x
  6183 45C5 20 F7 2E			jsr A8LIBWIN.WPRINT
  6184
  6185 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 112
  6186
  6187 45C8 E8				inx
  6188 45C9 A9 CC 95 94			mva #$CC :STACKORIGIN,x
  6189 45CD A9 21 95 A4			mva #$21 :STACKORIGIN+STACKWIDTH,x
  6190 45D1 E8				inx
  6191 45D2 A9 00 95 94			mva #$00 :STACKORIGIN,x
  6192 45D6 E8				inx
  6193 45D7 A9 0E 95 94			mva #$0E :STACKORIGIN,x
  6194 45DB E8				inx
  6195 45DC A9 19 95 94			mva #$19 :STACKORIGIN,x
  6196 45E0 E8				inx
  6197 45E1 AD 14 61 95 94		mva BW1 :STACKORIGIN,x
  6198 45E6 20 F7 2E			jsr A8LIBWIN.WPRINT
  6199
  6200 				; optimize OK (appdemo.pas), line = 113
  6201
  6202 45E9 AD 14 61			lda BW1
  6203 45EC 8D F0 5D			sta A8LIBGADG.GCHECK.BN
  6204 45EF A9 15			lda #$15
  6205 45F1 8D F1 5D			sta A8LIBGADG.GCHECK.X
  6206 45F4 A9 0C			lda #$0C
  6207 45F6 8D F2 5D			sta A8LIBGADG.GCHECK.Y
  6208 45F9 A9 00			lda #$00
  6209 45FB 8D F3 5D			sta A8LIBGADG.GCHECK.BI
  6210 45FE AD 10 61			lda BCHAP
  6211 4601 8D F4 5D			sta A8LIBGADG.GCHECK.BD
  6212 4604 20 13 36			jsr A8LIBGADG.GCHECK
  6213
  6214 				; optimize OK (appdemo.pas), line = 114
  6215
  6216 4607 AD 14 61			lda BW1
  6217 460A 8D F0 5D			sta A8LIBGADG.GCHECK.BN
  6218 460D A9 15			lda #$15
  6219 460F 8D F1 5D			sta A8LIBGADG.GCHECK.X
  6220 4612 A9 0D			lda #$0D
  6221 4614 8D F2 5D			sta A8LIBGADG.GCHECK.Y
  6222 4617 A9 00			lda #$00
  6223 4619 8D F3 5D			sta A8LIBGADG.GCHECK.BI
  6224 461C AD 11 61			lda BCHBP
  6225 461F 8D F4 5D			sta A8LIBGADG.GCHECK.BD
  6226 4622 20 13 36			jsr A8LIBGADG.GCHECK
  6227
  6228 				; optimize OK (appdemo.pas), line = 115
  6229
  6230 4625 AD 14 61			lda BW1
  6231 4628 8D F0 5D			sta A8LIBGADG.GCHECK.BN
  6232 462B A9 15			lda #$15
  6233 462D 8D F1 5D			sta A8LIBGADG.GCHECK.X
  6234 4630 A9 0E			lda #$0E
  6235 4632 8D F2 5D			sta A8LIBGADG.GCHECK.Y
  6236 4635 A9 00			lda #$00
  6237 4637 8D F3 5D			sta A8LIBGADG.GCHECK.BI
  6238 463A AD 12 61			lda BCHCP
  6239 463D 8D F4 5D			sta A8LIBGADG.GCHECK.BD
  6240 4640 20 13 36			jsr A8LIBGADG.GCHECK
  6241
  6242 				; optimize OK (appdemo.pas), line = 117
  6243
  6244 4643 AD 14 61			lda BW1
  6245 4646 8D E3 5D			sta A8LIBGADG.GBUTTON.BN
  6246 4649 A9 15			lda #$15
  6247 464B 8D E4 5D			sta A8LIBGADG.GBUTTON.X
  6248 464E A9 10			lda #$10
  6249 4650 8D E5 5D			sta A8LIBGADG.GBUTTON.Y
  6250 4653 A9 00			lda #$00
  6251 4655 8D E6 5D			sta A8LIBGADG.GBUTTON.BD
  6252 4658 A9 02			lda #$02
  6253 465A 8D E7 5D			sta A8LIBGADG.GBUTTON.BS
  6254 465D A9 F4			lda #$F4
  6255 465F 8D 11 36			sta A8LIBGADG.GBUTTON.PA
  6256 4662 A9 24			lda #$24
  6257 4664 8D 12 36			sta A8LIBGADG.GBUTTON.PA+1
  6258 4667 20 80 34			jsr A8LIBGADG.GBUTTON
  6259
  6260 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 120
  6261
  6262 466A E8				inx
  6263 466B AD 73 4A 95 94		mva CA :STACKORIGIN,x
  6264 4670 AD 74 4A 95 A4		mva CA+1 :STACKORIGIN+STACKWIDTH,x
  6265 4675 E8				inx
  6266 4676 A9 00 95 94			mva #$00 :STACKORIGIN,x
  6267 467A E8				inx
  6268 467B A9 02 95 94			mva #$02 :STACKORIGIN,x
  6269 467F E8				inx
  6270 4680 A9 08 95 94			mva #$08 :STACKORIGIN,x
  6271 4684 E8				inx
  6272 4685 AD 14 61 95 94		mva BW1 :STACKORIGIN,x
  6273 468A 20 F7 2E			jsr A8LIBWIN.WPRINT
  6274
  6275 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 121
  6276
  6277 468D E8				inx
  6278 468E AD 75 4A 95 94		mva CB :STACKORIGIN,x
  6279 4693 AD 76 4A 95 A4		mva CB+1 :STACKORIGIN+STACKWIDTH,x
  6280 4698 E8				inx
  6281 4699 A9 00 95 94			mva #$00 :STACKORIGIN,x
  6282 469D E8				inx
  6283 469E A9 03 95 94			mva #$03 :STACKORIGIN,x
  6284 46A2 E8				inx
  6285 46A3 A9 08 95 94			mva #$08 :STACKORIGIN,x
  6286 46A7 E8				inx
  6287 46A8 AD 14 61 95 94		mva BW1 :STACKORIGIN,x
  6288 46AD 20 F7 2E			jsr A8LIBWIN.WPRINT
  6289
  6290 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 122
  6291
  6292 46B0 E8				inx
  6293 46B1 AD 77 4A 95 94		mva CC :STACKORIGIN,x
  6294 46B6 AD 78 4A 95 A4		mva CC+1 :STACKORIGIN+STACKWIDTH,x
  6295 46BB E8				inx
  6296 46BC A9 00 95 94			mva #$00 :STACKORIGIN,x
  6297 46C0 E8				inx
  6298 46C1 A9 04 95 94			mva #$04 :STACKORIGIN,x
  6299 46C5 E8				inx
  6300 46C6 A9 08 95 94			mva #$08 :STACKORIGIN,x
  6301 46CA E8				inx
  6302 46CB AD 14 61 95 94		mva BW1 :STACKORIGIN,x
  6303 46D0 20 F7 2E			jsr A8LIBWIN.WPRINT
  6304
  6305 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 123
  6306
  6307 46D3 E8				inx
  6308 46D4 AD 79 4A 95 94		mva CD :STACKORIGIN,x
  6309 46D9 AD 7A 4A 95 A4		mva CD+1 :STACKORIGIN+STACKWIDTH,x
  6310 46DE E8				inx
  6311 46DF A9 00 95 94			mva #$00 :STACKORIGIN,x
  6312 46E3 E8				inx
  6313 46E4 A9 05 95 94			mva #$05 :STACKORIGIN,x
  6314 46E8 E8				inx
  6315 46E9 A9 08 95 94			mva #$08 :STACKORIGIN,x
  6316 46ED E8				inx
  6317 46EE AD 14 61 95 94		mva BW1 :STACKORIGIN,x
  6318 46F3 20 F7 2E			jsr A8LIBWIN.WPRINT
  6319
  6320 				; --- RepeatUntilProlog
  6321 46F6			l_1F9E
  6322
  6323 				; optimize FAIL ('A8LIBWIN.WORN', appdemo.pas), line = 129
  6324
  6325 46F6 E8				inx
  6326 46F7 AD 7D 4A 95 94		mva CI :STACKORIGIN,x
  6327 46FC AD 7E 4A 95 A4		mva CI+1 :STACKORIGIN+STACKWIDTH,x
  6328 4701 E8				inx
  6329 4702 A9 FB 95 94			mva #$FB :STACKORIGIN,x
  6330 4706 E8				inx
  6331 4707 A9 F2 95 94			mva #$F2 :STACKORIGIN,x
  6332 470B E8				inx
  6333 470C AD 14 61 95 94		mva BW1 :STACKORIGIN,x
  6334 4711 20 DE 30			jsr A8LIBWIN.WORN
  6335
  6336 				; optimize OK (appdemo.pas), line = 132
  6337
  6338 4714 AD 14 61			lda BW1
  6339 4717 8D 1A 5F			sta A8LIBGADG.GINPUT.BN
  6340 471A A9 08			lda #$08
  6341 471C 8D 1B 5F			sta A8LIBGADG.GINPUT.X
  6342 471F A9 02			lda #$02
  6343 4721 8D 1C 5F			sta A8LIBGADG.GINPUT.Y
  6344 4724 A9 03			lda #$03
  6345 4726 8D 1D 5F			sta A8LIBGADG.GINPUT.BT
  6346 4729 A9 1B			lda #$1B
  6347 472B 8D 1E 5F			sta A8LIBGADG.GINPUT.BS
  6348 472E AD 73 4A			lda CA
  6349 4731 8D 1F 5F			sta A8LIBGADG.GINPUT.PS
  6350 4734 AD 74 4A			lda CA+1
  6351 4737 8D 20 5F			sta A8LIBGADG.GINPUT.PS+1
  6352 473A 20 70 3B			jsr A8LIBGADG.GINPUT
  6353 473D AD 21 5F			lda A8LIBGADG.GINPUT.RESULT
  6354 4740 8D 16 61			sta BA
  6355
  6356 				; optimize OK (appdemo.pas), line = 133
  6357
  6358 4743 AD 14 61			lda BW1
  6359 4746 8D 1A 5F			sta A8LIBGADG.GINPUT.BN
  6360 4749 A9 08			lda #$08
  6361 474B 8D 1B 5F			sta A8LIBGADG.GINPUT.X
  6362 474E A9 03			lda #$03
  6363 4750 8D 1C 5F			sta A8LIBGADG.GINPUT.Y
  6364 4753 A9 02			lda #$02
  6365 4755 8D 1D 5F			sta A8LIBGADG.GINPUT.BT
  6366 4758 A9 1B			lda #$1B
  6367 475A 8D 1E 5F			sta A8LIBGADG.GINPUT.BS
  6368 475D AD 75 4A			lda CB
  6369 4760 8D 1F 5F			sta A8LIBGADG.GINPUT.PS
  6370 4763 AD 76 4A			lda CB+1
  6371 4766 8D 20 5F			sta A8LIBGADG.GINPUT.PS+1
  6372 4769 20 70 3B			jsr A8LIBGADG.GINPUT
  6373 476C AD 21 5F			lda A8LIBGADG.GINPUT.RESULT
  6374 476F 8D 17 61			sta BB
  6375
  6376 				; optimize OK (appdemo.pas), line = 134
  6377
  6378 4772 AD 14 61			lda BW1
  6379 4775 8D 1A 5F			sta A8LIBGADG.GINPUT.BN
  6380 4778 A9 08			lda #$08
  6381 477A 8D 1B 5F			sta A8LIBGADG.GINPUT.X
  6382 477D A9 04			lda #$04
  6383 477F 8D 1C 5F			sta A8LIBGADG.GINPUT.Y
  6384 4782 A9 01			lda #$01
  6385 4784 8D 1D 5F			sta A8LIBGADG.GINPUT.BT
  6386 4787 A9 1B			lda #$1B
  6387 4789 8D 1E 5F			sta A8LIBGADG.GINPUT.BS
  6388 478C AD 77 4A			lda CC
  6389 478F 8D 1F 5F			sta A8LIBGADG.GINPUT.PS
  6390 4792 AD 78 4A			lda CC+1
  6391 4795 8D 20 5F			sta A8LIBGADG.GINPUT.PS+1
  6392 4798 20 70 3B			jsr A8LIBGADG.GINPUT
  6393 479B AD 21 5F			lda A8LIBGADG.GINPUT.RESULT
  6394 479E 8D 18 61			sta BC
  6395
  6396 				; optimize OK (appdemo.pas), line = 135
  6397
  6398 47A1 AD 14 61			lda BW1
  6399 47A4 8D 1A 5F			sta A8LIBGADG.GINPUT.BN
  6400 47A7 A9 08			lda #$08
  6401 47A9 8D 1B 5F			sta A8LIBGADG.GINPUT.X
  6402 47AC A9 05			lda #$05
  6403 47AE 8D 1C 5F			sta A8LIBGADG.GINPUT.Y
  6404 47B1 A9 00			lda #$00
  6405 47B3 8D 1D 5F			sta A8LIBGADG.GINPUT.BT
  6406 47B6 A9 1B			lda #$1B
  6407 47B8 8D 1E 5F			sta A8LIBGADG.GINPUT.BS
  6408 47BB AD 79 4A			lda CD
  6409 47BE 8D 1F 5F			sta A8LIBGADG.GINPUT.PS
  6410 47C1 AD 7A 4A			lda CD+1
  6411 47C4 8D 20 5F			sta A8LIBGADG.GINPUT.PS+1
  6412 47C7 20 70 3B			jsr A8LIBGADG.GINPUT
  6413 47CA AD 21 5F			lda A8LIBGADG.GINPUT.RESULT
  6414 47CD 8D 19 61			sta BD
  6415
  6416 				; optimize OK (appdemo.pas), line = 138
  6417
  6418 47D0 AD 14 61			lda BW1
  6419 47D3 8D 0A 5F			sta A8LIBGADG.GSPIN.BN
  6420 47D6 A9 08			lda #$08
  6421 47D8 8D 0B 5F			sta A8LIBGADG.GSPIN.X
  6422 47DB A9 06			lda #$06
  6423 47DD 8D 0C 5F			sta A8LIBGADG.GSPIN.Y
  6424 47E0 A9 00			lda #$00
  6425 47E2 8D 0D 5F			sta A8LIBGADG.GSPIN.BL
  6426 47E5 A9 64			lda #$64
  6427 47E7 8D 0E 5F			sta A8LIBGADG.GSPIN.BM
  6428 47EA AD 1A 61			lda BVP
  6429 47ED 8D 0F 5F			sta A8LIBGADG.GSPIN.BI
  6430 47F0 A9 01			lda #$01
  6431 47F2 8D 10 5F			sta A8LIBGADG.GSPIN.BE
  6432 47F5 20 9A 39			jsr A8LIBGADG.GSPIN
  6433 47F8 AD 11 5F			lda A8LIBGADG.GSPIN.RESULT
  6434 47FB 8D 13 61			sta BV
  6435
  6436 				; optimize OK (appdemo.pas), line = 139
  6437
  6438 47FE C9 FD			cmp #$FD
  6439 4800 F0 07			jeq l_2007
  6440 4802 C9 FE			cmp #$FE
  6441 4804 F0 03			jeq l_2007
  6442
  6443 				; optimize OK (appdemo.pas), line = 141
  6444
  6445 4806 8D 1A 61			sta BVP
  6446 4809			l_2007
  6447
  6448 				; optimize FAIL ('A8LIBWIN.WORN', appdemo.pas), line = 146
  6449
  6450 4809 E8				inx
  6451 480A AD 7F 4A 95 94		mva CR :STACKORIGIN,x
  6452 480F AD 80 4A 95 A4		mva CR+1 :STACKORIGIN+STACKWIDTH,x
  6453 4814 E8				inx
  6454 4815 A9 FB 95 94			mva #$FB :STACKORIGIN,x
  6455 4819 E8				inx
  6456 481A A9 F2 95 94			mva #$F2 :STACKORIGIN,x
  6457 481E E8				inx
  6458 481F AD 14 61 95 94		mva BW1 :STACKORIGIN,x
  6459 4824 20 DE 30			jsr A8LIBWIN.WORN
  6460
  6461 				; optimize OK (appdemo.pas), line = 149
  6462
  6463 4827 AD 14 61			lda BW1
  6464 482A 8D F9 5E			sta A8LIBGADG.GRADIO.BN
  6465 482D A9 02			lda #$02
  6466 482F 8D FA 5E			sta A8LIBGADG.GRADIO.X
  6467 4832 A9 09			lda #$09
  6468 4834 8D FB 5E			sta A8LIBGADG.GRADIO.Y
  6469 4837 A9 01			lda #$01
  6470 4839 8D FC 5E			sta A8LIBGADG.GRADIO.BD
  6471 483C 8D FD 5E			sta A8LIBGADG.GRADIO.BE
  6472 483F AD 1B 61			lda BRAP
  6473 4842 8D FE 5E			sta A8LIBGADG.GRADIO.BI
  6474 4845 A9 03			lda #$03
  6475 4847 8D FF 5E			sta A8LIBGADG.GRADIO.BS
  6476 484A A9 F8			lda #$F8
  6477 484C 8D 98 39			sta A8LIBGADG.GRADIO.PS
  6478 484F A9 24			lda #$24
  6479 4851 8D 99 39			sta A8LIBGADG.GRADIO.PS+1
  6480 4854 20 8E 37			jsr A8LIBGADG.GRADIO
  6481 4857 AD 02 5F			lda A8LIBGADG.GRADIO.RESULT
  6482 485A 8D 0E 61			sta BRA
  6483
  6484 				; optimize OK (appdemo.pas), line = 152
  6485
  6486 485D C9 FD			cmp #$FD
  6487 485F F0 07			jeq l_2046
  6488 4861 C9 FE			cmp #$FE
  6489 4863 F0 03			jeq l_2046
  6490
  6491 				; optimize OK (appdemo.pas), line = 154
  6492
  6493 4865 8D 1B 61			sta BRAP
  6494 4868			l_2046
  6495
  6496 				; optimize OK (appdemo.pas), line = 158
  6497
  6498 4868 AD 14 61			lda BW1
  6499 486B 8D F9 5E			sta A8LIBGADG.GRADIO.BN
  6500 486E A9 02			lda #$02
  6501 4870 8D FA 5E			sta A8LIBGADG.GRADIO.X
  6502 4873 A9 09			lda #$09
  6503 4875 8D FB 5E			sta A8LIBGADG.GRADIO.Y
  6504 4878 A9 01			lda #$01
  6505 487A 8D FC 5E			sta A8LIBGADG.GRADIO.BD
  6506 487D A9 00			lda #$00
  6507 487F 8D FD 5E			sta A8LIBGADG.GRADIO.BE
  6508 4882 AD 1B 61			lda BRAP
  6509 4885 8D FE 5E			sta A8LIBGADG.GRADIO.BI
  6510 4888 A9 03			lda #$03
  6511 488A 8D FF 5E			sta A8LIBGADG.GRADIO.BS
  6512 488D A9 F8			lda #$F8
  6513 488F 8D 98 39			sta A8LIBGADG.GRADIO.PS
  6514 4892 A9 24			lda #$24
  6515 4894 8D 99 39			sta A8LIBGADG.GRADIO.PS+1
  6516 4897 20 8E 37			jsr A8LIBGADG.GRADIO
  6517
  6518 				; optimize OK (appdemo.pas), line = 161
  6519
  6520 489A AD 14 61			lda BW1
  6521 489D 8D F9 5E			sta A8LIBGADG.GRADIO.BN
  6522 48A0 A9 02			lda #$02
  6523 48A2 8D FA 5E			sta A8LIBGADG.GRADIO.X
  6524 48A5 A9 0C			lda #$0C
  6525 48A7 8D FB 5E			sta A8LIBGADG.GRADIO.Y
  6526 48AA A9 02			lda #$02
  6527 48AC 8D FC 5E			sta A8LIBGADG.GRADIO.BD
  6528 48AF A9 01			lda #$01
  6529 48B1 8D FD 5E			sta A8LIBGADG.GRADIO.BE
  6530 48B4 AD 1C 61			lda BRBP
  6531 48B7 8D FE 5E			sta A8LIBGADG.GRADIO.BI
  6532 48BA A9 03			lda #$03
  6533 48BC 8D FF 5E			sta A8LIBGADG.GRADIO.BS
  6534 48BF A9 FE			lda #$FE
  6535 48C1 8D 98 39			sta A8LIBGADG.GRADIO.PS
  6536 48C4 A9 24			lda #$24
  6537 48C6 8D 99 39			sta A8LIBGADG.GRADIO.PS+1
  6538 48C9 20 8E 37			jsr A8LIBGADG.GRADIO
  6539 48CC AD 02 5F			lda A8LIBGADG.GRADIO.RESULT
  6540 48CF 8D 0F 61			sta BRB
  6541
  6542 				; optimize OK (appdemo.pas), line = 164
  6543
  6544 48D2 C9 FD			cmp #$FD
  6545 48D4 F0 07			jeq l_208A
  6546 48D6 C9 FE			cmp #$FE
  6547 48D8 F0 03			jeq l_208A
  6548
  6549 				; optimize OK (appdemo.pas), line = 166
  6550
  6551 48DA 8D 1C 61			sta BRBP
  6552 48DD			l_208A
  6553
  6554 				; optimize OK (appdemo.pas), line = 170
  6555
  6556 48DD AD 14 61			lda BW1
  6557 48E0 8D F9 5E			sta A8LIBGADG.GRADIO.BN
  6558 48E3 A9 02			lda #$02
  6559 48E5 8D FA 5E			sta A8LIBGADG.GRADIO.X
  6560 48E8 A9 0C			lda #$0C
  6561 48EA 8D FB 5E			sta A8LIBGADG.GRADIO.Y
  6562 48ED A9 02			lda #$02
  6563 48EF 8D FC 5E			sta A8LIBGADG.GRADIO.BD
  6564 48F2 A9 00			lda #$00
  6565 48F4 8D FD 5E			sta A8LIBGADG.GRADIO.BE
  6566 48F7 AD 1C 61			lda BRBP
  6567 48FA 8D FE 5E			sta A8LIBGADG.GRADIO.BI
  6568 48FD A9 03			lda #$03
  6569 48FF 8D FF 5E			sta A8LIBGADG.GRADIO.BS
  6570 4902 A9 FE			lda #$FE
  6571 4904 8D 98 39			sta A8LIBGADG.GRADIO.PS
  6572 4907 A9 24			lda #$24
  6573 4909 8D 99 39			sta A8LIBGADG.GRADIO.PS+1
  6574 490C 20 8E 37			jsr A8LIBGADG.GRADIO
  6575
  6576 				; optimize FAIL ('A8LIBWIN.WORN', appdemo.pas), line = 174
  6577
  6578 490F E8				inx
  6579 4910 AD 81 4A 95 94		mva CX :STACKORIGIN,x
  6580 4915 AD 82 4A 95 A4		mva CX+1 :STACKORIGIN+STACKWIDTH,x
  6581 491A E8				inx
  6582 491B A9 FB 95 94			mva #$FB :STACKORIGIN,x
  6583 491F E8				inx
  6584 4920 A9 F2 95 94			mva #$F2 :STACKORIGIN,x
  6585 4924 E8				inx
  6586 4925 AD 14 61 95 94		mva BW1 :STACKORIGIN,x
  6587 492A 20 DE 30			jsr A8LIBWIN.WORN
  6588
  6589 				; --- RepeatUntilProlog
  6590 492D			l_20A9
  6591
  6592 				; optimize OK (appdemo.pas), line = 179
  6593
  6594 492D AD 14 61			lda BW1
  6595 4930 8D F0 5D			sta A8LIBGADG.GCHECK.BN
  6596 4933 A9 15			lda #$15
  6597 4935 8D F1 5D			sta A8LIBGADG.GCHECK.X
  6598 4938 A9 0C			lda #$0C
  6599 493A 8D F2 5D			sta A8LIBGADG.GCHECK.Y
  6600 493D A9 01			lda #$01
  6601 493F 8D F3 5D			sta A8LIBGADG.GCHECK.BI
  6602 4942 AD 10 61			lda BCHAP
  6603 4945 8D F4 5D			sta A8LIBGADG.GCHECK.BD
  6604 4948 20 13 36			jsr A8LIBGADG.GCHECK
  6605 494B AD F5 5D			lda A8LIBGADG.GCHECK.RESULT
  6606 494E 8D 1D 61			sta BCHA
  6607
  6608 				; optimize OK (appdemo.pas), line = 182
  6609
  6610 4951 C9 FD			cmp #$FD
  6611 4953 F0 07			jeq l_20D4
  6612 4955 C9 FE			cmp #$FE
  6613 4957 F0 03			jeq l_20D4
  6614
  6615 				; optimize OK (appdemo.pas), line = 184
  6616
  6617 4959 8D 10 61			sta BCHAP
  6618 495C			l_20D4
  6619
  6620 				; optimize OK (appdemo.pas), line = 186
  6621
  6622 495C AD 1D 61			lda BCHA
  6623 495F C9 FD			cmp #$FD
  6624 4961 F0 04			jeq l_20A9x
  6625 4963 C9 FE			cmp #$FE
  6626 4965 D0 C6			jne l_20A9
  6627 4967			l_20A9x
  6628
  6629 				; --- RepeatUntilProlog
  6630 4967			l_20F7
  6631
  6632 				; optimize OK (appdemo.pas), line = 191
  6633
  6634 4967 AD 14 61			lda BW1
  6635 496A 8D F0 5D			sta A8LIBGADG.GCHECK.BN
  6636 496D A9 15			lda #$15
  6637 496F 8D F1 5D			sta A8LIBGADG.GCHECK.X
  6638 4972 A9 0D			lda #$0D
  6639 4974 8D F2 5D			sta A8LIBGADG.GCHECK.Y
  6640 4977 A9 01			lda #$01
  6641 4979 8D F3 5D			sta A8LIBGADG.GCHECK.BI
  6642 497C AD 11 61			lda BCHBP
  6643 497F 8D F4 5D			sta A8LIBGADG.GCHECK.BD
  6644 4982 20 13 36			jsr A8LIBGADG.GCHECK
  6645 4985 AD F5 5D			lda A8LIBGADG.GCHECK.RESULT
  6646 4988 8D 1E 61			sta BCHB
  6647
  6648 				; optimize OK (appdemo.pas), line = 194
  6649
  6650 498B C9 FD			cmp #$FD
  6651 498D F0 07			jeq l_2122
  6652 498F C9 FE			cmp #$FE
  6653 4991 F0 03			jeq l_2122
  6654
  6655 				; optimize OK (appdemo.pas), line = 196
  6656
  6657 4993 8D 11 61			sta BCHBP
  6658 4996			l_2122
  6659
  6660 				; optimize OK (appdemo.pas), line = 198
  6661
  6662 4996 AD 1E 61			lda BCHB
  6663 4999 C9 FD			cmp #$FD
  6664 499B F0 04			jeq l_20F7x
  6665 499D C9 FE			cmp #$FE
  6666 499F D0 C6			jne l_20F7
  6667 49A1			l_20F7x
  6668
  6669 				; --- RepeatUntilProlog
  6670 49A1			l_2145
  6671
  6672 				; optimize OK (appdemo.pas), line = 203
  6673
  6674 49A1 AD 14 61			lda BW1
  6675 49A4 8D F0 5D			sta A8LIBGADG.GCHECK.BN
  6676 49A7 A9 15			lda #$15
  6677 49A9 8D F1 5D			sta A8LIBGADG.GCHECK.X
  6678 49AC A9 0E			lda #$0E
  6679 49AE 8D F2 5D			sta A8LIBGADG.GCHECK.Y
  6680 49B1 A9 01			lda #$01
  6681 49B3 8D F3 5D			sta A8LIBGADG.GCHECK.BI
  6682 49B6 AD 12 61			lda BCHCP
  6683 49B9 8D F4 5D			sta A8LIBGADG.GCHECK.BD
  6684 49BC 20 13 36			jsr A8LIBGADG.GCHECK
  6685 49BF AD F5 5D			lda A8LIBGADG.GCHECK.RESULT
  6686 49C2 8D 1F 61			sta BCHC
  6687
  6688 				; optimize OK (appdemo.pas), line = 206
  6689
  6690 49C5 C9 FD			cmp #$FD
  6691 49C7 F0 07			jeq l_2170
  6692 49C9 C9 FE			cmp #$FE
  6693 49CB F0 03			jeq l_2170
  6694
  6695 				; optimize OK (appdemo.pas), line = 208
  6696
  6697 49CD 8D 12 61			sta BCHCP
  6698 49D0			l_2170
  6699
  6700 				; optimize OK (appdemo.pas), line = 210
  6701
  6702 49D0 AD 1F 61			lda BCHC
  6703 49D3 C9 FD			cmp #$FD
  6704 49D5 F0 04			jeq l_2145x
  6705 49D7 C9 FE			cmp #$FE
  6706 49D9 D0 C6			jne l_2145
  6707 49DB			l_2145x
  6708
  6709 				; optimize FAIL ('A8LIBWIN.WORN', appdemo.pas), line = 213
  6710
  6711 49DB E8				inx
  6712 49DC AD 7B 4A 95 94		mva CF :STACKORIGIN,x
  6713 49E1 AD 7C 4A 95 A4		mva CF+1 :STACKORIGIN+STACKWIDTH,x
  6714 49E6 E8				inx
  6715 49E7 A9 FB 95 94			mva #$FB :STACKORIGIN,x
  6716 49EB E8				inx
  6717 49EC A9 F2 95 94			mva #$F2 :STACKORIGIN,x
  6718 49F0 E8				inx
  6719 49F1 AD 14 61 95 94		mva BW1 :STACKORIGIN,x
  6720 49F6 20 DE 30			jsr A8LIBWIN.WORN
  6721
  6722 				; optimize OK (appdemo.pas), line = 216
  6723
  6724 49F9 AD 14 61			lda BW1
  6725 49FC 8D E3 5D			sta A8LIBGADG.GBUTTON.BN
  6726 49FF A9 15			lda #$15
  6727 4A01 8D E4 5D			sta A8LIBGADG.GBUTTON.X
  6728 4A04 A9 10			lda #$10
  6729 4A06 8D E5 5D			sta A8LIBGADG.GBUTTON.Y
  6730 4A09 A9 01			lda #$01
  6731 4A0B 8D E6 5D			sta A8LIBGADG.GBUTTON.BD
  6732 4A0E A9 02			lda #$02
  6733 4A10 8D E7 5D			sta A8LIBGADG.GBUTTON.BS
  6734 4A13 A9 F4			lda #$F4
  6735 4A15 8D 11 36			sta A8LIBGADG.GBUTTON.PA
  6736 4A18 A9 24			lda #$24
  6737 4A1A 8D 12 36			sta A8LIBGADG.GBUTTON.PA+1
  6738 4A1D 20 80 34			jsr A8LIBGADG.GBUTTON
  6739 4A20 AD EA 5D			lda A8LIBGADG.GBUTTON.RESULT
  6740 4A23 8D 15 61			sta BM
  6741
  6742 				; optimize OK (appdemo.pas), line = 217
  6743
  6744 4A26 AD 14 61			lda BW1
  6745 4A29 8D E3 5D			sta A8LIBGADG.GBUTTON.BN
  6746 4A2C A9 15			lda #$15
  6747 4A2E 8D E4 5D			sta A8LIBGADG.GBUTTON.X
  6748 4A31 A9 10			lda #$10
  6749 4A33 8D E5 5D			sta A8LIBGADG.GBUTTON.Y
  6750 4A36 A9 00			lda #$00
  6751 4A38 8D E6 5D			sta A8LIBGADG.GBUTTON.BD
  6752 4A3B A9 02			lda #$02
  6753 4A3D 8D E7 5D			sta A8LIBGADG.GBUTTON.BS
  6754 4A40 A9 F4			lda #$F4
  6755 4A42 8D 11 36			sta A8LIBGADG.GBUTTON.PA
  6756 4A45 A9 24			lda #$24
  6757 4A47 8D 12 36			sta A8LIBGADG.GBUTTON.PA+1
  6758 4A4A 20 80 34			jsr A8LIBGADG.GBUTTON
  6759
  6760 				; optimize OK (appdemo.pas), line = 218
  6761
  6762 4A4D AD 15 61			lda BM
  6763 4A50 C9 FE			cmp #$FE
  6764 4A52 D0 03 4C F6 46		jeq l_1F9E
  6765
  6766 				; optimize OK (appdemo.pas), line = 221
  6767
  6768 4A57 C9 01			cmp #$01
  6769 4A59 D0 11			jne l_21CE
  6770
  6771 				; optimize OK (appdemo.pas), line = 223
  6772
  6773 4A5B A9 01			lda #$01
  6774 4A5D 8D 0D 61			sta RESULT
  6775
  6776 				; optimize FAIL ('A8LIBGADG.GALERT', appdemo.pas), line = 224
  6777
  6778 4A60 E8				inx
  6779 4A61 A9 D4 95 94			mva #$D4 :STACKORIGIN,x
  6780 4A65 A9 21 95 A4			mva #$21 :STACKORIGIN+STACKWIDTH,x
  6781 4A69 20 14 33			jsr A8LIBGADG.GALERT
  6782 4A6C			l_21CE
  6783
  6784 				; optimize OK (appdemo.pas), line = 228
  6785
  6786 4A6C AD 14 61			lda BW1
  6787 4A6F 20 25 2D			jsr A8LIBWIN.WCLOSE
  6788 4A72			@exit
  6789
  6790 				; ------------------------------------------------------------
  6791
  6792 = 610D			RESULT	= DATAORIGIN+$10F9
  6793 = 610E			BRA	= DATAORIGIN+$10FA
  6794 = 610F			BRB	= DATAORIGIN+$10FB
  6795 = 6110			BCHAP	= DATAORIGIN+$10FC
  6796 = 6111			BCHBP	= DATAORIGIN+$10FD
  6797 = 6112			BCHCP	= DATAORIGIN+$10FE
  6798 = 6113			BV	= DATAORIGIN+$10FF
  6799 = 6114			BW1	= DATAORIGIN+$1100
  6800 = 6115			BM	= DATAORIGIN+$1101
  6801 = 6116			BA	= DATAORIGIN+$1102
  6802 = 6117			BB	= DATAORIGIN+$1103
  6803 = 6118			BC	= DATAORIGIN+$1104
  6804 = 6119			BD	= DATAORIGIN+$1105
  6805 = 611A			BVP	= DATAORIGIN+$1106
  6806 = 611B			BRAP	= DATAORIGIN+$1107
  6807 = 611C			BRBP	= DATAORIGIN+$1108
  6808 = 611D			BCHA	= DATAORIGIN+$1109
  6809 = 611E			BCHB	= DATAORIGIN+$110A
  6810 = 611F			BCHC	= DATAORIGIN+$110B
  6811 = 6120			adr.CA	= [DATAORIGIN+$110C] .array [42]
  6812 4A72			.var CA	= adr.CA .word
  6813 = 614A			adr.CB	= [DATAORIGIN+$1136] .array [42]
  6814 4A72			.var CB	= adr.CB .word
  6815 = 6174			adr.CC	= [DATAORIGIN+$1160] .array [42]
  6816 4A72			.var CC	= adr.CC .word
  6817 = 619E			adr.CD	= [DATAORIGIN+$118A] .array [42]
  6818 4A72			.var CD	= adr.CD .word
  6819 = 61C8			adr.CF	= [DATAORIGIN+$11B4] .array [16]
  6820 4A72			.var CF	= adr.CF .word
  6821 = 61D8			adr.CI	= [DATAORIGIN+$11C4] .array [16]
  6822 4A72			.var CI	= adr.CI .word
  6823 = 61E8			adr.CR	= [DATAORIGIN+$11D4] .array [16]
  6824 4A72			.var CR	= adr.CR .word
  6825 = 61F8			adr.CX	= [DATAORIGIN+$11E4] .array [16]
  6826 4A72			.var CX	= adr.CX .word
  6827 = 24F4			adr.PAB	= CODEORIGIN+$04F4
  6828 4A72			.var PAB	= adr.PAB .word
  6829 = 24F8			adr.PRA	= CODEORIGIN+$04F8
  6830 4A72			.var PRA	= adr.PRA .word
  6831 = 24FE			adr.PRB	= CODEORIGIN+$04FE
  6832 4A72			.var PRB	= adr.PRB .word
  6833
  6834 = 610E			@VarData	= BRA
  6835 = 00FA			@VarDataSize	= 250
  6836
  6837 4A72 60				rts						; ret
  6838 = 4A73 20 61		CA
  6838 = 4A75 4A 61		CB
  6838 = 4A77 74 61		CC
  6838 = 4A79 9E 61		CD
  6838 = 4A7B C8 61		CF
  6838 = 4A7D D8 61		CI
  6838 = 4A7F E8 61		CR
  6838 = 4A81 F8 61		CX
  6838 = 4A83 F4 24		PAB
  6838 = 4A85 F8 24		PRA
  6838 = 4A87 FE 24		PRB
  6838 				.endl
  6839
  6840 4A89			.local	PROGTEST					; PROCEDURE
  6841
  6842 				; optimize OK (appdemo.pas), line = 241
  6843
  6844 4A89 A9 09			lda #$09
  6845 4A8B 8D C3 59			sta A8LIBWIN.WOPEN.X
  6846 4A8E A9 02			lda #$02
  6847 4A90 8D C4 59			sta A8LIBWIN.WOPEN.Y
  6848 4A93 A9 14			lda #$14
  6849 4A95 8D C5 59			sta A8LIBWIN.WOPEN.W
  6850 4A98 A9 0E			lda #$0E
  6851 4A9A 8D C6 59			sta A8LIBWIN.WOPEN.H
  6852 4A9D A9 00			lda #$00
  6853 4A9F 8D C7 59			sta A8LIBWIN.WOPEN.BT
  6854 4AA2 20 50 2B			jsr A8LIBWIN.WOPEN
  6855 4AA5 AD C8 59			lda A8LIBWIN.WOPEN.RESULT
  6856 4AA8 8D 08 62			sta BW1
  6857
  6858 				; optimize FAIL ('A8LIBWIN.WORN', appdemo.pas), line = 242
  6859
  6860 4AAB E8				inx
  6861 4AAC A9 FA 95 94			mva #$FA :STACKORIGIN,x
  6862 4AB0 A9 21 95 A4			mva #$21 :STACKORIGIN+STACKWIDTH,x
  6863 4AB4 E8				inx
  6864 4AB5 A9 FB 95 94			mva #$FB :STACKORIGIN,x
  6865 4AB9 E8				inx
  6866 4ABA A9 F1 95 94			mva #$F1 :STACKORIGIN,x
  6867 4ABE E8				inx
  6868 4ABF AD 08 62 95 94		mva BW1 :STACKORIGIN,x
  6869 4AC4 20 DE 30			jsr A8LIBWIN.WORN
  6870
  6871 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 243
  6872
  6873 4AC7 E8				inx
  6874 4AC8 A9 02 95 94			mva #$02 :STACKORIGIN,x
  6875 4ACC A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  6876 4AD0 E8				inx
  6877 4AD1 A9 00 95 94			mva #$00 :STACKORIGIN,x
  6878 4AD5 E8				inx
  6879 4AD6 A9 01 95 94			mva #$01 :STACKORIGIN,x
  6880 4ADA E8				inx
  6881 4ADB 95 94			sta :STACKORIGIN,x
  6882 4ADD E8				inx
  6883 4ADE AD 08 62 95 94		mva BW1 :STACKORIGIN,x
  6884 4AE3 20 F7 2E			jsr A8LIBWIN.WPRINT
  6885
  6886 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 244
  6887
  6888 4AE6 E8				inx
  6889 4AE7 A9 11 95 94			mva #$11 :STACKORIGIN,x
  6890 4AEB A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  6891 4AEF E8				inx
  6892 4AF0 A9 00 95 94			mva #$00 :STACKORIGIN,x
  6893 4AF4 E8				inx
  6894 4AF5 A9 02 95 94			mva #$02 :STACKORIGIN,x
  6895 4AF9 E8				inx
  6896 4AFA A9 01 95 94			mva #$01 :STACKORIGIN,x
  6897 4AFE E8				inx
  6898 4AFF AD 08 62 95 94		mva BW1 :STACKORIGIN,x
  6899 4B04 20 F7 2E			jsr A8LIBWIN.WPRINT
  6900
  6901 				; optimize OK (appdemo.pas), line = 247
  6902
  6903 4B07 A9 07			lda #$07
  6904 4B09 8D C3 59			sta A8LIBWIN.WOPEN.X
  6905 4B0C A9 12			lda #$12
  6906 4B0E 8D C4 59			sta A8LIBWIN.WOPEN.Y
  6907 4B11 A9 18			lda #$18
  6908 4B13 8D C5 59			sta A8LIBWIN.WOPEN.W
  6909 4B16 A9 04			lda #$04
  6910 4B18 8D C6 59			sta A8LIBWIN.WOPEN.H
  6911 4B1B A9 00			lda #$00
  6912 4B1D 8D C7 59			sta A8LIBWIN.WOPEN.BT
  6913 4B20 20 50 2B			jsr A8LIBWIN.WOPEN
  6914 4B23 AD C8 59			lda A8LIBWIN.WOPEN.RESULT
  6915 4B26 8D 09 62			sta BW2
  6916
  6917 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 248
  6918
  6919 4B29 E8				inx
  6920 4B2A A9 20 95 94			mva #$20 :STACKORIGIN,x
  6921 4B2E A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  6922 4B32 E8				inx
  6923 4B33 A9 00 95 94			mva #$00 :STACKORIGIN,x
  6924 4B37 E8				inx
  6925 4B38 A9 01 95 94			mva #$01 :STACKORIGIN,x
  6926 4B3C E8				inx
  6927 4B3D A9 02 95 94			mva #$02 :STACKORIGIN,x
  6928 4B41 E8				inx
  6929 4B42 AD 09 62 95 94		mva BW2 :STACKORIGIN,x
  6930 4B47 20 F7 2E			jsr A8LIBWIN.WPRINT
  6931
  6932 				; optimize OK (appdemo.pas), line = 251
  6933
  6934 4B4A AD 09 62			lda BW2
  6935 4B4D 8D C7 5D			sta A8LIBGADG.GPROG.BN
  6936 4B50 A9 02			lda #$02
  6937 4B52 8D C8 5D			sta A8LIBGADG.GPROG.X
  6938 4B55 8D C9 5D			sta A8LIBGADG.GPROG.Y
  6939 4B58 A9 00			lda #$00
  6940 4B5A 8D CA 5D			sta A8LIBGADG.GPROG.BS
  6941 4B5D 20 FC 33			jsr A8LIBGADG.GPROG
  6942
  6943 				; optimize OK (appdemo.pas), line = 254
  6944
  6945 4B60 A9 00			lda #$00
  6946 4B62 8D 0A 62			sta BL
  6947
  6948 4B65			l_2220
  6949 				; --- ForToDoCondition
  6950 4B65 AD 0A 62			lda BL
  6951 4B68 C9 0A			cmp #$0A
  6952 4B6A 90 03 4C 6D 4C		jcs l_222E
  6953
  6954 				; optimize OK (appdemo.pas), line = 257
  6955
  6956 4B6F 20 43 2E			jsr A8LIBWIN.WSTAT
  6957 4B72 AD 02 5A			lda A8LIBWIN.WSTAT.RESULT
  6958 4B75 8D 0B 62			sta BS
  6959
  6960 				; optimize OK (appdemo.pas), line = 260
  6961
  6962 4B78 A9 03			lda #$03
  6963 4B7A 18 6D 0A 62			add BL
  6964 4B7E 8D 05 5A			sta A8LIBWIN.WPOS.Y
  6965 4B81 AD 08 62			lda BW1
  6966 4B84 8D 03 5A			sta A8LIBWIN.WPOS.BN
  6967 4B87 A9 06			lda #$06
  6968 4B89 8D 04 5A			sta A8LIBWIN.WPOS.X
  6969 4B8C 20 50 2E			jsr A8LIBWIN.WPOS
  6970
  6971 				; optimize OK (appdemo.pas), line = 261
  6972
  6973 4B8F AD 0A 62			lda BL
  6974 4B92 18 69 30			add #$30
  6975 4B95 8D 08 5A			sta A8LIBWIN.WPUT.X
  6976 4B98 AD 08 62			lda BW1
  6977 4B9B 8D 07 5A			sta A8LIBWIN.WPUT.BN
  6978 4B9E 20 8A 2E			jsr A8LIBWIN.WPUT
  6979
  6980 				; optimize OK (appdemo.pas), line = 264
  6981
  6982 4BA1 AD 0B 62			lda BS
  6983 4BA4 C9 01			cmp #$01
  6984 4BA6 D0 28			jne l_225E
  6985
  6986 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 266
  6987
  6988 4BA8 E8				inx
  6989 4BA9 A9 2B 95 94			mva #$2B :STACKORIGIN,x
  6990 4BAD A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  6991 4BB1 E8				inx
  6992 4BB2 A9 00 95 94			mva #$00 :STACKORIGIN,x
  6993 4BB6 E8				inx
  6994 4BB7 A9 03			lda #$03
  6995 4BB9 18 6D 0A 62			add BL
  6996 4BBD 95 94			sta :STACKORIGIN,x
  6997 4BBF E8				inx
  6998 4BC0 A9 08 95 94			mva #$08 :STACKORIGIN,x
  6999 4BC4 E8				inx
  7000 4BC5 AD 08 62 95 94		mva BW1 :STACKORIGIN,x
  7001 4BCA 20 F7 2E			jsr A8LIBWIN.WPRINT
  7002 4BCD 4C F5 4B			jmp l_2276
  7003 4BD0			l_225E
  7004
  7005 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 269
  7006
  7007 4BD0 E8				inx
  7008 4BD1 A9 31 95 94			mva #$31 :STACKORIGIN,x
  7009 4BD5 A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  7010 4BD9 E8				inx
  7011 4BDA A9 00 95 94			mva #$00 :STACKORIGIN,x
  7012 4BDE E8				inx
  7013 4BDF A9 03			lda #$03
  7014 4BE1 18 6D 0A 62			add BL
  7015 4BE5 95 94			sta :STACKORIGIN,x
  7016 4BE7 E8				inx
  7017 4BE8 A9 08 95 94			mva #$08 :STACKORIGIN,x
  7018 4BEC E8				inx
  7019 4BED AD 08 62 95 94		mva BW1 :STACKORIGIN,x
  7020 4BF2 20 F7 2E			jsr A8LIBWIN.WPRINT
  7021 4BF5			l_2276
  7022
  7023 				; optimize OK (appdemo.pas), line = 273
  7024
  7025 4BF5 AD 0A 62			lda BL
  7026 4BF8 18 69 01			add #$01
  7027 4BFB 85 84			sta :eax
  7028 4BFD A9 00			lda #$00
  7029 4BFF 69 00			adc #$00
  7030 4C01 85 85			sta :eax+1
  7031 4C03 A9 0A			lda #$0A
  7032 4C05 85 8C			sta :ecx
  7033 4C07 20 5E 26			jsr idivAX_CL.MOD
  7034 4C0A A5 90			lda :ztmp8
  7035 4C0C 8D 0C 62			sta IV
  7036 4C0F A9 00			lda #$00
  7037 4C11 8D 0D 62			sta IV+1
  7038 4C14 A8				tay
  7039 4C15 AD 0C 62			lda IV
  7040 4C18 0A				asl @
  7041 4C19 2E 0D 62			rol IV+1
  7042 4C1C 0A				asl @
  7043 4C1D 2E 0D 62			rol IV+1
  7044 4C20 18 6D 0C 62			add IV
  7045 4C24 8D 0C 62			sta IV
  7046 4C27 98				tya
  7047 4C28 6D 0D 62			adc IV+1
  7048 4C2B 0E 0C 62			asl IV
  7049 4C2E 2A				rol @
  7050 4C2F 8D 0D 62			sta IV+1
  7051
  7052 				; optimize OK (appdemo.pas), line = 274
  7053
  7054 4C32 0D 0C 62			ora IV
  7055 4C35 D0 0A			jne l_22AC
  7056
  7057 				; optimize OK (appdemo.pas), line = 276
  7058
  7059 4C37 A9 64			lda #$64
  7060 4C39 8D 0C 62			sta IV
  7061 4C3C A9 00			lda #$00
  7062 4C3E 8D 0D 62			sta IV+1
  7063 4C41			l_22AC
  7064
  7065 				; optimize OK (appdemo.pas), line = 278
  7066
  7067 4C41 AD 09 62			lda BW2
  7068 4C44 8D C7 5D			sta A8LIBGADG.GPROG.BN
  7069 4C47 A9 02			lda #$02
  7070 4C49 8D C8 5D			sta A8LIBGADG.GPROG.X
  7071 4C4C 8D C9 5D			sta A8LIBGADG.GPROG.Y
  7072 4C4F AD 0C 62			lda IV
  7073 4C52 8D CA 5D			sta A8LIBGADG.GPROG.BS
  7074 4C55 20 FC 33			jsr A8LIBGADG.GPROG
  7075
  7076 				; optimize OK (appdemo.pas), line = 281
  7077
  7078 4C58 A9 E8			lda #$E8
  7079 4C5A 8D 23 50			sta CRT.DELAY.COUNT
  7080 4C5D A9 03			lda #$03
  7081 4C5F 8D 24 50			sta CRT.DELAY.COUNT+1
  7082 4C62 20 94 27			jsr CRT.DELAY
  7083
  7084 				; --- ForToDoEpilog
  7085 4C65 EE 0A 62			inc BL
  7086 4C68 F0 03 4C 65 4B		jne l_2220
  7087 4C6D			l_222E
  7088
  7089 				; optimize FAIL ('A8LIBGADG.GALERT', appdemo.pas), line = 284
  7090
  7091 4C6D E8				inx
  7092 4C6E A9 37 95 94			mva #$37 :STACKORIGIN,x
  7093 4C72 A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  7094 4C76 20 14 33			jsr A8LIBGADG.GALERT
  7095
  7096 				; optimize OK (appdemo.pas), line = 287
  7097
  7098 4C79 AD 09 62			lda BW2
  7099 4C7C 20 25 2D			jsr A8LIBWIN.WCLOSE
  7100
  7101 				; optimize OK (appdemo.pas), line = 288
  7102
  7103 4C7F AD 08 62			lda BW1
  7104 4C82 20 25 2D			jsr A8LIBWIN.WCLOSE
  7105
  7106 				; ------------------------------------------------------------
  7107
  7108 = 6208			BW1	= DATAORIGIN+$11F4
  7109 = 6209			BW2	= DATAORIGIN+$11F5
  7110 = 620A			BL	= DATAORIGIN+$11F6
  7111 = 620B			BS	= DATAORIGIN+$11F7
  7112 = 620C			IV	= DATAORIGIN+$11F8
  7113
  7114 = 6208			@VarData	= BW1
  7115 = 0006			@VarDataSize	= 6
  7116
  7117 4C85			@exit
  7118 					.ifdef @new
  7119 					lda <@VarData
  7120 					sta :ztmp
  7121 					lda >@VarData
  7122 					ldy #@VarDataSize-1
  7123 					jmp @FreeMem
  7124 					els
  7125 4C85 60				rts						; ret
  7126 					eif
  7127 				.endl
  7128
  7129 4C86			.local	ABOUT						; PROCEDURE
  7130
  7131 				; optimize OK (appdemo.pas), line = 301
  7132
  7133 4C86 A9 01			lda #$01
  7134 4C88 8D C3 59			sta A8LIBWIN.WOPEN.X
  7135 4C8B A9 06			lda #$06
  7136 4C8D 8D C4 59			sta A8LIBWIN.WOPEN.Y
  7137 4C90 A9 26			lda #$26
  7138 4C92 8D C5 59			sta A8LIBWIN.WOPEN.W
  7139 4C95 A9 0F			lda #$0F
  7140 4C97 8D C6 59			sta A8LIBWIN.WOPEN.H
  7141 4C9A A9 00			lda #$00
  7142 4C9C 8D C7 59			sta A8LIBWIN.WOPEN.BT
  7143 4C9F 20 50 2B			jsr A8LIBWIN.WOPEN
  7144 4CA2 AD C8 59			lda A8LIBWIN.WOPEN.RESULT
  7145 4CA5 8D 0E 62			sta BW1
  7146
  7147 				; optimize FAIL ('A8LIBWIN.WORN', appdemo.pas), line = 302
  7148
  7149 4CA8 E8				inx
  7150 4CA9 A9 53 95 94			mva #$53 :STACKORIGIN,x
  7151 4CAD A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  7152 4CB1 E8				inx
  7153 4CB2 A9 FB 95 94			mva #$FB :STACKORIGIN,x
  7154 4CB6 E8				inx
  7155 4CB7 A9 F1 95 94			mva #$F1 :STACKORIGIN,x
  7156 4CBB E8				inx
  7157 4CBC AD 0E 62 95 94		mva BW1 :STACKORIGIN,x
  7158 4CC1 20 DE 30			jsr A8LIBWIN.WORN
  7159
  7160 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 303
  7161
  7162 4CC4 E8				inx
  7163 4CC5 A9 5A 95 94			mva #$5A :STACKORIGIN,x
  7164 4CC9 A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  7165 4CCD E8				inx
  7166 4CCE A9 00 95 94			mva #$00 :STACKORIGIN,x
  7167 4CD2 E8				inx
  7168 4CD3 A9 01 95 94			mva #$01 :STACKORIGIN,x
  7169 4CD7 E8				inx
  7170 4CD8 A9 FF 95 94			mva #$FF :STACKORIGIN,x
  7171 4CDC E8				inx
  7172 4CDD AD 0E 62 95 94		mva BW1 :STACKORIGIN,x
  7173 4CE2 20 F7 2E			jsr A8LIBWIN.WPRINT
  7174
  7175 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 304
  7176
  7177 4CE5 E8				inx
  7178 4CE6 A9 6C 95 94			mva #$6C :STACKORIGIN,x
  7179 4CEA A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  7180 4CEE E8				inx
  7181 4CEF A9 00 95 94			mva #$00 :STACKORIGIN,x
  7182 4CF3 E8				inx
  7183 4CF4 A9 02 95 94			mva #$02 :STACKORIGIN,x
  7184 4CF8 E8				inx
  7185 4CF9 A9 FF 95 94			mva #$FF :STACKORIGIN,x
  7186 4CFD E8				inx
  7187 4CFE AD 0E 62 95 94		mva BW1 :STACKORIGIN,x
  7188 4D03 20 F7 2E			jsr A8LIBWIN.WPRINT
  7189
  7190 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 305
  7191
  7192 4D06 E8				inx
  7193 4D07 A9 7E 95 94			mva #$7E :STACKORIGIN,x
  7194 4D0B A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  7195 4D0F E8				inx
  7196 4D10 A9 00 95 94			mva #$00 :STACKORIGIN,x
  7197 4D14 E8				inx
  7198 4D15 A9 03 95 94			mva #$03 :STACKORIGIN,x
  7199 4D19 E8				inx
  7200 4D1A A9 FF 95 94			mva #$FF :STACKORIGIN,x
  7201 4D1E E8				inx
  7202 4D1F AD 0E 62 95 94		mva BW1 :STACKORIGIN,x
  7203 4D24 20 F7 2E			jsr A8LIBWIN.WPRINT
  7204
  7205 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 306
  7206
  7207 4D27 E8				inx
  7208 4D28 A9 A0 95 94			mva #$A0 :STACKORIGIN,x
  7209 4D2C A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  7210 4D30 E8				inx
  7211 4D31 A9 00 95 94			mva #$00 :STACKORIGIN,x
  7212 4D35 E8				inx
  7213 4D36 A9 05 95 94			mva #$05 :STACKORIGIN,x
  7214 4D3A E8				inx
  7215 4D3B A9 FF 95 94			mva #$FF :STACKORIGIN,x
  7216 4D3F E8				inx
  7217 4D40 AD 0E 62 95 94		mva BW1 :STACKORIGIN,x
  7218 4D45 20 F7 2E			jsr A8LIBWIN.WPRINT
  7219
  7220 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 307
  7221
  7222 4D48 E8				inx
  7223 4D49 A9 BC 95 94			mva #$BC :STACKORIGIN,x
  7224 4D4D A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  7225 4D51 E8				inx
  7226 4D52 A9 00 95 94			mva #$00 :STACKORIGIN,x
  7227 4D56 E8				inx
  7228 4D57 A9 06 95 94			mva #$06 :STACKORIGIN,x
  7229 4D5B E8				inx
  7230 4D5C A9 FF 95 94			mva #$FF :STACKORIGIN,x
  7231 4D60 E8				inx
  7232 4D61 AD 0E 62 95 94		mva BW1 :STACKORIGIN,x
  7233 4D66 20 F7 2E			jsr A8LIBWIN.WPRINT
  7234
  7235 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 308
  7236
  7237 4D69 E8				inx
  7238 4D6A A9 D4 95 94			mva #$D4 :STACKORIGIN,x
  7239 4D6E A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  7240 4D72 E8				inx
  7241 4D73 A9 00 95 94			mva #$00 :STACKORIGIN,x
  7242 4D77 E8				inx
  7243 4D78 A9 07 95 94			mva #$07 :STACKORIGIN,x
  7244 4D7C E8				inx
  7245 4D7D A9 FF 95 94			mva #$FF :STACKORIGIN,x
  7246 4D81 E8				inx
  7247 4D82 AD 0E 62 95 94		mva BW1 :STACKORIGIN,x
  7248 4D87 20 F7 2E			jsr A8LIBWIN.WPRINT
  7249
  7250 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 309
  7251
  7252 4D8A E8				inx
  7253 4D8B A9 E7 95 94			mva #$E7 :STACKORIGIN,x
  7254 4D8F A9 22 95 A4			mva #$22 :STACKORIGIN+STACKWIDTH,x
  7255 4D93 E8				inx
  7256 4D94 A9 00 95 94			mva #$00 :STACKORIGIN,x
  7257 4D98 E8				inx
  7258 4D99 A9 09 95 94			mva #$09 :STACKORIGIN,x
  7259 4D9D E8				inx
  7260 4D9E A9 04 95 94			mva #$04 :STACKORIGIN,x
  7261 4DA2 E8				inx
  7262 4DA3 AD 0E 62 95 94		mva BW1 :STACKORIGIN,x
  7263 4DA8 20 F7 2E			jsr A8LIBWIN.WPRINT
  7264
  7265 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 310
  7266
  7267 4DAB E8				inx
  7268 4DAC A9 00 95 94			mva #$00 :STACKORIGIN,x
  7269 4DB0 A9 23 95 A4			mva #$23 :STACKORIGIN+STACKWIDTH,x
  7270 4DB4 E8				inx
  7271 4DB5 A9 00 95 94			mva #$00 :STACKORIGIN,x
  7272 4DB9 E8				inx
  7273 4DBA A9 0A 95 94			mva #$0A :STACKORIGIN,x
  7274 4DBE E8				inx
  7275 4DBF A9 02 95 94			mva #$02 :STACKORIGIN,x
  7276 4DC3 E8				inx
  7277 4DC4 AD 0E 62 95 94		mva BW1 :STACKORIGIN,x
  7278 4DC9 20 F7 2E			jsr A8LIBWIN.WPRINT
  7279
  7280 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 311
  7281
  7282 4DCC E8				inx
  7283 4DCD A9 1C 95 94			mva #$1C :STACKORIGIN,x
  7284 4DD1 A9 23 95 A4			mva #$23 :STACKORIGIN+STACKWIDTH,x
  7285 4DD5 E8				inx
  7286 4DD6 A9 00 95 94			mva #$00 :STACKORIGIN,x
  7287 4DDA E8				inx
  7288 4DDB A9 0B 95 94			mva #$0B :STACKORIGIN,x
  7289 4DDF E8				inx
  7290 4DE0 A9 02 95 94			mva #$02 :STACKORIGIN,x
  7291 4DE4 E8				inx
  7292 4DE5 AD 0E 62 95 94		mva BW1 :STACKORIGIN,x
  7293 4DEA 20 F7 2E			jsr A8LIBWIN.WPRINT
  7294
  7295 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 312
  7296
  7297 4DED E8				inx
  7298 4DEE A9 41 95 94			mva #$41 :STACKORIGIN,x
  7299 4DF2 A9 23 95 A4			mva #$23 :STACKORIGIN+STACKWIDTH,x
  7300 4DF6 E8				inx
  7301 4DF7 A9 01 95 94			mva #$01 :STACKORIGIN,x
  7302 4DFB E8				inx
  7303 4DFC A9 0D 95 94			mva #$0D :STACKORIGIN,x
  7304 4E00 E8				inx
  7305 4E01 A9 FF 95 94			mva #$FF :STACKORIGIN,x
  7306 4E05 E8				inx
  7307 4E06 AD 0E 62 95 94		mva BW1 :STACKORIGIN,x
  7308 4E0B 20 F7 2E			jsr A8LIBWIN.WPRINT
  7309
  7310 				; optimize OK (appdemo.pas), line = 315
  7311
  7312 4E0E A9 00			lda #$00
  7313 4E10 20 0B 28			jsr A8LIBMISC.WAITKCX
  7314
  7315 				; optimize OK (appdemo.pas), line = 318
  7316
  7317 4E13 AD 0E 62			lda BW1
  7318 4E16 20 25 2D			jsr A8LIBWIN.WCLOSE
  7319
  7320 				; ------------------------------------------------------------
  7321
  7322 = 620E			BW1	= DATAORIGIN+$11FA
  7323
  7324 = 620E			@VarData	= BW1
  7325 = 0001			@VarDataSize	= 1
  7326
  7327 4E19			@exit
  7328 					.ifdef @new
  7329 					lda <@VarData
  7330 					sta :ztmp
  7331 					lda >@VarData
  7332 					ldy #@VarDataSize-1
  7333 					jmp @FreeMem
  7334 					els
  7335 4E19 60				rts						; ret
  7336 					eif
  7337 				.endl
  7338
  7339 4E1A			.local	SUBMENU						; PROCEDURE
  7340
  7341 				; optimize OK (appdemo.pas), line = 334
  7342
  7343 4E1A A9 00			lda #$00
  7344 4E1C 8D 11 62			sta BD
  7345
  7346 				; optimize OK (appdemo.pas), line = 337
  7347
  7348 4E1F A9 10			lda #$10
  7349 4E21 8D C3 59			sta A8LIBWIN.WOPEN.X
  7350 4E24 A9 0A			lda #$0A
  7351 4E26 8D C4 59			sta A8LIBWIN.WOPEN.Y
  7352 4E29 A9 0E			lda #$0E
  7353 4E2B 8D C5 59			sta A8LIBWIN.WOPEN.W
  7354 4E2E A9 05			lda #$05
  7355 4E30 8D C6 59			sta A8LIBWIN.WOPEN.H
  7356 4E33 A9 00			lda #$00
  7357 4E35 8D C7 59			sta A8LIBWIN.WOPEN.BT
  7358 4E38 20 50 2B			jsr A8LIBWIN.WOPEN
  7359 4E3B AD C8 59			lda A8LIBWIN.WOPEN.RESULT
  7360 4E3E 8D 0F 62			sta BW1
  7361
  7362 				; optimize FAIL ('A8LIBWIN.WORN', appdemo.pas), line = 338
  7363
  7364 4E41 E8				inx
  7365 4E42 A9 71 95 94			mva #$71 :STACKORIGIN,x
  7366 4E46 A9 23 95 A4			mva #$23 :STACKORIGIN+STACKWIDTH,x
  7367 4E4A E8				inx
  7368 4E4B A9 FB 95 94			mva #$FB :STACKORIGIN,x
  7369 4E4F E8				inx
  7370 4E50 A9 F1 95 94			mva #$F1 :STACKORIGIN,x
  7371 4E54 E8				inx
  7372 4E55 AD 0F 62 95 94		mva BW1 :STACKORIGIN,x
  7373 4E5A 20 DE 30			jsr A8LIBWIN.WORN
  7374
  7375 				; --- WhileProlog
  7376 4E5D 4C D5 4E			jmp l_2350
  7377 4E60			l_2351
  7378
  7379 				; optimize OK (appdemo.pas), line = 344
  7380
  7381 4E60 AD 0F 62			lda BW1
  7382 4E63 8D D7 5F			sta A8LIBMENU.MENUV.BN
  7383 4E66 A9 01			lda #$01
  7384 4E68 8D D8 5F			sta A8LIBMENU.MENUV.X
  7385 4E6B 8D D9 5F			sta A8LIBMENU.MENUV.Y
  7386 4E6E A9 00			lda #$00
  7387 4E70 8D DA 5F			sta A8LIBMENU.MENUV.BI
  7388 4E73 A9 01			lda #$01
  7389 4E75 8D DB 5F			sta A8LIBMENU.MENUV.BS
  7390 4E78 A9 03			lda #$03
  7391 4E7A 8D DC 5F			sta A8LIBMENU.MENUV.BC
  7392 4E7D A9 04			lda #$04
  7393 4E7F 8D 5B 42			sta A8LIBMENU.MENUV.PS
  7394 4E82 A9 25			lda #$25
  7395 4E84 8D 5C 42			sta A8LIBMENU.MENUV.PS+1
  7396 4E87 20 52 40			jsr A8LIBMENU.MENUV
  7397 4E8A AD DF 5F			lda A8LIBMENU.MENUV.RESULT
  7398 4E8D 8D 10 62			sta BC
  7399
  7400 				; optimize OK (appdemo.pas), line = 347
  7401
  7402 4E90 8D 12 62			sta @CASETMP_0005
  7403 4E93 C9 01			cmp #$01
  7404 4E95 D0 0F			jne l_2369
  7405 				@
  7406
  7407 				; optimize FAIL ('A8LIBGADG.GALERT', appdemo.pas), line = 348
  7408
  7409 4E97 E8				inx
  7410 4E98 A9 7B 95 94			mva #$7B :STACKORIGIN,x
  7411 4E9C A9 23 95 A4			mva #$23 :STACKORIGIN+STACKWIDTH,x
  7412 4EA0 20 14 33			jsr A8LIBGADG.GALERT
  7413 4EA3 4C D5 4E			jmp a_0005
  7414 4EA6			l_2369
  7415 4EA6 C9 02			cmp #$02
  7416 4EA8 D0 0F			jne l_2374
  7417 				@
  7418
  7419 				; optimize FAIL ('A8LIBGADG.GALERT', appdemo.pas), line = 349
  7420
  7421 4EAA E8				inx
  7422 4EAB A9 93 95 94			mva #$93 :STACKORIGIN,x
  7423 4EAF A9 23 95 A4			mva #$23 :STACKORIGIN+STACKWIDTH,x
  7424 4EB3 20 14 33			jsr A8LIBGADG.GALERT
  7425 4EB6 4C D5 4E			jmp a_0005
  7426 4EB9			l_2374
  7427 4EB9 C9 03			cmp #$03
  7428 4EBB D0 0F			jne l_237F
  7429 				@
  7430
  7431 				; optimize FAIL ('A8LIBGADG.GALERT', appdemo.pas), line = 350
  7432
  7433 4EBD E8				inx
  7434 4EBE A9 AB 95 94			mva #$AB :STACKORIGIN,x
  7435 4EC2 A9 23 95 A4			mva #$23 :STACKORIGIN+STACKWIDTH,x
  7436 4EC6 20 14 33			jsr A8LIBGADG.GALERT
  7437 4EC9 4C D5 4E			jmp a_0005
  7438 4ECC			l_237F
  7439 4ECC C9 FD			cmp #$FD
  7440 4ECE D0 05			jne l_238A
  7441 				@
  7442
  7443 				; optimize OK (appdemo.pas), line = 351
  7444
  7445 4ED0 A9 01			lda #$01
  7446 4ED2 8D 11 62			sta BD
  7447
  7448 4ED5			l_238A
  7449 4ED5			a_0005
  7450 4ED5			l_2350
  7451
  7452 				; optimize OK (appdemo.pas), line = 341
  7453
  7454 4ED5 AD 11 62			lda BD
  7455 4ED8 F0 86			jeq l_2351
  7456
  7457 				; optimize OK (appdemo.pas), line = 356
  7458
  7459 4EDA AD 0F 62			lda BW1
  7460 4EDD 20 25 2D			jsr A8LIBWIN.WCLOSE
  7461
  7462 				; ------------------------------------------------------------
  7463
  7464 = 620F			BW1	= DATAORIGIN+$11FB
  7465 = 6210			BC	= DATAORIGIN+$11FC
  7466 = 6211			BD	= DATAORIGIN+$11FD
  7467 = 2504			adr.PCM	= CODEORIGIN+$0504
  7468 4EE0			.var PCM	= adr.PCM .word
  7469 = 6212			@CASETMP_0005	= DATAORIGIN+$11FE
  7470
  7471 = 620F			@VarData	= BW1
  7472 = 0004			@VarDataSize	= 4
  7473
  7474 4EE0			@exit
  7475 					.ifdef @new
  7476 					lda <@VarData
  7477 					sta :ztmp
  7478 					lda >@VarData
  7479 					ldy #@VarDataSize-1
  7480 					jmp @FreeMem
  7481 					els
  7482 4EE0 60				rts						; ret
  7483 					eif
  7484 = 4EE1 04 25		PCM
  7484 				.endl
  7485 4EE3			l_043B
  7486
  7487 				; optimize OK (appdemo.pas), line = 368
  7488
  7489 4EE3 A9 00			lda #$00
  7490 4EE5 8D 16 62			sta BD
  7491
  7492 				; optimize FAIL ('A8LIBWIN.WINIT', appdemo.pas), line = 371
  7493
  7494 4EE8 20 BC 2A			jsr A8LIBWIN.WINIT
  7495
  7496 				; optimize OK (appdemo.pas), line = 372
  7497
  7498 4EEB A9 0E			lda #$0E
  7499 4EED 20 34 2B			jsr A8LIBWIN.WBACK
  7500
  7501 				; optimize OK (appdemo.pas), line = 375
  7502
  7503 4EF0 A9 00			lda #$00
  7504 4EF2 8D C3 59			sta A8LIBWIN.WOPEN.X
  7505 4EF5 8D C4 59			sta A8LIBWIN.WOPEN.Y
  7506 4EF8 A9 28			lda #$28
  7507 4EFA 8D C5 59			sta A8LIBWIN.WOPEN.W
  7508 4EFD A9 03			lda #$03
  7509 4EFF 8D C6 59			sta A8LIBWIN.WOPEN.H
  7510 4F02 A9 01			lda #$01
  7511 4F04 8D C7 59			sta A8LIBWIN.WOPEN.BT
  7512 4F07 20 50 2B			jsr A8LIBWIN.WOPEN
  7513 4F0A AD C8 59			lda A8LIBWIN.WOPEN.RESULT
  7514 4F0D 8D 13 62			sta BW1
  7515
  7516 				; optimize FAIL ('A8LIBWIN.WPRINT', appdemo.pas), line = 376
  7517
  7518 4F10 E8				inx
  7519 4F11 A9 13 95 94			mva #$13 :STACKORIGIN,x
  7520 4F15 A9 24 95 A4			mva #$24 :STACKORIGIN+STACKWIDTH,x
  7521 4F19 E8				inx
  7522 4F1A A9 00 95 94			mva #$00 :STACKORIGIN,x
  7523 4F1E E8				inx
  7524 4F1F A9 01 95 94			mva #$01 :STACKORIGIN,x
  7525 4F23 E8				inx
  7526 4F24 A9 FF 95 94			mva #$FF :STACKORIGIN,x
  7527 4F28 E8				inx
  7528 4F29 AD 13 62 95 94		mva BW1 :STACKORIGIN,x
  7529 4F2E 20 F7 2E			jsr A8LIBWIN.WPRINT
  7530
  7531 				; optimize OK (appdemo.pas), line = 379
  7532
  7533 4F31 A9 0C			lda #$0C
  7534 4F33 8D C3 59			sta A8LIBWIN.WOPEN.X
  7535 4F36 A9 07			lda #$07
  7536 4F38 8D C4 59			sta A8LIBWIN.WOPEN.Y
  7537 4F3B A9 10			lda #$10
  7538 4F3D 8D C5 59			sta A8LIBWIN.WOPEN.W
  7539 4F40 A9 09			lda #$09
  7540 4F42 8D C6 59			sta A8LIBWIN.WOPEN.H
  7541 4F45 A9 00			lda #$00
  7542 4F47 8D C7 59			sta A8LIBWIN.WOPEN.BT
  7543 4F4A 20 50 2B			jsr A8LIBWIN.WOPEN
  7544 4F4D AD C8 59			lda A8LIBWIN.WOPEN.RESULT
  7545 4F50 8D 14 62			sta BW2
  7546
  7547 				; optimize FAIL ('A8LIBWIN.WORN', appdemo.pas), line = 380
  7548
  7549 4F53 E8				inx
  7550 4F54 A9 2E 95 94			mva #$2E :STACKORIGIN,x
  7551 4F58 A9 24 95 A4			mva #$24 :STACKORIGIN+STACKWIDTH,x
  7552 4F5C E8				inx
  7553 4F5D A9 FF 95 94			mva #$FF :STACKORIGIN,x
  7554 4F61 E8				inx
  7555 4F62 A9 F1 95 94			mva #$F1 :STACKORIGIN,x
  7556 4F66 E8				inx
  7557 4F67 AD 14 62 95 94		mva BW2 :STACKORIGIN,x
  7558 4F6C 20 DE 30			jsr A8LIBWIN.WORN
  7559
  7560 				; --- WhileProlog
  7561 4F6F 4C E9 4F			jmp l_23CE
  7562 4F72			l_23CF
  7563
  7564 				; optimize OK (appdemo.pas), line = 386
  7565
  7566 4F72 AD 14 62			lda BW2
  7567 4F75 8D D7 5F			sta A8LIBMENU.MENUV.BN
  7568 4F78 A9 01			lda #$01
  7569 4F7A 8D D8 5F			sta A8LIBMENU.MENUV.X
  7570 4F7D A9 02			lda #$02
  7571 4F7F 8D D9 5F			sta A8LIBMENU.MENUV.Y
  7572 4F82 A9 01			lda #$01
  7573 4F84 8D DA 5F			sta A8LIBMENU.MENUV.BI
  7574 4F87 8D DB 5F			sta A8LIBMENU.MENUV.BS
  7575 4F8A A9 05			lda #$05
  7576 4F8C 8D DC 5F			sta A8LIBMENU.MENUV.BC
  7577 4F8F A9 0A			lda #$0A
  7578 4F91 8D 5B 42			sta A8LIBMENU.MENUV.PS
  7579 4F94 A9 25			lda #$25
  7580 4F96 8D 5C 42			sta A8LIBMENU.MENUV.PS+1
  7581 4F99 20 52 40			jsr A8LIBMENU.MENUV
  7582 4F9C AD DF 5F			lda A8LIBMENU.MENUV.RESULT
  7583 4F9F 8D 15 62			sta BC
  7584
  7585 				; optimize OK (appdemo.pas), line = 389
  7586
  7587 4FA2 8D 17 62			sta @CASETMP_0006
  7588 4FA5 C9 01			cmp #$01
  7589 4FA7 D0 0D			jne l_23E7
  7590 				@
  7591
  7592 				; optimize FAIL ('FORMINPUT', appdemo.pas), line = 390
  7593
  7594 4FA9 20 61 42			jsr FORMINPUT
  7595 4FAC E8				inx
  7596 4FAD AD 0D 61 95 94		mva FORMINPUT.RESULT :STACKORIGIN,x
  7597 4FB2 CA				dex
  7598 4FB3 4C DD 4F			jmp a_0006
  7599 4FB6			l_23E7
  7600 4FB6 C9 02			cmp #$02
  7601 4FB8 D0 06			jne l_23F1
  7602 				@
  7603
  7604 				; optimize FAIL ('PROGTEST', appdemo.pas), line = 391
  7605
  7606 4FBA 20 89 4A			jsr PROGTEST
  7607 4FBD 4C DD 4F			jmp a_0006
  7608 4FC0			l_23F1
  7609 4FC0 C9 03			cmp #$03
  7610 4FC2 D0 06			jne l_23FB
  7611 				@
  7612
  7613 				; optimize FAIL ('SUBMENU', appdemo.pas), line = 392
  7614
  7615 4FC4 20 1A 4E			jsr SUBMENU
  7616 4FC7 4C DD 4F			jmp a_0006
  7617 4FCA			l_23FB
  7618 4FCA C9 04			cmp #$04
  7619 4FCC D0 06			jne l_2405
  7620 				@
  7621
  7622 				; optimize FAIL ('ABOUT', appdemo.pas), line = 393
  7623
  7624 4FCE 20 86 4C			jsr ABOUT
  7625 4FD1 4C DD 4F			jmp a_0006
  7626 4FD4			l_2405
  7627 4FD4 C9 05			cmp #$05
  7628 4FD6 D0 05			jne l_240F
  7629 				@
  7630
  7631 				; optimize OK (appdemo.pas), line = 394
  7632
  7633 4FD8 A9 01			lda #$01
  7634 4FDA 8D 16 62			sta BD
  7635
  7636 4FDD			l_240F
  7637 4FDD			a_0006
  7638
  7639 				; optimize OK (appdemo.pas), line = 398
  7640
  7641 4FDD AD 15 62			lda BC
  7642 4FE0 C9 FD			cmp #$FD
  7643 4FE2 D0 05			jne l_242E
  7644
  7645 				; optimize OK (appdemo.pas), line = 400
  7646
  7647 4FE4 A9 01			lda #$01
  7648 4FE6 8D 16 62			sta BD
  7649 4FE9			l_242E
  7650 4FE9			l_23CE
  7651
  7652 				; optimize OK (appdemo.pas), line = 383
  7653
  7654 4FE9 AD 16 62			lda BD
  7655 4FEC F0 84			jeq l_23CF
  7656
  7657 				; optimize OK (appdemo.pas), line = 405
  7658
  7659 4FEE AD 14 62			lda BW2
  7660 4FF1 20 25 2D			jsr A8LIBWIN.WCLOSE
  7661
  7662 				; optimize OK (appdemo.pas), line = 406
  7663
  7664 4FF4 AD 13 62			lda BW1
  7665 4FF7 20 25 2D			jsr A8LIBWIN.WCLOSE
  7666
  7667 				; ------------------------------------------------------------
  7668
  7669 = 6213			BW1	= DATAORIGIN+$11FF
  7670 = 6214			BW2	= DATAORIGIN+$1200
  7671 = 6215			BC	= DATAORIGIN+$1201
  7672 = 6216			BD	= DATAORIGIN+$1202
  7673 = 250A			adr.PCM	= CODEORIGIN+$050A
  7674 4FFA			.var PCM	= adr.PCM .word
  7675 = 6217			@CASETMP_0006	= DATAORIGIN+$1203
  7676 4FFA			@exit
  7677
  7678 4FFA A2 00		@halt	ldx #$00
  7679 4FFC 9A				txs
  7680 					.ifdef MAIN.@DEFINES.ROMOFF
  7681 					inc portb
  7682 					.fi
  7683
  7684 4FFD A0 01			ldy #$01
  7685
  7686 4FFF 60				rts
  7687
  7688 				; ------------------------------------------------------------
  7689
  7690 5000 00 00 00 00 00 00 + IOCB@COPY	:16 brk
  7691
  7692 				; ------------------------------------------------------------
  7693
  7694 5010			.local	@DEFINES
  7695 5010			ATARI
  7696 				.endl
  7697
  7698 5010			.local	@RESOURCE
  7699 				.endl
  7700
  7701 = 5010 0A 25		PCM
  7701 				.endl							; MAIN
  7702
  7703 				; ------------------------------------------------------------
  7704 				; ------------------------------------------------------------
  7705
  7706 				.macro	UNITINITIALIZATION
  7707 				
  7708 					.ifdef MAIN.SYSTEM.@UnitInit
  7709 					jsr MAIN.SYSTEM.@UnitInit
  7710 					.fi
  7711 				
  7712 					.ifdef MAIN.ATARI.@UnitInit
  7713 					jsr MAIN.ATARI.@UnitInit
  7714 					.fi
  7715 				
  7716 					.ifdef MAIN.CRT.@UnitInit
  7717 					jsr MAIN.CRT.@UnitInit
  7718 					.fi
  7719 				
  7720 					.ifdef MAIN.A8DEFINES.@UnitInit
  7721 					jsr MAIN.A8DEFINES.@UnitInit
  7722 					.fi
  7723 				
  7724 					.ifdef MAIN.A8DEFWIN.@UnitInit
  7725 					jsr MAIN.A8DEFWIN.@UnitInit
  7726 					.fi
  7727 				
  7728 					.ifdef MAIN.A8LIBMISC.@UnitInit
  7729 					jsr MAIN.A8LIBMISC.@UnitInit
  7730 					.fi
  7731 				
  7732 					.ifdef MAIN.A8LIBSTR.@UnitInit
  7733 					jsr MAIN.A8LIBSTR.@UnitInit
  7734 					.fi
  7735 				
  7736 					.ifdef MAIN.DOS.@UnitInit
  7737 					jsr MAIN.DOS.@UnitInit
  7738 					.fi
  7739 				
  7740 					.ifdef MAIN.STRUTILS.@UnitInit
  7741 					jsr MAIN.STRUTILS.@UnitInit
  7742 					.fi
  7743 				
  7744 					.ifdef MAIN.SYSUTILS.@UnitInit
  7745 					jsr MAIN.SYSUTILS.@UnitInit
  7746 					.fi
  7747 				
  7748 					.ifdef MAIN.A8LIBWIN.@UnitInit
  7749 					jsr MAIN.A8LIBWIN.@UnitInit
  7750 					.fi
  7751 				
  7752 					.ifdef MAIN.A8LIBGADG.@UnitInit
  7753 					jsr MAIN.A8LIBGADG.@UnitInit
  7754 					.fi
  7755 				
  7756 					.ifdef MAIN.A8LIBMENU.@UnitInit
  7757 					jsr MAIN.A8LIBMENU.@UnitInit
  7758 					.fi
  7759 				.endm
  7760
  7761 				; ------------------------------------------------------------
  7762
  7763 					ift .SIZEOF(MAIN.SYSTEM) > 0
  7764 					.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
  7764 				SYSTEM: $271B..$278D
  7765 					eif
  7766
  7767 					ift .SIZEOF(MAIN.ATARI) > 0
  7768 					.print 'ATARI: ',MAIN.ATARI,'..',MAIN.ATARI+.SIZEOF(MAIN.ATARI)-1
  7769 					eif
  7770
  7771 					ift .SIZEOF(MAIN.CRT) > 0
  7772 					.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
  7772 				CRT: $278E..$27EC
  7773 					eif
  7774
  7775 					ift .SIZEOF(MAIN.A8DEFINES) > 0
  7776 					.print 'A8DEFINES: ',MAIN.A8DEFINES,'..',MAIN.A8DEFINES+.SIZEOF(MAIN.A8DEFINES)-1
  7776 				A8DEFINES: $27ED..$27EE
  7777 					eif
  7778
  7779 					ift .SIZEOF(MAIN.A8DEFWIN) > 0
  7780 					.print 'A8DEFWIN: ',MAIN.A8DEFWIN,'..',MAIN.A8DEFWIN+.SIZEOF(MAIN.A8DEFWIN)-1
  7781 					eif
  7782
  7783 					ift .SIZEOF(MAIN.A8LIBMISC) > 0
  7784 					.print 'A8LIBMISC: ',MAIN.A8LIBMISC,'..',MAIN.A8LIBMISC+.SIZEOF(MAIN.A8LIBMISC)-1
  7784 				A8LIBMISC: $27EF..$28BE
  7785 					eif
  7786
  7787 					ift .SIZEOF(MAIN.A8LIBSTR) > 0
  7788 					.print 'A8LIBSTR: ',MAIN.A8LIBSTR,'..',MAIN.A8LIBSTR+.SIZEOF(MAIN.A8LIBSTR)-1
  7788 				A8LIBSTR: $28BF..$2ABB
  7789 					eif
  7790
  7791 					ift .SIZEOF(MAIN.DOS) > 0
  7792 					.print 'DOS: ',MAIN.DOS,'..',MAIN.DOS+.SIZEOF(MAIN.DOS)-1
  7793 					eif
  7794
  7795 					ift .SIZEOF(MAIN.STRUTILS) > 0
  7796 					.print 'STRUTILS: ',MAIN.STRUTILS,'..',MAIN.STRUTILS+.SIZEOF(MAIN.STRUTILS)-1
  7797 					eif
  7798
  7799 					ift .SIZEOF(MAIN.SYSUTILS) > 0
  7800 					.print 'SYSUTILS: ',MAIN.SYSUTILS,'..',MAIN.SYSUTILS+.SIZEOF(MAIN.SYSUTILS)-1
  7801 					eif
  7802
  7803 					ift .SIZEOF(MAIN.A8LIBWIN) > 0
  7804 					.print 'A8LIBWIN: ',MAIN.A8LIBWIN,'..',MAIN.A8LIBWIN+.SIZEOF(MAIN.A8LIBWIN)-1
  7804 				A8LIBWIN: $2ABC..$3313
  7805 					eif
  7806
  7807 					ift .SIZEOF(MAIN.A8LIBGADG) > 0
  7808 					.print 'A8LIBGADG: ',MAIN.A8LIBGADG,'..',MAIN.A8LIBGADG+.SIZEOF(MAIN.A8LIBGADG)-1
  7808 				A8LIBGADG: $3314..$4051
  7809 					eif
  7810
  7811 					ift .SIZEOF(MAIN.A8LIBMENU) > 0
  7812 					.print 'A8LIBMENU: ',MAIN.A8LIBMENU,'..',MAIN.A8LIBMENU+.SIZEOF(MAIN.A8LIBMENU)-1
  7812 				A8LIBMENU: $4052..$4260
  7813 					eif
  7814
  7815 					.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1
  7815 				CODE: $2000..$500F
  7816
  7817 				; ------------------------------------------------------------
  7818
  7819 5012				.align $0004
  7820
  7821 5014			DATAORIGIN
  7822 5014-5019> 28 00 18 00 + .by  $28 $00 $18 $00 $2D $0C
  7823
  7824 = 0006			VARINITSIZE	= *-DATAORIGIN
  7825 = 1204			VARDATASIZE	= 4612
  7826
  7827 = 6218			PROGRAMSTACK	= DATAORIGIN+VARDATASIZE
  7828
  7829 					.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK
  7829 				DATA: $5014..$6218
  7830
  7831 02E0-02E1> E0 26			run START
  7832
  7833 				; ------------------------------------------------------------
  7834
  7835 				.macro	STATICDATA
  7836 				.by  $05 $31 $2E $30 $2E $30 $00 $03  $20 $20 $20 $00 $04 $54 $52 $55  $45 $00 $05 $46 $41 $4C $53 $45
  7837 				.by  $00 $06 $41 $6C $65 $72 $74 $21  $00 $04 $20 $4F $4B $20 $00 $03  $5B $20 $5D $00 $06 $5B $20 $4F
  7838 				.by  $6B $20 $5D $00 $08 $5B $43 $61  $6E $63 $65 $6C $5D $00 $03 $4F  $6E $65 $00 $03 $54 $77 $6F $00
  7839 				.by  $05 $54 $68 $72 $65 $65 $00 $08  $43 $68 $6F $69 $63 $65 $20 $41  $00 $08 $43 $68 $6F $69 $63 $65
  7840 				.by  $20 $42 $00 $08 $43 $68 $6F $69  $63 $65 $20 $43 $00 $0E $4E $61  $76 $3A $20 $20 $20 $20 $20 $20
  7841 				.by  $20 $20 $20 $20 $00 $0E $4E $61  $76 $3A $20 $20 $20 $20 $5E $63  $53 $5E $63 $45 $00 $0E $4E $61
  7842 				.by  $76 $3A $58 $20 $20 $20 $20 $20  $20 $20 $20 $20 $00 $28 $2D $31  $30 $30 $2E $30 $30 $20 $20 $20
  7843 				.by  $20 $20 $20 $20 $20 $20 $20 $20  $20 $20 $20 $20 $20 $20 $20 $20  $20 $20 $20 $20 $20 $20 $20 $20
  7844 				.by  $20 $20 $20 $20 $20 $20 $00 $28  $54 $68 $69 $73 $20 $73 $74 $72  $69 $6E $67 $20 $68 $61 $73 $20
  7845 				.by  $73 $6F $6D $65 $74 $68 $69 $6E  $67 $20 $74 $6F $20 $65 $64 $69  $74 $20 $69 $6E $20 $69 $74 $21
  7846 				.by  $00 $28 $20 $20 $20 $20 $20 $20  $20 $20 $20 $20 $20 $20 $20 $20  $20 $20 $20 $20 $20 $20 $20 $20
  7847 				.by  $20 $20 $20 $20 $20 $20 $20 $20  $20 $20 $20 $20 $20 $20 $20 $20  $20 $20 $00 $28 $20 $41 $6E $79
  7848 				.by  $20 $63 $68 $61 $72 $61 $63 $74  $65 $72 $20 $73 $74 $72 $69 $6E  $67 $21 $20 $20 $20 $20 $20 $20
  7849 				.by  $20 $20 $20 $20 $20 $20 $20 $20  $20 $20 $20 $20 $00 $0A $49 $6E  $70 $75 $74 $20 $46 $6F $72 $6D
  7850 				.by  $00 $04 $45 $64 $69 $74 $00 $0B  $44 $61 $74 $61 $20 $46 $69 $65  $6C $64 $73 $00 $06 $4E $75 $6D
  7851 				.by  $65 $72 $3A $00 $06 $41 $6C $70  $68 $61 $3A $00 $06 $41 $6C $4E  $75 $6D $3A $00 $06 $41 $6E $79
  7852 				.by  $2E $2E $3A $00 $06 $53 $70 $69  $6E $2E $3A $00 $11 $52 $61 $64  $69 $6F $20 $42 $75 $74 $74 $6F
  7853 				.by  $6E $73 $20 $28 $68 $29 $00 $11  $52 $61 $64 $69 $6F $20 $42 $75  $74 $74 $6F $6E $73 $20 $28 $76
  7854 				.by  $29 $00 $0B $43 $68 $65 $63 $6B  $20 $42 $6F $78 $65 $73 $00 $04  $4D $69 $6C $6B $00 $05 $42 $72
  7855 				.by  $65 $61 $64 $00 $06 $42 $75 $74  $74 $65 $72 $00 $24 $44 $6F $69  $6E $67 $20 $73 $6F $6D $65 $74
  7856 				.by  $68 $69 $6E $67 $20 $77 $69 $74  $68 $20 $65 $6E $74 $65 $72 $65  $64 $20 $64 $61 $74 $61 $2E $2E
  7857 				.by  $2E $00 $06 $53 $74 $61 $74 $75  $73 $00 $0D $57 $69 $6E $64 $6F  $77 $20 $53 $74 $61 $74 $75 $73
  7858 				.by  $00 $0D $2D $2D $2D $2D $2D $2D  $20 $2D $2D $2D $2D $2D $2D $00  $09 $50 $72 $6F $67 $72 $65 $73
  7859 				.by  $73 $3A $00 $04 $55 $73 $65 $64  $00 $04 $46 $72 $65 $65 $00 $1A  $20 $50 $72 $65 $73 $73 $20 $61
  7860 				.by  $20 $6B $65 $79 $20 $74 $6F $20  $63 $6F $6E $74 $69 $6E $75 $65  $2E $20 $00 $05 $41 $62 $6F $75
  7861 				.by  $74 $00 $10 $44 $65 $6D $6F $20  $41 $70 $70 $6C $69 $63 $61 $74  $69 $6F $6E $00 $10 $56 $65 $72
  7862 				.by  $73 $69 $6F $6E $20 $31 $2E $30  $30 $2D $50 $41 $53 $00 $20 $28  $43 $29 $20 $32 $30 $32 $32 $20
  7863 				.by  $20 $57 $61 $64 $65 $20 $52 $69  $70 $6B $6F $77 $73 $6B $69 $2C  $20 $61 $6D $61 $72 $6F $6B $00
  7864 				.by  $1A $41 $70 $70 $6C $69 $63 $61  $74 $69 $6F $6E $20 $74 $6F $20  $64 $65 $6D $6F $6E $73 $74 $72
  7865 				.by  $61 $74 $65 $00 $16 $74 $68 $65  $20 $4D $61 $64 $50 $61 $73 $63  $61 $6C $20 $6C $69 $62 $72 $61
  7866 				.by  $72 $79 $2E $00 $11 $43 $6F $6E  $76 $65 $72 $74 $65 $64 $20 $66  $72 $6F $6D $20 $43 $2E $00 $17
  7867 				.by  $56 $31 $2D $32 $30 $32 $31 $2D  $41 $74 $61 $72 $69 $38 $3A $20  $41 $63 $74 $69 $6F $6E $21 $00
  7868 				.by  $1A $56 $31 $2D $43 $2D $32 $30  $32 $32 $2D $41 $74 $61 $72 $69  $38 $3A $20 $43 $20 $28 $43 $43
  7869 				.by  $36 $35 $29 $00 $23 $56 $31 $2D  $50 $41 $53 $2D $32 $30 $32 $32  $2D $41 $74 $61 $72 $69 $38 $3A
  7870 				.by  $20 $50 $41 $53 $20 $28 $4D $61  $64 $50 $61 $73 $63 $61 $6C $29  $00 $04 $20 $4F $6B $20 $00 $0C
  7871 				.by  $20 $53 $75 $62 $2D $49 $74 $65  $6D $20 $31 $20 $00 $0C $20 $53  $75 $62 $2D $49 $74 $65 $6D $20
  7872 				.by  $32 $20 $00 $0C $20 $53 $75 $62  $2D $49 $74 $65 $6D $20 $33 $20  $00 $08 $53 $75 $62 $2D $4D $65
  7873 				.by  $6E $75 $00 $16 $20 $53 $75 $62  $2D $49 $74 $65 $6D $20 $31 $20  $73 $65 $6C $65 $63 $74 $65 $64
  7874 				.by  $2E $20 $00 $16 $20 $53 $75 $62  $2D $49 $74 $65 $6D $20 $32 $20  $73 $65 $6C $65 $63 $74 $65 $64
  7875 				.by  $2E $20 $00 $16 $20 $53 $75 $62  $2D $49 $74 $65 $6D $20 $33 $20  $73 $65 $6C $65 $63 $74 $65 $64
  7876 				.by  $2E $20 $00 $0E $20 $49 $6E $70  $75 $74 $20 $46 $6F $72 $6D $20  $20 $20 $00 $0E $20 $50 $72 $6F
  7877 				.by  $67 $72 $65 $73 $73 $20 $42 $61  $72 $20 $00 $0E $20 $53 $75 $62  $2D $4D $65 $6E $75 $20 $20 $20
  7878 				.by  $20 $20 $00 $0E $20 $41 $62 $6F  $75 $74 $20 $20 $20 $20 $20 $20  $20 $20 $00 $0E $20 $45 $78 $69
  7879 				.by  $74 $20 $20 $20 $20 $20 $20 $20  $20 $20 $00 $19 $44 $20 $45 $20  $4D $20 $4F $20 $4E $20 $53 $20
  7880 				.by  $54 $20 $52 $20 $41 $20 $54 $20  $49 $20 $4F $20 $4E $00 $04 $4D  $65 $6E $75 $00 $6C $6A $3B $C7
  7881 				.by  $C7 $6B $2B $2A $6F $C7 $70 $75  $9B $69 $2D $3D $76 $C7 $63 $C7  $C7 $62 $78 $7A $34 $C7 $33 $36
  7882 				.by  $C7 $35 $32 $31 $2C $20 $2E $6E  $C7 $6D $2F $C7 $72 $C7 $65 $79  $C7 $74 $77 $71 $39 $C7 $30 $37
  7883 				.by  $C7 $38 $3C $3E $66 $68 $64 $C7  $C7 $67 $73 $61 $4C $4A $3A $C7  $C7 $4B $5C $5E $4F $C7 $50 $55
  7884 				.by  $C7 $49 $5F $7C $56 $C7 $43 $C7  $C7 $42 $58 $5A $24 $C7 $23 $26  $C7 $25 $22 $21 $5B $20 $5D $4E
  7885 				.by  $C7 $4D $3F $C7 $52 $C7 $45 $59  $C7 $54 $57 $51 $28 $C7 $29 $27  $C7 $40 $C7 $C7 $46 $48 $44 $C7
  7886 				.by  $C7 $47 $53 $41 $0C $0A $7B $C7  $C7 $0B $C7 $C7 $0F $C7 $10 $15  $C7 $09 $C7 $C7 $16 $C7 $03 $C7
  7887 				.by  $C7 $02 $18 $1A $C7 $C7 $C7 $C7  $C7 $C7 $C7 $C7 $C7 $C7 $60 $0E  $C7 $0D $C7 $C7 $12 $C7 $05 $19
  7888 				.by  $C7 $14 $17 $11 $C7 $C7 $C7 $C7  $C7 $C7 $C7 $C7 $06 $08 $04 $C7  $C7 $07 $13 $01 $2C $20 $34 $20
  7889 				.by  $3E $20 $43 $20 $48 $20 $4F $20  $59 $20 $63 $20 $47 $23 $55 $23  $63 $23 $C3 $23 $D3 $23 $E3 $23
  7890 				.by  $F3 $23 $03 $24
  7891 				.endm
  7892
  7893 					end
